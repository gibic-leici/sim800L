
sim800L.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004878  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000440  08004984  08004984  00014984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004dc4  08004dc4  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08004dc4  08004dc4  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004dc4  08004dc4  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004dc4  08004dc4  00014dc4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004dc8  08004dc8  00014dc8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08004dcc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000bc  20000070  08004e3c  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000012c  08004e3c  0002012c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   000076f8  00000000  00000000  00020099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000019d8  00000000  00000000  00027791  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000007f0  00000000  00000000  00029170  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000748  00000000  00000000  00029960  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017c1f  00000000  00000000  0002a0a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000088ea  00000000  00000000  00041cc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083c6b  00000000  00000000  0004a5b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ce21c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002c18  00000000  00000000  000ce26c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000070 	.word	0x20000070
 8000128:	00000000 	.word	0x00000000
 800012c:	0800496c 	.word	0x0800496c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000074 	.word	0x20000074
 8000148:	0800496c 	.word	0x0800496c

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <__io_putchar>:
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#define GETCHAR_PROTOTYPE int fgetc(FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 800015c:	b580      	push	{r7, lr}
 800015e:	b082      	sub	sp, #8
 8000160:	af00      	add	r7, sp, #0
 8000162:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8000164:	1d39      	adds	r1, r7, #4
 8000166:	f04f 33ff 	mov.w	r3, #4294967295
 800016a:	2201      	movs	r2, #1
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <__io_putchar+0x20>)
 800016e:	f001 fdde 	bl	8001d2e <HAL_UART_Transmit>
  return ch;
 8000172:	687b      	ldr	r3, [r7, #4]
}
 8000174:	4618      	mov	r0, r3
 8000176:	3708      	adds	r7, #8
 8000178:	46bd      	mov	sp, r7
 800017a:	bd80      	pop	{r7, pc}
 800017c:	2000008c 	.word	0x2000008c

08000180 <__io_getchar>:

GETCHAR_PROTOTYPE
{
 8000180:	b580      	push	{r7, lr}
 8000182:	b082      	sub	sp, #8
 8000184:	af00      	add	r7, sp, #0
  uint8_t ch = 0;
 8000186:	2300      	movs	r3, #0
 8000188:	71fb      	strb	r3, [r7, #7]

  /* Clear the Overrun flag just before receiving the first character */
  __HAL_UART_CLEAR_OREFLAG(&huart1);
 800018a:	2300      	movs	r3, #0
 800018c:	603b      	str	r3, [r7, #0]
 800018e:	4b0e      	ldr	r3, [pc, #56]	; (80001c8 <__io_getchar+0x48>)
 8000190:	681b      	ldr	r3, [r3, #0]
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	603b      	str	r3, [r7, #0]
 8000196:	4b0c      	ldr	r3, [pc, #48]	; (80001c8 <__io_getchar+0x48>)
 8000198:	681b      	ldr	r3, [r3, #0]
 800019a:	685b      	ldr	r3, [r3, #4]
 800019c:	603b      	str	r3, [r7, #0]
 800019e:	683b      	ldr	r3, [r7, #0]

  /* Wait for reception of a character on the USART RX line and echo this
   * character on console */
  HAL_UART_Receive(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80001a0:	1df9      	adds	r1, r7, #7
 80001a2:	f04f 33ff 	mov.w	r3, #4294967295
 80001a6:	2201      	movs	r2, #1
 80001a8:	4807      	ldr	r0, [pc, #28]	; (80001c8 <__io_getchar+0x48>)
 80001aa:	f001 fe52 	bl	8001e52 <HAL_UART_Receive>
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80001ae:	1df9      	adds	r1, r7, #7
 80001b0:	f04f 33ff 	mov.w	r3, #4294967295
 80001b4:	2201      	movs	r2, #1
 80001b6:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__io_getchar+0x48>)
 80001b8:	f001 fdb9 	bl	8001d2e <HAL_UART_Transmit>
  return ch;
 80001bc:	79fb      	ldrb	r3, [r7, #7]
}
 80001be:	4618      	mov	r0, r3
 80001c0:	3708      	adds	r7, #8
 80001c2:	46bd      	mov	sp, r7
 80001c4:	bd80      	pop	{r7, pc}
 80001c6:	bf00      	nop
 80001c8:	2000008c 	.word	0x2000008c

080001cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80001cc:	b5b0      	push	{r4, r5, r7, lr}
 80001ce:	f5ad 6d8b 	sub.w	sp, sp, #1112	; 0x458
 80001d2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80001d4:	f000 fd4a 	bl	8000c6c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80001d8:	f000 f8e0 	bl	800039c <SystemClock_Config>

  /* USER CODE BEGIN SysInit */

  setvbuf(stdin, NULL, _IONBF, 0);	// Esto es necesario para que scanf ande bien
 80001dc:	4b60      	ldr	r3, [pc, #384]	; (8000360 <main+0x194>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	6858      	ldr	r0, [r3, #4]
 80001e2:	2300      	movs	r3, #0
 80001e4:	2202      	movs	r2, #2
 80001e6:	2100      	movs	r1, #0
 80001e8:	f002 fe78 	bl	8002edc <setvbuf>
  	  	  	  	  	  	  	  	    // con esto y lo de arriba ya anda el scanf :)

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80001ec:	f000 f966 	bl	80004bc <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80001f0:	f000 f910 	bl	8000414 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80001f4:	f000 f938 	bl	8000468 <MX_USART2_UART_Init>

  /* USER CODE BEGIN 2 */

  printf("Test de comandos AT... \r\n");
 80001f8:	485a      	ldr	r0, [pc, #360]	; (8000364 <main+0x198>)
 80001fa:	f002 fe3f 	bl	8002e7c <puts>

  // Inicializacion de la clase con la que manejo el sim800L

  SIM800 sim800;
  InitSIM(&sim800,&huart2);
 80001fe:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000202:	4959      	ldr	r1, [pc, #356]	; (8000368 <main+0x19c>)
 8000204:	4618      	mov	r0, r3
 8000206:	f000 f9b3 	bl	8000570 <InitSIM>
  HAL_Delay(1000);
 800020a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800020e:	f000 fd8f 	bl	8000d30 <HAL_Delay>

  EnviarAT(&sim800);
 8000212:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000216:	4618      	mov	r0, r3
 8000218:	f000 f9f2 	bl	8000600 <EnviarAT>
  ConsultarSignal(&sim800);
 800021c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000220:	4618      	mov	r0, r3
 8000222:	f000 fa33 	bl	800068c <ConsultarSignal>
  ConsultarEstadoSIM(&sim800);
 8000226:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800022a:	4618      	mov	r0, r3
 800022c:	f000 fa40 	bl	80006b0 <ConsultarEstadoSIM>
//  ListarRedesDisponibles(&sim800);

  //EnviarSMS(&sim800,"+5492966544589","Hola desde el SIM800");

  ListarSMS(&sim800);
 8000230:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000234:	4618      	mov	r0, r3
 8000236:	f000 fa4d 	bl	80006d4 <ListarSMS>
  BorrarAllSMS(&sim800);
 800023a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800023e:	4618      	mov	r0, r3
 8000240:	f000 fa5a 	bl	80006f8 <BorrarAllSMS>



  while (1)
  {
	printf("Bienvenido al Test de SIM800L\r\n");
 8000244:	4849      	ldr	r0, [pc, #292]	; (800036c <main+0x1a0>)
 8000246:	f002 fe19 	bl	8002e7c <puts>
	printf("1) Ingresar comandos AT manualmente\r\n");
 800024a:	4849      	ldr	r0, [pc, #292]	; (8000370 <main+0x1a4>)
 800024c:	f002 fe16 	bl	8002e7c <puts>
	printf("2) Ingresar al modo SMS \r\n");
 8000250:	4848      	ldr	r0, [pc, #288]	; (8000374 <main+0x1a8>)
 8000252:	f002 fe13 	bl	8002e7c <puts>

	int opcion1;
	char opcion2;
	scanf("%d",&opcion1);
 8000256:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800025a:	4619      	mov	r1, r3
 800025c:	4846      	ldr	r0, [pc, #280]	; (8000378 <main+0x1ac>)
 800025e:	f002 fe25 	bl	8002eac <iscanf>

	switch(opcion1)
 8000262:	f507 638b 	add.w	r3, r7, #1112	; 0x458
 8000266:	f2a3 4324 	subw	r3, r3, #1060	; 0x424
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b01      	cmp	r3, #1
 800026e:	d003      	beq.n	8000278 <main+0xac>
 8000270:	2b02      	cmp	r3, #2
 8000272:	d021      	beq.n	80002b8 <main+0xec>
 8000274:	e073      	b.n	800035e <main+0x192>
	{
	case 1:
 8000276:	bf00      	nop
		do{
			printf("Ingrese el comando AT que desea enviar al modulo \r\n:");
 8000278:	4840      	ldr	r0, [pc, #256]	; (800037c <main+0x1b0>)
 800027a:	f002 fd79 	bl	8002d70 <iprintf>
			EnviarPuertoSerie(&sim800);
 800027e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000282:	4618      	mov	r0, r3
 8000284:	f000 f9ce 	bl	8000624 <EnviarPuertoSerie>

			printf("Desea ingresar otro comando? (s/n) \r\n");
 8000288:	483d      	ldr	r0, [pc, #244]	; (8000380 <main+0x1b4>)
 800028a:	f002 fdf7 	bl	8002e7c <puts>
			fflush(stdin);
 800028e:	4b34      	ldr	r3, [pc, #208]	; (8000360 <main+0x194>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	685b      	ldr	r3, [r3, #4]
 8000294:	4618      	mov	r0, r3
 8000296:	f002 fb3b 	bl	8002910 <fflush>
			scanf("%c",&opcion2);
 800029a:	f107 0333 	add.w	r3, r7, #51	; 0x33
 800029e:	4619      	mov	r1, r3
 80002a0:	4838      	ldr	r0, [pc, #224]	; (8000384 <main+0x1b8>)
 80002a2:	f002 fe03 	bl	8002eac <iscanf>
			}while( opcion2 == 's');
 80002a6:	f507 638b 	add.w	r3, r7, #1112	; 0x458
 80002aa:	f2a3 4325 	subw	r3, r3, #1061	; 0x425
 80002ae:	781b      	ldrb	r3, [r3, #0]
 80002b0:	2b73      	cmp	r3, #115	; 0x73
 80002b2:	d0e0      	beq.n	8000276 <main+0xaa>
		break;
 80002b4:	e053      	b.n	800035e <main+0x192>
	case 2:
 80002b6:	bf00      	nop
			do{
				printf("Esperando por SMS...\r\n");
 80002b8:	4833      	ldr	r0, [pc, #204]	; (8000388 <main+0x1bc>)
 80002ba:	f002 fddf 	bl	8002e7c <puts>
				char comando1 [LEN_CMD] = "\r\nLED_TOGGLE\r\n";
 80002be:	f507 638b 	add.w	r3, r7, #1112	; 0x458
 80002c2:	f5a3 658b 	sub.w	r5, r3, #1112	; 0x458
 80002c6:	4b31      	ldr	r3, [pc, #196]	; (800038c <main+0x1c0>)
 80002c8:	462c      	mov	r4, r5
 80002ca:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80002cc:	c407      	stmia	r4!, {r0, r1, r2}
 80002ce:	8023      	strh	r3, [r4, #0]
 80002d0:	3402      	adds	r4, #2
 80002d2:	0c1b      	lsrs	r3, r3, #16
 80002d4:	7023      	strb	r3, [r4, #0]
 80002d6:	f105 030f 	add.w	r3, r5, #15
 80002da:	2223      	movs	r2, #35	; 0x23
 80002dc:	2100      	movs	r1, #0
 80002de:	4618      	mov	r0, r3
 80002e0:	f002 fc61 	bl	8002ba6 <memset>

				while(ListenSMS(&sim800)==0)
 80002e4:	bf00      	nop
 80002e6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80002ea:	4618      	mov	r0, r3
 80002ec:	f000 fa36 	bl	800075c <ListenSMS>
 80002f0:	4603      	mov	r3, r0
 80002f2:	2b00      	cmp	r3, #0
 80002f4:	d0f7      	beq.n	80002e6 <main+0x11a>
				{
					//HAL_Delay(1000);
				}

				printf("Texto del mensaje: %s",sim800.txt_last_sms);
 80002f6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80002fa:	f503 737b 	add.w	r3, r3, #1004	; 0x3ec
 80002fe:	4619      	mov	r1, r3
 8000300:	4823      	ldr	r0, [pc, #140]	; (8000390 <main+0x1c4>)
 8000302:	f002 fd35 	bl	8002d70 <iprintf>
				if(strncmp((sim800.txt_last_sms),comando1,strlen(comando1)) == 0)
 8000306:	463b      	mov	r3, r7
 8000308:	4618      	mov	r0, r3
 800030a:	f7ff ff1f 	bl	800014c <strlen>
 800030e:	4602      	mov	r2, r0
 8000310:	4639      	mov	r1, r7
 8000312:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000316:	f503 737b 	add.w	r3, r3, #1004	; 0x3ec
 800031a:	4618      	mov	r0, r3
 800031c:	f002 ff07 	bl	800312e <strncmp>
 8000320:	4603      	mov	r3, r0
 8000322:	2b00      	cmp	r3, #0
 8000324:	d104      	bne.n	8000330 <main+0x164>
				{
					HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 8000326:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800032a:	481a      	ldr	r0, [pc, #104]	; (8000394 <main+0x1c8>)
 800032c:	f001 f87e 	bl	800142c <HAL_GPIO_TogglePin>
				}

				printf("Desea esperar por otro SMS? (s/n) \r\n");
 8000330:	4819      	ldr	r0, [pc, #100]	; (8000398 <main+0x1cc>)
 8000332:	f002 fda3 	bl	8002e7c <puts>
				fflush(stdin);
 8000336:	4b0a      	ldr	r3, [pc, #40]	; (8000360 <main+0x194>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	685b      	ldr	r3, [r3, #4]
 800033c:	4618      	mov	r0, r3
 800033e:	f002 fae7 	bl	8002910 <fflush>
				scanf("%c",&opcion2);
 8000342:	f107 0333 	add.w	r3, r7, #51	; 0x33
 8000346:	4619      	mov	r1, r3
 8000348:	480e      	ldr	r0, [pc, #56]	; (8000384 <main+0x1b8>)
 800034a:	f002 fdaf 	bl	8002eac <iscanf>
				}while( opcion2 == 's');
 800034e:	f507 638b 	add.w	r3, r7, #1112	; 0x458
 8000352:	f2a3 4325 	subw	r3, r3, #1061	; 0x425
 8000356:	781b      	ldrb	r3, [r3, #0]
 8000358:	2b73      	cmp	r3, #115	; 0x73
 800035a:	d0ac      	beq.n	80002b6 <main+0xea>
			break;
 800035c:	bf00      	nop
  {
 800035e:	e771      	b.n	8000244 <main+0x78>
 8000360:	2000000c 	.word	0x2000000c
 8000364:	08004984 	.word	0x08004984
 8000368:	200000d0 	.word	0x200000d0
 800036c:	080049a0 	.word	0x080049a0
 8000370:	080049c0 	.word	0x080049c0
 8000374:	080049e8 	.word	0x080049e8
 8000378:	08004a04 	.word	0x08004a04
 800037c:	08004a08 	.word	0x08004a08
 8000380:	08004a40 	.word	0x08004a40
 8000384:	08004a68 	.word	0x08004a68
 8000388:	08004a6c 	.word	0x08004a6c
 800038c:	08004ac0 	.word	0x08004ac0
 8000390:	08004a84 	.word	0x08004a84
 8000394:	40011000 	.word	0x40011000
 8000398:	08004a9c 	.word	0x08004a9c

0800039c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b090      	sub	sp, #64	; 0x40
 80003a0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80003a2:	f107 0318 	add.w	r3, r7, #24
 80003a6:	2228      	movs	r2, #40	; 0x28
 80003a8:	2100      	movs	r1, #0
 80003aa:	4618      	mov	r0, r3
 80003ac:	f002 fbfb 	bl	8002ba6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80003b0:	1d3b      	adds	r3, r7, #4
 80003b2:	2200      	movs	r2, #0
 80003b4:	601a      	str	r2, [r3, #0]
 80003b6:	605a      	str	r2, [r3, #4]
 80003b8:	609a      	str	r2, [r3, #8]
 80003ba:	60da      	str	r2, [r3, #12]
 80003bc:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80003be:	2302      	movs	r3, #2
 80003c0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80003c2:	2301      	movs	r3, #1
 80003c4:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80003c6:	2310      	movs	r3, #16
 80003c8:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80003ca:	2300      	movs	r3, #0
 80003cc:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80003ce:	f107 0318 	add.w	r3, r7, #24
 80003d2:	4618      	mov	r0, r3
 80003d4:	f001 f844 	bl	8001460 <HAL_RCC_OscConfig>
 80003d8:	4603      	mov	r3, r0
 80003da:	2b00      	cmp	r3, #0
 80003dc:	d001      	beq.n	80003e2 <SystemClock_Config+0x46>
  {
    Error_Handler();
 80003de:	f000 f8c1 	bl	8000564 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80003e2:	230f      	movs	r3, #15
 80003e4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80003e6:	2300      	movs	r3, #0
 80003e8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80003ea:	2300      	movs	r3, #0
 80003ec:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80003ee:	2300      	movs	r3, #0
 80003f0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80003f2:	2300      	movs	r3, #0
 80003f4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80003f6:	1d3b      	adds	r3, r7, #4
 80003f8:	2100      	movs	r1, #0
 80003fa:	4618      	mov	r0, r3
 80003fc:	f001 fab2 	bl	8001964 <HAL_RCC_ClockConfig>
 8000400:	4603      	mov	r3, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d001      	beq.n	800040a <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000406:	f000 f8ad 	bl	8000564 <Error_Handler>
  }
}
 800040a:	bf00      	nop
 800040c:	3740      	adds	r7, #64	; 0x40
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}
	...

08000414 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000418:	4b11      	ldr	r3, [pc, #68]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 800041a:	4a12      	ldr	r2, [pc, #72]	; (8000464 <MX_USART1_UART_Init+0x50>)
 800041c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800041e:	4b10      	ldr	r3, [pc, #64]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 8000420:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000424:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000426:	4b0e      	ldr	r3, [pc, #56]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 8000428:	2200      	movs	r2, #0
 800042a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800042c:	4b0c      	ldr	r3, [pc, #48]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 800042e:	2200      	movs	r2, #0
 8000430:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000432:	4b0b      	ldr	r3, [pc, #44]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 8000434:	2200      	movs	r2, #0
 8000436:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000438:	4b09      	ldr	r3, [pc, #36]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 800043a:	220c      	movs	r2, #12
 800043c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800043e:	4b08      	ldr	r3, [pc, #32]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 8000440:	2200      	movs	r2, #0
 8000442:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000444:	4b06      	ldr	r3, [pc, #24]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 8000446:	2200      	movs	r2, #0
 8000448:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800044a:	4805      	ldr	r0, [pc, #20]	; (8000460 <MX_USART1_UART_Init+0x4c>)
 800044c:	f001 fc22 	bl	8001c94 <HAL_UART_Init>
 8000450:	4603      	mov	r3, r0
 8000452:	2b00      	cmp	r3, #0
 8000454:	d001      	beq.n	800045a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000456:	f000 f885 	bl	8000564 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800045a:	bf00      	nop
 800045c:	bd80      	pop	{r7, pc}
 800045e:	bf00      	nop
 8000460:	2000008c 	.word	0x2000008c
 8000464:	40013800 	.word	0x40013800

08000468 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000468:	b580      	push	{r7, lr}
 800046a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800046c:	4b11      	ldr	r3, [pc, #68]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 800046e:	4a12      	ldr	r2, [pc, #72]	; (80004b8 <MX_USART2_UART_Init+0x50>)
 8000470:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000472:	4b10      	ldr	r3, [pc, #64]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 8000474:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000478:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800047a:	4b0e      	ldr	r3, [pc, #56]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 800047c:	2200      	movs	r2, #0
 800047e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000480:	4b0c      	ldr	r3, [pc, #48]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 8000482:	2200      	movs	r2, #0
 8000484:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000486:	4b0b      	ldr	r3, [pc, #44]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 8000488:	2200      	movs	r2, #0
 800048a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800048c:	4b09      	ldr	r3, [pc, #36]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 800048e:	220c      	movs	r2, #12
 8000490:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000492:	4b08      	ldr	r3, [pc, #32]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 8000494:	2200      	movs	r2, #0
 8000496:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000498:	4b06      	ldr	r3, [pc, #24]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 800049a:	2200      	movs	r2, #0
 800049c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800049e:	4805      	ldr	r0, [pc, #20]	; (80004b4 <MX_USART2_UART_Init+0x4c>)
 80004a0:	f001 fbf8 	bl	8001c94 <HAL_UART_Init>
 80004a4:	4603      	mov	r3, r0
 80004a6:	2b00      	cmp	r3, #0
 80004a8:	d001      	beq.n	80004ae <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80004aa:	f000 f85b 	bl	8000564 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80004ae:	bf00      	nop
 80004b0:	bd80      	pop	{r7, pc}
 80004b2:	bf00      	nop
 80004b4:	200000d0 	.word	0x200000d0
 80004b8:	40004400 	.word	0x40004400

080004bc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80004bc:	b580      	push	{r7, lr}
 80004be:	b086      	sub	sp, #24
 80004c0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80004c2:	f107 0308 	add.w	r3, r7, #8
 80004c6:	2200      	movs	r2, #0
 80004c8:	601a      	str	r2, [r3, #0]
 80004ca:	605a      	str	r2, [r3, #4]
 80004cc:	609a      	str	r2, [r3, #8]
 80004ce:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80004d0:	4b21      	ldr	r3, [pc, #132]	; (8000558 <MX_GPIO_Init+0x9c>)
 80004d2:	699b      	ldr	r3, [r3, #24]
 80004d4:	4a20      	ldr	r2, [pc, #128]	; (8000558 <MX_GPIO_Init+0x9c>)
 80004d6:	f043 0310 	orr.w	r3, r3, #16
 80004da:	6193      	str	r3, [r2, #24]
 80004dc:	4b1e      	ldr	r3, [pc, #120]	; (8000558 <MX_GPIO_Init+0x9c>)
 80004de:	699b      	ldr	r3, [r3, #24]
 80004e0:	f003 0310 	and.w	r3, r3, #16
 80004e4:	607b      	str	r3, [r7, #4]
 80004e6:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80004e8:	4b1b      	ldr	r3, [pc, #108]	; (8000558 <MX_GPIO_Init+0x9c>)
 80004ea:	699b      	ldr	r3, [r3, #24]
 80004ec:	4a1a      	ldr	r2, [pc, #104]	; (8000558 <MX_GPIO_Init+0x9c>)
 80004ee:	f043 0304 	orr.w	r3, r3, #4
 80004f2:	6193      	str	r3, [r2, #24]
 80004f4:	4b18      	ldr	r3, [pc, #96]	; (8000558 <MX_GPIO_Init+0x9c>)
 80004f6:	699b      	ldr	r3, [r3, #24]
 80004f8:	f003 0304 	and.w	r3, r3, #4
 80004fc:	603b      	str	r3, [r7, #0]
 80004fe:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8000500:	2200      	movs	r2, #0
 8000502:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000506:	4815      	ldr	r0, [pc, #84]	; (800055c <MX_GPIO_Init+0xa0>)
 8000508:	f000 ff78 	bl	80013fc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RST_SIM_GPIO_Port, RST_SIM_Pin, GPIO_PIN_SET);
 800050c:	2201      	movs	r2, #1
 800050e:	2120      	movs	r1, #32
 8000510:	4813      	ldr	r0, [pc, #76]	; (8000560 <MX_GPIO_Init+0xa4>)
 8000512:	f000 ff73 	bl	80013fc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8000516:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800051a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800051c:	2301      	movs	r3, #1
 800051e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000520:	2302      	movs	r3, #2
 8000522:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000524:	2302      	movs	r3, #2
 8000526:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000528:	f107 0308 	add.w	r3, r7, #8
 800052c:	4619      	mov	r1, r3
 800052e:	480b      	ldr	r0, [pc, #44]	; (800055c <MX_GPIO_Init+0xa0>)
 8000530:	f000 fde0 	bl	80010f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : RST_SIM_Pin */
  GPIO_InitStruct.Pin = RST_SIM_Pin;
 8000534:	2320      	movs	r3, #32
 8000536:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000538:	2301      	movs	r3, #1
 800053a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800053c:	2301      	movs	r3, #1
 800053e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000540:	2302      	movs	r3, #2
 8000542:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(RST_SIM_GPIO_Port, &GPIO_InitStruct);
 8000544:	f107 0308 	add.w	r3, r7, #8
 8000548:	4619      	mov	r1, r3
 800054a:	4805      	ldr	r0, [pc, #20]	; (8000560 <MX_GPIO_Init+0xa4>)
 800054c:	f000 fdd2 	bl	80010f4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000550:	bf00      	nop
 8000552:	3718      	adds	r7, #24
 8000554:	46bd      	mov	sp, r7
 8000556:	bd80      	pop	{r7, pc}
 8000558:	40021000 	.word	0x40021000
 800055c:	40011000 	.word	0x40011000
 8000560:	40010800 	.word	0x40010800

08000564 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000564:	b480      	push	{r7}
 8000566:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000568:	b672      	cpsid	i
}
 800056a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800056c:	e7fe      	b.n	800056c <Error_Handler+0x8>
	...

08000570 <InitSIM>:
#include "main.h"
#include <string.h>
#include <stdio.h>


void InitSIM(SIM800* sim, UART_HandleTypeDef * huart){
 8000570:	b580      	push	{r7, lr}
 8000572:	b082      	sub	sp, #8
 8000574:	af00      	add	r7, sp, #0
 8000576:	6078      	str	r0, [r7, #4]
 8000578:	6039      	str	r1, [r7, #0]
	sim-> huart = huart;
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	683a      	ldr	r2, [r7, #0]
 800057e:	601a      	str	r2, [r3, #0]
	EnviarComandoAT(sim,"AT+CMGF=1\r\n"); // Activa modo texto
 8000580:	490d      	ldr	r1, [pc, #52]	; (80005b8 <InitSIM+0x48>)
 8000582:	6878      	ldr	r0, [r7, #4]
 8000584:	f000 f81c 	bl	80005c0 <EnviarComandoAT>
	EnviarComandoAT(sim,"AT+CNMI=2,1,0,0,0\r\n"); // Configura recepcion de SMS
 8000588:	490c      	ldr	r1, [pc, #48]	; (80005bc <InitSIM+0x4c>)
 800058a:	6878      	ldr	r0, [r7, #4]
 800058c:	f000 f818 	bl	80005c0 <EnviarComandoAT>
												  // Esto es importante : Primer num: el 2 es para que guarde los msj en un buffer si la conexion Uart esta ocupada
												  // Segundo num: el 1 es para que guarde internamente los msj, despues para leerlos hay que usar CMGR. Si esto lo pones en 2 forwardea el msj directamente y no guarda nada
	memset(sim->response, 0, LENGTH);
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	3304      	adds	r3, #4
 8000594:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000598:	2100      	movs	r1, #0
 800059a:	4618      	mov	r0, r3
 800059c:	f002 fb03 	bl	8002ba6 <memset>
	memset(sim->txt_last_sms, 0, LEN_TXT);
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	f503 737b 	add.w	r3, r3, #1004	; 0x3ec
 80005a6:	2232      	movs	r2, #50	; 0x32
 80005a8:	2100      	movs	r1, #0
 80005aa:	4618      	mov	r0, r3
 80005ac:	f002 fafb 	bl	8002ba6 <memset>
}
 80005b0:	bf00      	nop
 80005b2:	3708      	adds	r7, #8
 80005b4:	46bd      	mov	sp, r7
 80005b6:	bd80      	pop	{r7, pc}
 80005b8:	08004af4 	.word	0x08004af4
 80005bc:	08004b00 	.word	0x08004b00

080005c0 <EnviarComandoAT>:

void EnviarComandoAT(SIM800* sim, char* comando)
{
 80005c0:	b590      	push	{r4, r7, lr}
 80005c2:	b083      	sub	sp, #12
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	6078      	str	r0, [r7, #4]
 80005c8:	6039      	str	r1, [r7, #0]
	HAL_UART_Transmit (sim->huart, (uint8_t*) comando, strlen(comando),TIMEOUT);
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681c      	ldr	r4, [r3, #0]
 80005ce:	6838      	ldr	r0, [r7, #0]
 80005d0:	f7ff fdbc 	bl	800014c <strlen>
 80005d4:	4603      	mov	r3, r0
 80005d6:	b29a      	uxth	r2, r3
 80005d8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80005dc:	6839      	ldr	r1, [r7, #0]
 80005de:	4620      	mov	r0, r4
 80005e0:	f001 fba5 	bl	8001d2e <HAL_UART_Transmit>
	HAL_UART_Receive (sim->huart, (uint8_t*) sim->response, LENGTH,TIMEOUT);
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	6818      	ldr	r0, [r3, #0]
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	1d19      	adds	r1, r3, #4
 80005ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80005f0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80005f4:	f001 fc2d 	bl	8001e52 <HAL_UART_Receive>
}
 80005f8:	bf00      	nop
 80005fa:	370c      	adds	r7, #12
 80005fc:	46bd      	mov	sp, r7
 80005fe:	bd90      	pop	{r4, r7, pc}

08000600 <EnviarAT>:


void EnviarAT(SIM800* sim)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	b082      	sub	sp, #8
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT\r\n");
 8000608:	4905      	ldr	r1, [pc, #20]	; (8000620 <EnviarAT+0x20>)
 800060a:	6878      	ldr	r0, [r7, #4]
 800060c:	f7ff ffd8 	bl	80005c0 <EnviarComandoAT>
	Imprimir_respuesta(sim,1);
 8000610:	2101      	movs	r1, #1
 8000612:	6878      	ldr	r0, [r7, #4]
 8000614:	f000 f8ce 	bl	80007b4 <Imprimir_respuesta>
}
 8000618:	bf00      	nop
 800061a:	3708      	adds	r7, #8
 800061c:	46bd      	mov	sp, r7
 800061e:	bd80      	pop	{r7, pc}
 8000620:	08004b14 	.word	0x08004b14

08000624 <EnviarPuertoSerie>:

void EnviarPuertoSerie(SIM800 *sim)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	b090      	sub	sp, #64	; 0x40
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
	char msj [50];
	scanf("%s",msj);
 800062c:	f107 030c 	add.w	r3, r7, #12
 8000630:	4619      	mov	r1, r3
 8000632:	4813      	ldr	r0, [pc, #76]	; (8000680 <EnviarPuertoSerie+0x5c>)
 8000634:	f002 fc3a 	bl	8002eac <iscanf>
	strcat(msj,"\r\n");
 8000638:	f107 030c 	add.w	r3, r7, #12
 800063c:	4618      	mov	r0, r3
 800063e:	f7ff fd85 	bl	800014c <strlen>
 8000642:	4603      	mov	r3, r0
 8000644:	461a      	mov	r2, r3
 8000646:	f107 030c 	add.w	r3, r7, #12
 800064a:	4413      	add	r3, r2
 800064c:	4a0d      	ldr	r2, [pc, #52]	; (8000684 <EnviarPuertoSerie+0x60>)
 800064e:	8811      	ldrh	r1, [r2, #0]
 8000650:	7892      	ldrb	r2, [r2, #2]
 8000652:	8019      	strh	r1, [r3, #0]
 8000654:	709a      	strb	r2, [r3, #2]
	printf("Enviando: %s",msj);
 8000656:	f107 030c 	add.w	r3, r7, #12
 800065a:	4619      	mov	r1, r3
 800065c:	480a      	ldr	r0, [pc, #40]	; (8000688 <EnviarPuertoSerie+0x64>)
 800065e:	f002 fb87 	bl	8002d70 <iprintf>
	EnviarComandoAT(sim,msj);
 8000662:	f107 030c 	add.w	r3, r7, #12
 8000666:	4619      	mov	r1, r3
 8000668:	6878      	ldr	r0, [r7, #4]
 800066a:	f7ff ffa9 	bl	80005c0 <EnviarComandoAT>
	Imprimir_respuesta(sim,1);
 800066e:	2101      	movs	r1, #1
 8000670:	6878      	ldr	r0, [r7, #4]
 8000672:	f000 f89f 	bl	80007b4 <Imprimir_respuesta>
}
 8000676:	bf00      	nop
 8000678:	3740      	adds	r7, #64	; 0x40
 800067a:	46bd      	mov	sp, r7
 800067c:	bd80      	pop	{r7, pc}
 800067e:	bf00      	nop
 8000680:	08004b1c 	.word	0x08004b1c
 8000684:	08004b20 	.word	0x08004b20
 8000688:	08004b24 	.word	0x08004b24

0800068c <ConsultarSignal>:


void ConsultarSignal(SIM800* sim)
{
 800068c:	b580      	push	{r7, lr}
 800068e:	b082      	sub	sp, #8
 8000690:	af00      	add	r7, sp, #0
 8000692:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT+CSQ\r\n");
 8000694:	4905      	ldr	r1, [pc, #20]	; (80006ac <ConsultarSignal+0x20>)
 8000696:	6878      	ldr	r0, [r7, #4]
 8000698:	f7ff ff92 	bl	80005c0 <EnviarComandoAT>
	Imprimir_respuesta(sim,1);
 800069c:	2101      	movs	r1, #1
 800069e:	6878      	ldr	r0, [r7, #4]
 80006a0:	f000 f888 	bl	80007b4 <Imprimir_respuesta>
}
 80006a4:	bf00      	nop
 80006a6:	3708      	adds	r7, #8
 80006a8:	46bd      	mov	sp, r7
 80006aa:	bd80      	pop	{r7, pc}
 80006ac:	08004b34 	.word	0x08004b34

080006b0 <ConsultarEstadoSIM>:

void ConsultarEstadoSIM(SIM800* sim)
{
 80006b0:	b580      	push	{r7, lr}
 80006b2:	b082      	sub	sp, #8
 80006b4:	af00      	add	r7, sp, #0
 80006b6:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT+CPIN?\r\n");
 80006b8:	4905      	ldr	r1, [pc, #20]	; (80006d0 <ConsultarEstadoSIM+0x20>)
 80006ba:	6878      	ldr	r0, [r7, #4]
 80006bc:	f7ff ff80 	bl	80005c0 <EnviarComandoAT>
	Imprimir_respuesta(sim,1);
 80006c0:	2101      	movs	r1, #1
 80006c2:	6878      	ldr	r0, [r7, #4]
 80006c4:	f000 f876 	bl	80007b4 <Imprimir_respuesta>
}
 80006c8:	bf00      	nop
 80006ca:	3708      	adds	r7, #8
 80006cc:	46bd      	mov	sp, r7
 80006ce:	bd80      	pop	{r7, pc}
 80006d0:	08004b40 	.word	0x08004b40

080006d4 <ListarSMS>:
	EnviarComandoAT(sim,mensaje);
	EnviarComandoAT(sim,"\r\n\032");	// CTRL+Z para terminar
}

void ListarSMS( SIM800 *sim )
{
 80006d4:	b580      	push	{r7, lr}
 80006d6:	b082      	sub	sp, #8
 80006d8:	af00      	add	r7, sp, #0
 80006da:	6078      	str	r0, [r7, #4]

	EnviarComandoAT(sim,"AT+CMGL=\"ALL\"\r\n");
 80006dc:	4905      	ldr	r1, [pc, #20]	; (80006f4 <ListarSMS+0x20>)
 80006de:	6878      	ldr	r0, [r7, #4]
 80006e0:	f7ff ff6e 	bl	80005c0 <EnviarComandoAT>
	Imprimir_respuesta(sim,1);
 80006e4:	2101      	movs	r1, #1
 80006e6:	6878      	ldr	r0, [r7, #4]
 80006e8:	f000 f864 	bl	80007b4 <Imprimir_respuesta>
}
 80006ec:	bf00      	nop
 80006ee:	3708      	adds	r7, #8
 80006f0:	46bd      	mov	sp, r7
 80006f2:	bd80      	pop	{r7, pc}
 80006f4:	08004b94 	.word	0x08004b94

080006f8 <BorrarAllSMS>:

void BorrarAllSMS(SIM800 *sim)
{
 80006f8:	b580      	push	{r7, lr}
 80006fa:	b082      	sub	sp, #8
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT+CMGDA=\"DEL ALL\"\r\n");
 8000700:	4905      	ldr	r1, [pc, #20]	; (8000718 <BorrarAllSMS+0x20>)
 8000702:	6878      	ldr	r0, [r7, #4]
 8000704:	f7ff ff5c 	bl	80005c0 <EnviarComandoAT>
	Imprimir_respuesta(sim,1);
 8000708:	2101      	movs	r1, #1
 800070a:	6878      	ldr	r0, [r7, #4]
 800070c:	f000 f852 	bl	80007b4 <Imprimir_respuesta>
}
 8000710:	bf00      	nop
 8000712:	3708      	adds	r7, #8
 8000714:	46bd      	mov	sp, r7
 8000716:	bd80      	pop	{r7, pc}
 8000718:	08004ba4 	.word	0x08004ba4

0800071c <LeerSMS_i>:

void LeerSMS_i(SIM800 *sim, int i, int imprimir)
{
 800071c:	b580      	push	{r7, lr}
 800071e:	b092      	sub	sp, #72	; 0x48
 8000720:	af00      	add	r7, sp, #0
 8000722:	60f8      	str	r0, [r7, #12]
 8000724:	60b9      	str	r1, [r7, #8]
 8000726:	607a      	str	r2, [r7, #4]
	char msj [50];
	sprintf(msj,"AT+CMGR=%d\r\n",i);
 8000728:	f107 0314 	add.w	r3, r7, #20
 800072c:	68ba      	ldr	r2, [r7, #8]
 800072e:	490a      	ldr	r1, [pc, #40]	; (8000758 <LeerSMS_i+0x3c>)
 8000730:	4618      	mov	r0, r3
 8000732:	f002 fc99 	bl	8003068 <siprintf>
	EnviarComandoAT(sim,msj);
 8000736:	f107 0314 	add.w	r3, r7, #20
 800073a:	4619      	mov	r1, r3
 800073c:	68f8      	ldr	r0, [r7, #12]
 800073e:	f7ff ff3f 	bl	80005c0 <EnviarComandoAT>
	if(imprimir==1)
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	2b01      	cmp	r3, #1
 8000746:	d103      	bne.n	8000750 <LeerSMS_i+0x34>
	{
		Imprimir_respuesta(sim,1);
 8000748:	2101      	movs	r1, #1
 800074a:	68f8      	ldr	r0, [r7, #12]
 800074c:	f000 f832 	bl	80007b4 <Imprimir_respuesta>
	}

}
 8000750:	bf00      	nop
 8000752:	3748      	adds	r7, #72	; 0x48
 8000754:	46bd      	mov	sp, r7
 8000756:	bd80      	pop	{r7, pc}
 8000758:	08004bbc 	.word	0x08004bbc

0800075c <ListenSMS>:

int ListenSMS(SIM800 * sim)
{
 800075c:	b580      	push	{r7, lr}
 800075e:	b084      	sub	sp, #16
 8000760:	af00      	add	r7, sp, #0
 8000762:	6078      	str	r0, [r7, #4]
	HAL_UART_Receive (sim->huart, (uint8_t*) sim->response, LENGTH,TIMEOUT);
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	6818      	ldr	r0, [r3, #0]
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	1d19      	adds	r1, r3, #4
 800076c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000770:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000774:	f001 fb6d 	bl	8001e52 <HAL_UART_Receive>
	if( strlen (sim-> response) != 0 )
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	3304      	adds	r3, #4
 800077c:	781b      	ldrb	r3, [r3, #0]
 800077e:	2b00      	cmp	r3, #0
 8000780:	d012      	beq.n	80007a8 <ListenSMS+0x4c>
	{
		int indice = ExtraerIndiceCMTI(sim->response);
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	3304      	adds	r3, #4
 8000786:	4618      	mov	r0, r3
 8000788:	f000 f840 	bl	800080c <ExtraerIndiceCMTI>
 800078c:	60f8      	str	r0, [r7, #12]
		ExtraerTextoDeSMS(sim,indice,sim->txt_last_sms);
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	f503 737b 	add.w	r3, r3, #1004	; 0x3ec
 8000794:	461a      	mov	r2, r3
 8000796:	68f9      	ldr	r1, [r7, #12]
 8000798:	6878      	ldr	r0, [r7, #4]
 800079a:	f000 f852 	bl	8000842 <ExtraerTextoDeSMS>
		Borrar_respuesta(sim);
 800079e:	6878      	ldr	r0, [r7, #4]
 80007a0:	f000 f824 	bl	80007ec <Borrar_respuesta>
		return 1;
 80007a4:	2301      	movs	r3, #1
 80007a6:	e000      	b.n	80007aa <ListenSMS+0x4e>
	}
	return 0;
 80007a8:	2300      	movs	r3, #0
}
 80007aa:	4618      	mov	r0, r3
 80007ac:	3710      	adds	r7, #16
 80007ae:	46bd      	mov	sp, r7
 80007b0:	bd80      	pop	{r7, pc}
	...

080007b4 <Imprimir_respuesta>:

void Imprimir_respuesta(SIM800 *sim, int borrar)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b082      	sub	sp, #8
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	6078      	str	r0, [r7, #4]
 80007bc:	6039      	str	r1, [r7, #0]
	printf("Respuesta: %s\r\n",sim->response);
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	3304      	adds	r3, #4
 80007c2:	4619      	mov	r1, r3
 80007c4:	4808      	ldr	r0, [pc, #32]	; (80007e8 <Imprimir_respuesta+0x34>)
 80007c6:	f002 fad3 	bl	8002d70 <iprintf>

	if(borrar == 1)
 80007ca:	683b      	ldr	r3, [r7, #0]
 80007cc:	2b01      	cmp	r3, #1
 80007ce:	d107      	bne.n	80007e0 <Imprimir_respuesta+0x2c>
	{
		memset(sim->response, 0, LENGTH);
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	3304      	adds	r3, #4
 80007d4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80007d8:	2100      	movs	r1, #0
 80007da:	4618      	mov	r0, r3
 80007dc:	f002 f9e3 	bl	8002ba6 <memset>
	}
}
 80007e0:	bf00      	nop
 80007e2:	3708      	adds	r7, #8
 80007e4:	46bd      	mov	sp, r7
 80007e6:	bd80      	pop	{r7, pc}
 80007e8:	08004bcc 	.word	0x08004bcc

080007ec <Borrar_respuesta>:

void Borrar_respuesta(SIM800 *sim)
{
 80007ec:	b580      	push	{r7, lr}
 80007ee:	b082      	sub	sp, #8
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	6078      	str	r0, [r7, #4]
	memset(sim->response, 0, LENGTH);
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	3304      	adds	r3, #4
 80007f8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80007fc:	2100      	movs	r1, #0
 80007fe:	4618      	mov	r0, r3
 8000800:	f002 f9d1 	bl	8002ba6 <memset>
}
 8000804:	bf00      	nop
 8000806:	3708      	adds	r7, #8
 8000808:	46bd      	mov	sp, r7
 800080a:	bd80      	pop	{r7, pc}

0800080c <ExtraerIndiceCMTI>:

int ExtraerIndiceCMTI(char * codigo)
{
 800080c:	b480      	push	{r7}
 800080e:	b085      	sub	sp, #20
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
	// Forma del codigo -> +CMTI: "SM",5

	int i = 0;
 8000814:	2300      	movs	r3, #0
 8000816:	60fb      	str	r3, [r7, #12]
	while(*(codigo+i) !=',' ){i++;}
 8000818:	e002      	b.n	8000820 <ExtraerIndiceCMTI+0x14>
 800081a:	68fb      	ldr	r3, [r7, #12]
 800081c:	3301      	adds	r3, #1
 800081e:	60fb      	str	r3, [r7, #12]
 8000820:	68fb      	ldr	r3, [r7, #12]
 8000822:	687a      	ldr	r2, [r7, #4]
 8000824:	4413      	add	r3, r2
 8000826:	781b      	ldrb	r3, [r3, #0]
 8000828:	2b2c      	cmp	r3, #44	; 0x2c
 800082a:	d1f6      	bne.n	800081a <ExtraerIndiceCMTI+0xe>

	return *(codigo+i+1)-48;	// Para pasarlo a entero
 800082c:	68fb      	ldr	r3, [r7, #12]
 800082e:	3301      	adds	r3, #1
 8000830:	687a      	ldr	r2, [r7, #4]
 8000832:	4413      	add	r3, r2
 8000834:	781b      	ldrb	r3, [r3, #0]
 8000836:	3b30      	subs	r3, #48	; 0x30
}
 8000838:	4618      	mov	r0, r3
 800083a:	3714      	adds	r7, #20
 800083c:	46bd      	mov	sp, r7
 800083e:	bc80      	pop	{r7}
 8000840:	4770      	bx	lr

08000842 <ExtraerTextoDeSMS>:

void ExtraerTextoDeSMS(SIM800 *sim, int indice, char * texto)
{
 8000842:	b580      	push	{r7, lr}
 8000844:	b088      	sub	sp, #32
 8000846:	af00      	add	r7, sp, #0
 8000848:	60f8      	str	r0, [r7, #12]
 800084a:	60b9      	str	r1, [r7, #8]
 800084c:	607a      	str	r2, [r7, #4]
	LeerSMS_i(sim,indice,0);
 800084e:	2200      	movs	r2, #0
 8000850:	68b9      	ldr	r1, [r7, #8]
 8000852:	68f8      	ldr	r0, [r7, #12]
 8000854:	f7ff ff62 	bl	800071c <LeerSMS_i>
	// Extrae el texto del SMS guardado en la posicion i
	// Formato del codigo -> 3,"READ/UNREAD","NUM","","FECHA" MSJ
	// Voy a contar comillas, serían 8

	int comillas = 0;
 8000858:	2300      	movs	r3, #0
 800085a:	61fb      	str	r3, [r7, #28]
	int tam_header = 0;
 800085c:	2300      	movs	r3, #0
 800085e:	61bb      	str	r3, [r7, #24]
	while(comillas < 8)
 8000860:	e00c      	b.n	800087c <ExtraerTextoDeSMS+0x3a>
	{
		if(*(sim->response + tam_header) == '"') { comillas++; }
 8000862:	68fb      	ldr	r3, [r7, #12]
 8000864:	1d1a      	adds	r2, r3, #4
 8000866:	69bb      	ldr	r3, [r7, #24]
 8000868:	4413      	add	r3, r2
 800086a:	781b      	ldrb	r3, [r3, #0]
 800086c:	2b22      	cmp	r3, #34	; 0x22
 800086e:	d102      	bne.n	8000876 <ExtraerTextoDeSMS+0x34>
 8000870:	69fb      	ldr	r3, [r7, #28]
 8000872:	3301      	adds	r3, #1
 8000874:	61fb      	str	r3, [r7, #28]
		tam_header++;
 8000876:	69bb      	ldr	r3, [r7, #24]
 8000878:	3301      	adds	r3, #1
 800087a:	61bb      	str	r3, [r7, #24]
	while(comillas < 8)
 800087c:	69fb      	ldr	r3, [r7, #28]
 800087e:	2b07      	cmp	r3, #7
 8000880:	ddef      	ble.n	8000862 <ExtraerTextoDeSMS+0x20>
	}

	int j;

	for (j = 0; j<strlen(sim->response)-tam_header;j++)
 8000882:	2300      	movs	r3, #0
 8000884:	617b      	str	r3, [r7, #20]
 8000886:	e00d      	b.n	80008a4 <ExtraerTextoDeSMS+0x62>
	{
		*(texto+j) = *(sim->response + tam_header + j);
 8000888:	68fb      	ldr	r3, [r7, #12]
 800088a:	1d1a      	adds	r2, r3, #4
 800088c:	69b9      	ldr	r1, [r7, #24]
 800088e:	697b      	ldr	r3, [r7, #20]
 8000890:	440b      	add	r3, r1
 8000892:	441a      	add	r2, r3
 8000894:	697b      	ldr	r3, [r7, #20]
 8000896:	6879      	ldr	r1, [r7, #4]
 8000898:	440b      	add	r3, r1
 800089a:	7812      	ldrb	r2, [r2, #0]
 800089c:	701a      	strb	r2, [r3, #0]
	for (j = 0; j<strlen(sim->response)-tam_header;j++)
 800089e:	697b      	ldr	r3, [r7, #20]
 80008a0:	3301      	adds	r3, #1
 80008a2:	617b      	str	r3, [r7, #20]
 80008a4:	68fb      	ldr	r3, [r7, #12]
 80008a6:	3304      	adds	r3, #4
 80008a8:	4618      	mov	r0, r3
 80008aa:	f7ff fc4f 	bl	800014c <strlen>
 80008ae:	4602      	mov	r2, r0
 80008b0:	69bb      	ldr	r3, [r7, #24]
 80008b2:	1ad2      	subs	r2, r2, r3
 80008b4:	697b      	ldr	r3, [r7, #20]
 80008b6:	429a      	cmp	r2, r3
 80008b8:	d8e6      	bhi.n	8000888 <ExtraerTextoDeSMS+0x46>
	}
	*(texto+j+1)='\0';
 80008ba:	697b      	ldr	r3, [r7, #20]
 80008bc:	3301      	adds	r3, #1
 80008be:	687a      	ldr	r2, [r7, #4]
 80008c0:	4413      	add	r3, r2
 80008c2:	2200      	movs	r2, #0
 80008c4:	701a      	strb	r2, [r3, #0]
}
 80008c6:	bf00      	nop
 80008c8:	3720      	adds	r7, #32
 80008ca:	46bd      	mov	sp, r7
 80008cc:	bd80      	pop	{r7, pc}
	...

080008d0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80008d0:	b480      	push	{r7}
 80008d2:	b085      	sub	sp, #20
 80008d4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80008d6:	4b15      	ldr	r3, [pc, #84]	; (800092c <HAL_MspInit+0x5c>)
 80008d8:	699b      	ldr	r3, [r3, #24]
 80008da:	4a14      	ldr	r2, [pc, #80]	; (800092c <HAL_MspInit+0x5c>)
 80008dc:	f043 0301 	orr.w	r3, r3, #1
 80008e0:	6193      	str	r3, [r2, #24]
 80008e2:	4b12      	ldr	r3, [pc, #72]	; (800092c <HAL_MspInit+0x5c>)
 80008e4:	699b      	ldr	r3, [r3, #24]
 80008e6:	f003 0301 	and.w	r3, r3, #1
 80008ea:	60bb      	str	r3, [r7, #8]
 80008ec:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008ee:	4b0f      	ldr	r3, [pc, #60]	; (800092c <HAL_MspInit+0x5c>)
 80008f0:	69db      	ldr	r3, [r3, #28]
 80008f2:	4a0e      	ldr	r2, [pc, #56]	; (800092c <HAL_MspInit+0x5c>)
 80008f4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80008f8:	61d3      	str	r3, [r2, #28]
 80008fa:	4b0c      	ldr	r3, [pc, #48]	; (800092c <HAL_MspInit+0x5c>)
 80008fc:	69db      	ldr	r3, [r3, #28]
 80008fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000902:	607b      	str	r3, [r7, #4]
 8000904:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000906:	4b0a      	ldr	r3, [pc, #40]	; (8000930 <HAL_MspInit+0x60>)
 8000908:	685b      	ldr	r3, [r3, #4]
 800090a:	60fb      	str	r3, [r7, #12]
 800090c:	68fb      	ldr	r3, [r7, #12]
 800090e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000912:	60fb      	str	r3, [r7, #12]
 8000914:	68fb      	ldr	r3, [r7, #12]
 8000916:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800091a:	60fb      	str	r3, [r7, #12]
 800091c:	4a04      	ldr	r2, [pc, #16]	; (8000930 <HAL_MspInit+0x60>)
 800091e:	68fb      	ldr	r3, [r7, #12]
 8000920:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000922:	bf00      	nop
 8000924:	3714      	adds	r7, #20
 8000926:	46bd      	mov	sp, r7
 8000928:	bc80      	pop	{r7}
 800092a:	4770      	bx	lr
 800092c:	40021000 	.word	0x40021000
 8000930:	40010000 	.word	0x40010000

08000934 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000934:	b580      	push	{r7, lr}
 8000936:	b08a      	sub	sp, #40	; 0x28
 8000938:	af00      	add	r7, sp, #0
 800093a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800093c:	f107 0318 	add.w	r3, r7, #24
 8000940:	2200      	movs	r2, #0
 8000942:	601a      	str	r2, [r3, #0]
 8000944:	605a      	str	r2, [r3, #4]
 8000946:	609a      	str	r2, [r3, #8]
 8000948:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	4a3f      	ldr	r2, [pc, #252]	; (8000a4c <HAL_UART_MspInit+0x118>)
 8000950:	4293      	cmp	r3, r2
 8000952:	d13a      	bne.n	80009ca <HAL_UART_MspInit+0x96>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8000954:	4b3e      	ldr	r3, [pc, #248]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 8000956:	699b      	ldr	r3, [r3, #24]
 8000958:	4a3d      	ldr	r2, [pc, #244]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 800095a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800095e:	6193      	str	r3, [r2, #24]
 8000960:	4b3b      	ldr	r3, [pc, #236]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 8000962:	699b      	ldr	r3, [r3, #24]
 8000964:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000968:	617b      	str	r3, [r7, #20]
 800096a:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800096c:	4b38      	ldr	r3, [pc, #224]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 800096e:	699b      	ldr	r3, [r3, #24]
 8000970:	4a37      	ldr	r2, [pc, #220]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 8000972:	f043 0304 	orr.w	r3, r3, #4
 8000976:	6193      	str	r3, [r2, #24]
 8000978:	4b35      	ldr	r3, [pc, #212]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 800097a:	699b      	ldr	r3, [r3, #24]
 800097c:	f003 0304 	and.w	r3, r3, #4
 8000980:	613b      	str	r3, [r7, #16]
 8000982:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000984:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000988:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800098a:	2302      	movs	r3, #2
 800098c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800098e:	2303      	movs	r3, #3
 8000990:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000992:	f107 0318 	add.w	r3, r7, #24
 8000996:	4619      	mov	r1, r3
 8000998:	482e      	ldr	r0, [pc, #184]	; (8000a54 <HAL_UART_MspInit+0x120>)
 800099a:	f000 fbab 	bl	80010f4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800099e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009a2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80009a4:	2300      	movs	r3, #0
 80009a6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009a8:	2300      	movs	r3, #0
 80009aa:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80009ac:	f107 0318 	add.w	r3, r7, #24
 80009b0:	4619      	mov	r1, r3
 80009b2:	4828      	ldr	r0, [pc, #160]	; (8000a54 <HAL_UART_MspInit+0x120>)
 80009b4:	f000 fb9e 	bl	80010f4 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80009b8:	2200      	movs	r2, #0
 80009ba:	2100      	movs	r1, #0
 80009bc:	2025      	movs	r0, #37	; 0x25
 80009be:	f000 fab2 	bl	8000f26 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80009c2:	2025      	movs	r0, #37	; 0x25
 80009c4:	f000 facb 	bl	8000f5e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80009c8:	e03c      	b.n	8000a44 <HAL_UART_MspInit+0x110>
  else if(huart->Instance==USART2)
 80009ca:	687b      	ldr	r3, [r7, #4]
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	4a22      	ldr	r2, [pc, #136]	; (8000a58 <HAL_UART_MspInit+0x124>)
 80009d0:	4293      	cmp	r3, r2
 80009d2:	d137      	bne.n	8000a44 <HAL_UART_MspInit+0x110>
    __HAL_RCC_USART2_CLK_ENABLE();
 80009d4:	4b1e      	ldr	r3, [pc, #120]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 80009d6:	69db      	ldr	r3, [r3, #28]
 80009d8:	4a1d      	ldr	r2, [pc, #116]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 80009da:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80009de:	61d3      	str	r3, [r2, #28]
 80009e0:	4b1b      	ldr	r3, [pc, #108]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 80009e2:	69db      	ldr	r3, [r3, #28]
 80009e4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80009e8:	60fb      	str	r3, [r7, #12]
 80009ea:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80009ec:	4b18      	ldr	r3, [pc, #96]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 80009ee:	699b      	ldr	r3, [r3, #24]
 80009f0:	4a17      	ldr	r2, [pc, #92]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 80009f2:	f043 0304 	orr.w	r3, r3, #4
 80009f6:	6193      	str	r3, [r2, #24]
 80009f8:	4b15      	ldr	r3, [pc, #84]	; (8000a50 <HAL_UART_MspInit+0x11c>)
 80009fa:	699b      	ldr	r3, [r3, #24]
 80009fc:	f003 0304 	and.w	r3, r3, #4
 8000a00:	60bb      	str	r3, [r7, #8]
 8000a02:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000a04:	2304      	movs	r3, #4
 8000a06:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a08:	2302      	movs	r3, #2
 8000a0a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000a0c:	2303      	movs	r3, #3
 8000a0e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a10:	f107 0318 	add.w	r3, r7, #24
 8000a14:	4619      	mov	r1, r3
 8000a16:	480f      	ldr	r0, [pc, #60]	; (8000a54 <HAL_UART_MspInit+0x120>)
 8000a18:	f000 fb6c 	bl	80010f4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000a1c:	2308      	movs	r3, #8
 8000a1e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a20:	2300      	movs	r3, #0
 8000a22:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a24:	2300      	movs	r3, #0
 8000a26:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a28:	f107 0318 	add.w	r3, r7, #24
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	4809      	ldr	r0, [pc, #36]	; (8000a54 <HAL_UART_MspInit+0x120>)
 8000a30:	f000 fb60 	bl	80010f4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8000a34:	2200      	movs	r2, #0
 8000a36:	2100      	movs	r1, #0
 8000a38:	2026      	movs	r0, #38	; 0x26
 8000a3a:	f000 fa74 	bl	8000f26 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8000a3e:	2026      	movs	r0, #38	; 0x26
 8000a40:	f000 fa8d 	bl	8000f5e <HAL_NVIC_EnableIRQ>
}
 8000a44:	bf00      	nop
 8000a46:	3728      	adds	r7, #40	; 0x28
 8000a48:	46bd      	mov	sp, r7
 8000a4a:	bd80      	pop	{r7, pc}
 8000a4c:	40013800 	.word	0x40013800
 8000a50:	40021000 	.word	0x40021000
 8000a54:	40010800 	.word	0x40010800
 8000a58:	40004400 	.word	0x40004400

08000a5c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000a5c:	b480      	push	{r7}
 8000a5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000a60:	e7fe      	b.n	8000a60 <NMI_Handler+0x4>

08000a62 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000a62:	b480      	push	{r7}
 8000a64:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000a66:	e7fe      	b.n	8000a66 <HardFault_Handler+0x4>

08000a68 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000a68:	b480      	push	{r7}
 8000a6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000a6c:	e7fe      	b.n	8000a6c <MemManage_Handler+0x4>

08000a6e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000a6e:	b480      	push	{r7}
 8000a70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000a72:	e7fe      	b.n	8000a72 <BusFault_Handler+0x4>

08000a74 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000a74:	b480      	push	{r7}
 8000a76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000a78:	e7fe      	b.n	8000a78 <UsageFault_Handler+0x4>

08000a7a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000a7a:	b480      	push	{r7}
 8000a7c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000a7e:	bf00      	nop
 8000a80:	46bd      	mov	sp, r7
 8000a82:	bc80      	pop	{r7}
 8000a84:	4770      	bx	lr

08000a86 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000a86:	b480      	push	{r7}
 8000a88:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000a8a:	bf00      	nop
 8000a8c:	46bd      	mov	sp, r7
 8000a8e:	bc80      	pop	{r7}
 8000a90:	4770      	bx	lr

08000a92 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000a92:	b480      	push	{r7}
 8000a94:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000a96:	bf00      	nop
 8000a98:	46bd      	mov	sp, r7
 8000a9a:	bc80      	pop	{r7}
 8000a9c:	4770      	bx	lr

08000a9e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000a9e:	b580      	push	{r7, lr}
 8000aa0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000aa2:	f000 f929 	bl	8000cf8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000aa6:	bf00      	nop
 8000aa8:	bd80      	pop	{r7, pc}
	...

08000aac <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000aac:	b580      	push	{r7, lr}
 8000aae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8000ab0:	4802      	ldr	r0, [pc, #8]	; (8000abc <USART1_IRQHandler+0x10>)
 8000ab2:	f001 fa71 	bl	8001f98 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8000ab6:	bf00      	nop
 8000ab8:	bd80      	pop	{r7, pc}
 8000aba:	bf00      	nop
 8000abc:	2000008c 	.word	0x2000008c

08000ac0 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8000ac4:	4802      	ldr	r0, [pc, #8]	; (8000ad0 <USART2_IRQHandler+0x10>)
 8000ac6:	f001 fa67 	bl	8001f98 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8000aca:	bf00      	nop
 8000acc:	bd80      	pop	{r7, pc}
 8000ace:	bf00      	nop
 8000ad0:	200000d0 	.word	0x200000d0

08000ad4 <_read>:
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	b086      	sub	sp, #24
 8000ad8:	af00      	add	r7, sp, #0
 8000ada:	60f8      	str	r0, [r7, #12]
 8000adc:	60b9      	str	r1, [r7, #8]
 8000ade:	607a      	str	r2, [r7, #4]
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	617b      	str	r3, [r7, #20]
 8000ae4:	e00a      	b.n	8000afc <_read+0x28>
 8000ae6:	f7ff fb4b 	bl	8000180 <__io_getchar>
 8000aea:	4601      	mov	r1, r0
 8000aec:	68bb      	ldr	r3, [r7, #8]
 8000aee:	1c5a      	adds	r2, r3, #1
 8000af0:	60ba      	str	r2, [r7, #8]
 8000af2:	b2ca      	uxtb	r2, r1
 8000af4:	701a      	strb	r2, [r3, #0]
 8000af6:	697b      	ldr	r3, [r7, #20]
 8000af8:	3301      	adds	r3, #1
 8000afa:	617b      	str	r3, [r7, #20]
 8000afc:	697a      	ldr	r2, [r7, #20]
 8000afe:	687b      	ldr	r3, [r7, #4]
 8000b00:	429a      	cmp	r2, r3
 8000b02:	dbf0      	blt.n	8000ae6 <_read+0x12>
 8000b04:	687b      	ldr	r3, [r7, #4]
 8000b06:	4618      	mov	r0, r3
 8000b08:	3718      	adds	r7, #24
 8000b0a:	46bd      	mov	sp, r7
 8000b0c:	bd80      	pop	{r7, pc}

08000b0e <_write>:
 8000b0e:	b580      	push	{r7, lr}
 8000b10:	b086      	sub	sp, #24
 8000b12:	af00      	add	r7, sp, #0
 8000b14:	60f8      	str	r0, [r7, #12]
 8000b16:	60b9      	str	r1, [r7, #8]
 8000b18:	607a      	str	r2, [r7, #4]
 8000b1a:	2300      	movs	r3, #0
 8000b1c:	617b      	str	r3, [r7, #20]
 8000b1e:	e009      	b.n	8000b34 <_write+0x26>
 8000b20:	68bb      	ldr	r3, [r7, #8]
 8000b22:	1c5a      	adds	r2, r3, #1
 8000b24:	60ba      	str	r2, [r7, #8]
 8000b26:	781b      	ldrb	r3, [r3, #0]
 8000b28:	4618      	mov	r0, r3
 8000b2a:	f7ff fb17 	bl	800015c <__io_putchar>
 8000b2e:	697b      	ldr	r3, [r7, #20]
 8000b30:	3301      	adds	r3, #1
 8000b32:	617b      	str	r3, [r7, #20]
 8000b34:	697a      	ldr	r2, [r7, #20]
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	429a      	cmp	r2, r3
 8000b3a:	dbf1      	blt.n	8000b20 <_write+0x12>
 8000b3c:	687b      	ldr	r3, [r7, #4]
 8000b3e:	4618      	mov	r0, r3
 8000b40:	3718      	adds	r7, #24
 8000b42:	46bd      	mov	sp, r7
 8000b44:	bd80      	pop	{r7, pc}

08000b46 <_close>:
 8000b46:	b480      	push	{r7}
 8000b48:	b083      	sub	sp, #12
 8000b4a:	af00      	add	r7, sp, #0
 8000b4c:	6078      	str	r0, [r7, #4]
 8000b4e:	f04f 33ff 	mov.w	r3, #4294967295
 8000b52:	4618      	mov	r0, r3
 8000b54:	370c      	adds	r7, #12
 8000b56:	46bd      	mov	sp, r7
 8000b58:	bc80      	pop	{r7}
 8000b5a:	4770      	bx	lr

08000b5c <_fstat>:
 8000b5c:	b480      	push	{r7}
 8000b5e:	b083      	sub	sp, #12
 8000b60:	af00      	add	r7, sp, #0
 8000b62:	6078      	str	r0, [r7, #4]
 8000b64:	6039      	str	r1, [r7, #0]
 8000b66:	683b      	ldr	r3, [r7, #0]
 8000b68:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000b6c:	605a      	str	r2, [r3, #4]
 8000b6e:	2300      	movs	r3, #0
 8000b70:	4618      	mov	r0, r3
 8000b72:	370c      	adds	r7, #12
 8000b74:	46bd      	mov	sp, r7
 8000b76:	bc80      	pop	{r7}
 8000b78:	4770      	bx	lr

08000b7a <_isatty>:
 8000b7a:	b480      	push	{r7}
 8000b7c:	b083      	sub	sp, #12
 8000b7e:	af00      	add	r7, sp, #0
 8000b80:	6078      	str	r0, [r7, #4]
 8000b82:	2301      	movs	r3, #1
 8000b84:	4618      	mov	r0, r3
 8000b86:	370c      	adds	r7, #12
 8000b88:	46bd      	mov	sp, r7
 8000b8a:	bc80      	pop	{r7}
 8000b8c:	4770      	bx	lr

08000b8e <_lseek>:
 8000b8e:	b480      	push	{r7}
 8000b90:	b085      	sub	sp, #20
 8000b92:	af00      	add	r7, sp, #0
 8000b94:	60f8      	str	r0, [r7, #12]
 8000b96:	60b9      	str	r1, [r7, #8]
 8000b98:	607a      	str	r2, [r7, #4]
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	4618      	mov	r0, r3
 8000b9e:	3714      	adds	r7, #20
 8000ba0:	46bd      	mov	sp, r7
 8000ba2:	bc80      	pop	{r7}
 8000ba4:	4770      	bx	lr
	...

08000ba8 <_sbrk>:
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b086      	sub	sp, #24
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	6078      	str	r0, [r7, #4]
 8000bb0:	4a14      	ldr	r2, [pc, #80]	; (8000c04 <_sbrk+0x5c>)
 8000bb2:	4b15      	ldr	r3, [pc, #84]	; (8000c08 <_sbrk+0x60>)
 8000bb4:	1ad3      	subs	r3, r2, r3
 8000bb6:	617b      	str	r3, [r7, #20]
 8000bb8:	697b      	ldr	r3, [r7, #20]
 8000bba:	613b      	str	r3, [r7, #16]
 8000bbc:	4b13      	ldr	r3, [pc, #76]	; (8000c0c <_sbrk+0x64>)
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	2b00      	cmp	r3, #0
 8000bc2:	d102      	bne.n	8000bca <_sbrk+0x22>
 8000bc4:	4b11      	ldr	r3, [pc, #68]	; (8000c0c <_sbrk+0x64>)
 8000bc6:	4a12      	ldr	r2, [pc, #72]	; (8000c10 <_sbrk+0x68>)
 8000bc8:	601a      	str	r2, [r3, #0]
 8000bca:	4b10      	ldr	r3, [pc, #64]	; (8000c0c <_sbrk+0x64>)
 8000bcc:	681a      	ldr	r2, [r3, #0]
 8000bce:	687b      	ldr	r3, [r7, #4]
 8000bd0:	4413      	add	r3, r2
 8000bd2:	693a      	ldr	r2, [r7, #16]
 8000bd4:	429a      	cmp	r2, r3
 8000bd6:	d207      	bcs.n	8000be8 <_sbrk+0x40>
 8000bd8:	f001 fdd6 	bl	8002788 <__errno>
 8000bdc:	4603      	mov	r3, r0
 8000bde:	220c      	movs	r2, #12
 8000be0:	601a      	str	r2, [r3, #0]
 8000be2:	f04f 33ff 	mov.w	r3, #4294967295
 8000be6:	e009      	b.n	8000bfc <_sbrk+0x54>
 8000be8:	4b08      	ldr	r3, [pc, #32]	; (8000c0c <_sbrk+0x64>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	60fb      	str	r3, [r7, #12]
 8000bee:	4b07      	ldr	r3, [pc, #28]	; (8000c0c <_sbrk+0x64>)
 8000bf0:	681a      	ldr	r2, [r3, #0]
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	4413      	add	r3, r2
 8000bf6:	4a05      	ldr	r2, [pc, #20]	; (8000c0c <_sbrk+0x64>)
 8000bf8:	6013      	str	r3, [r2, #0]
 8000bfa:	68fb      	ldr	r3, [r7, #12]
 8000bfc:	4618      	mov	r0, r3
 8000bfe:	3718      	adds	r7, #24
 8000c00:	46bd      	mov	sp, r7
 8000c02:	bd80      	pop	{r7, pc}
 8000c04:	20005000 	.word	0x20005000
 8000c08:	00000400 	.word	0x00000400
 8000c0c:	20000114 	.word	0x20000114
 8000c10:	20000130 	.word	0x20000130

08000c14 <SystemInit>:
 8000c14:	b480      	push	{r7}
 8000c16:	af00      	add	r7, sp, #0
 8000c18:	bf00      	nop
 8000c1a:	46bd      	mov	sp, r7
 8000c1c:	bc80      	pop	{r7}
 8000c1e:	4770      	bx	lr

08000c20 <Reset_Handler>:
 8000c20:	480c      	ldr	r0, [pc, #48]	; (8000c54 <LoopFillZerobss+0x12>)
 8000c22:	490d      	ldr	r1, [pc, #52]	; (8000c58 <LoopFillZerobss+0x16>)
 8000c24:	4a0d      	ldr	r2, [pc, #52]	; (8000c5c <LoopFillZerobss+0x1a>)
 8000c26:	2300      	movs	r3, #0
 8000c28:	e002      	b.n	8000c30 <LoopCopyDataInit>

08000c2a <CopyDataInit>:
 8000c2a:	58d4      	ldr	r4, [r2, r3]
 8000c2c:	50c4      	str	r4, [r0, r3]
 8000c2e:	3304      	adds	r3, #4

08000c30 <LoopCopyDataInit>:
 8000c30:	18c4      	adds	r4, r0, r3
 8000c32:	428c      	cmp	r4, r1
 8000c34:	d3f9      	bcc.n	8000c2a <CopyDataInit>
 8000c36:	4a0a      	ldr	r2, [pc, #40]	; (8000c60 <LoopFillZerobss+0x1e>)
 8000c38:	4c0a      	ldr	r4, [pc, #40]	; (8000c64 <LoopFillZerobss+0x22>)
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	e001      	b.n	8000c42 <LoopFillZerobss>

08000c3e <FillZerobss>:
 8000c3e:	6013      	str	r3, [r2, #0]
 8000c40:	3204      	adds	r2, #4

08000c42 <LoopFillZerobss>:
 8000c42:	42a2      	cmp	r2, r4
 8000c44:	d3fb      	bcc.n	8000c3e <FillZerobss>
 8000c46:	f7ff ffe5 	bl	8000c14 <SystemInit>
 8000c4a:	f001 ff85 	bl	8002b58 <__libc_init_array>
 8000c4e:	f7ff fabd 	bl	80001cc <main>
 8000c52:	4770      	bx	lr
 8000c54:	20000000 	.word	0x20000000
 8000c58:	20000070 	.word	0x20000070
 8000c5c:	08004dcc 	.word	0x08004dcc
 8000c60:	20000070 	.word	0x20000070
 8000c64:	2000012c 	.word	0x2000012c

08000c68 <ADC1_2_IRQHandler>:
 8000c68:	e7fe      	b.n	8000c68 <ADC1_2_IRQHandler>
	...

08000c6c <HAL_Init>:
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	af00      	add	r7, sp, #0
 8000c70:	4b08      	ldr	r3, [pc, #32]	; (8000c94 <HAL_Init+0x28>)
 8000c72:	681b      	ldr	r3, [r3, #0]
 8000c74:	4a07      	ldr	r2, [pc, #28]	; (8000c94 <HAL_Init+0x28>)
 8000c76:	f043 0310 	orr.w	r3, r3, #16
 8000c7a:	6013      	str	r3, [r2, #0]
 8000c7c:	2003      	movs	r0, #3
 8000c7e:	f000 f947 	bl	8000f10 <HAL_NVIC_SetPriorityGrouping>
 8000c82:	200f      	movs	r0, #15
 8000c84:	f000 f808 	bl	8000c98 <HAL_InitTick>
 8000c88:	f7ff fe22 	bl	80008d0 <HAL_MspInit>
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4618      	mov	r0, r3
 8000c90:	bd80      	pop	{r7, pc}
 8000c92:	bf00      	nop
 8000c94:	40022000 	.word	0x40022000

08000c98 <HAL_InitTick>:
 8000c98:	b580      	push	{r7, lr}
 8000c9a:	b082      	sub	sp, #8
 8000c9c:	af00      	add	r7, sp, #0
 8000c9e:	6078      	str	r0, [r7, #4]
 8000ca0:	4b12      	ldr	r3, [pc, #72]	; (8000cec <HAL_InitTick+0x54>)
 8000ca2:	681a      	ldr	r2, [r3, #0]
 8000ca4:	4b12      	ldr	r3, [pc, #72]	; (8000cf0 <HAL_InitTick+0x58>)
 8000ca6:	781b      	ldrb	r3, [r3, #0]
 8000ca8:	4619      	mov	r1, r3
 8000caa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000cae:	fbb3 f3f1 	udiv	r3, r3, r1
 8000cb2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000cb6:	4618      	mov	r0, r3
 8000cb8:	f000 f95f 	bl	8000f7a <HAL_SYSTICK_Config>
 8000cbc:	4603      	mov	r3, r0
 8000cbe:	2b00      	cmp	r3, #0
 8000cc0:	d001      	beq.n	8000cc6 <HAL_InitTick+0x2e>
 8000cc2:	2301      	movs	r3, #1
 8000cc4:	e00e      	b.n	8000ce4 <HAL_InitTick+0x4c>
 8000cc6:	687b      	ldr	r3, [r7, #4]
 8000cc8:	2b0f      	cmp	r3, #15
 8000cca:	d80a      	bhi.n	8000ce2 <HAL_InitTick+0x4a>
 8000ccc:	2200      	movs	r2, #0
 8000cce:	6879      	ldr	r1, [r7, #4]
 8000cd0:	f04f 30ff 	mov.w	r0, #4294967295
 8000cd4:	f000 f927 	bl	8000f26 <HAL_NVIC_SetPriority>
 8000cd8:	4a06      	ldr	r2, [pc, #24]	; (8000cf4 <HAL_InitTick+0x5c>)
 8000cda:	687b      	ldr	r3, [r7, #4]
 8000cdc:	6013      	str	r3, [r2, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	e000      	b.n	8000ce4 <HAL_InitTick+0x4c>
 8000ce2:	2301      	movs	r3, #1
 8000ce4:	4618      	mov	r0, r3
 8000ce6:	3708      	adds	r7, #8
 8000ce8:	46bd      	mov	sp, r7
 8000cea:	bd80      	pop	{r7, pc}
 8000cec:	20000000 	.word	0x20000000
 8000cf0:	20000008 	.word	0x20000008
 8000cf4:	20000004 	.word	0x20000004

08000cf8 <HAL_IncTick>:
 8000cf8:	b480      	push	{r7}
 8000cfa:	af00      	add	r7, sp, #0
 8000cfc:	4b05      	ldr	r3, [pc, #20]	; (8000d14 <HAL_IncTick+0x1c>)
 8000cfe:	781b      	ldrb	r3, [r3, #0]
 8000d00:	461a      	mov	r2, r3
 8000d02:	4b05      	ldr	r3, [pc, #20]	; (8000d18 <HAL_IncTick+0x20>)
 8000d04:	681b      	ldr	r3, [r3, #0]
 8000d06:	4413      	add	r3, r2
 8000d08:	4a03      	ldr	r2, [pc, #12]	; (8000d18 <HAL_IncTick+0x20>)
 8000d0a:	6013      	str	r3, [r2, #0]
 8000d0c:	bf00      	nop
 8000d0e:	46bd      	mov	sp, r7
 8000d10:	bc80      	pop	{r7}
 8000d12:	4770      	bx	lr
 8000d14:	20000008 	.word	0x20000008
 8000d18:	20000118 	.word	0x20000118

08000d1c <HAL_GetTick>:
 8000d1c:	b480      	push	{r7}
 8000d1e:	af00      	add	r7, sp, #0
 8000d20:	4b02      	ldr	r3, [pc, #8]	; (8000d2c <HAL_GetTick+0x10>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4618      	mov	r0, r3
 8000d26:	46bd      	mov	sp, r7
 8000d28:	bc80      	pop	{r7}
 8000d2a:	4770      	bx	lr
 8000d2c:	20000118 	.word	0x20000118

08000d30 <HAL_Delay>:
 8000d30:	b580      	push	{r7, lr}
 8000d32:	b084      	sub	sp, #16
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]
 8000d38:	f7ff fff0 	bl	8000d1c <HAL_GetTick>
 8000d3c:	60b8      	str	r0, [r7, #8]
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	60fb      	str	r3, [r7, #12]
 8000d42:	68fb      	ldr	r3, [r7, #12]
 8000d44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000d48:	d005      	beq.n	8000d56 <HAL_Delay+0x26>
 8000d4a:	4b0a      	ldr	r3, [pc, #40]	; (8000d74 <HAL_Delay+0x44>)
 8000d4c:	781b      	ldrb	r3, [r3, #0]
 8000d4e:	461a      	mov	r2, r3
 8000d50:	68fb      	ldr	r3, [r7, #12]
 8000d52:	4413      	add	r3, r2
 8000d54:	60fb      	str	r3, [r7, #12]
 8000d56:	bf00      	nop
 8000d58:	f7ff ffe0 	bl	8000d1c <HAL_GetTick>
 8000d5c:	4602      	mov	r2, r0
 8000d5e:	68bb      	ldr	r3, [r7, #8]
 8000d60:	1ad3      	subs	r3, r2, r3
 8000d62:	68fa      	ldr	r2, [r7, #12]
 8000d64:	429a      	cmp	r2, r3
 8000d66:	d8f7      	bhi.n	8000d58 <HAL_Delay+0x28>
 8000d68:	bf00      	nop
 8000d6a:	bf00      	nop
 8000d6c:	3710      	adds	r7, #16
 8000d6e:	46bd      	mov	sp, r7
 8000d70:	bd80      	pop	{r7, pc}
 8000d72:	bf00      	nop
 8000d74:	20000008 	.word	0x20000008

08000d78 <__NVIC_SetPriorityGrouping>:
 8000d78:	b480      	push	{r7}
 8000d7a:	b085      	sub	sp, #20
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	f003 0307 	and.w	r3, r3, #7
 8000d86:	60fb      	str	r3, [r7, #12]
 8000d88:	4b0c      	ldr	r3, [pc, #48]	; (8000dbc <__NVIC_SetPriorityGrouping+0x44>)
 8000d8a:	68db      	ldr	r3, [r3, #12]
 8000d8c:	60bb      	str	r3, [r7, #8]
 8000d8e:	68ba      	ldr	r2, [r7, #8]
 8000d90:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000d94:	4013      	ands	r3, r2
 8000d96:	60bb      	str	r3, [r7, #8]
 8000d98:	68fb      	ldr	r3, [r7, #12]
 8000d9a:	021a      	lsls	r2, r3, #8
 8000d9c:	68bb      	ldr	r3, [r7, #8]
 8000d9e:	4313      	orrs	r3, r2
 8000da0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000da4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000da8:	60bb      	str	r3, [r7, #8]
 8000daa:	4a04      	ldr	r2, [pc, #16]	; (8000dbc <__NVIC_SetPriorityGrouping+0x44>)
 8000dac:	68bb      	ldr	r3, [r7, #8]
 8000dae:	60d3      	str	r3, [r2, #12]
 8000db0:	bf00      	nop
 8000db2:	3714      	adds	r7, #20
 8000db4:	46bd      	mov	sp, r7
 8000db6:	bc80      	pop	{r7}
 8000db8:	4770      	bx	lr
 8000dba:	bf00      	nop
 8000dbc:	e000ed00 	.word	0xe000ed00

08000dc0 <__NVIC_GetPriorityGrouping>:
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
 8000dc4:	4b04      	ldr	r3, [pc, #16]	; (8000dd8 <__NVIC_GetPriorityGrouping+0x18>)
 8000dc6:	68db      	ldr	r3, [r3, #12]
 8000dc8:	0a1b      	lsrs	r3, r3, #8
 8000dca:	f003 0307 	and.w	r3, r3, #7
 8000dce:	4618      	mov	r0, r3
 8000dd0:	46bd      	mov	sp, r7
 8000dd2:	bc80      	pop	{r7}
 8000dd4:	4770      	bx	lr
 8000dd6:	bf00      	nop
 8000dd8:	e000ed00 	.word	0xe000ed00

08000ddc <__NVIC_EnableIRQ>:
 8000ddc:	b480      	push	{r7}
 8000dde:	b083      	sub	sp, #12
 8000de0:	af00      	add	r7, sp, #0
 8000de2:	4603      	mov	r3, r0
 8000de4:	71fb      	strb	r3, [r7, #7]
 8000de6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	db0b      	blt.n	8000e06 <__NVIC_EnableIRQ+0x2a>
 8000dee:	79fb      	ldrb	r3, [r7, #7]
 8000df0:	f003 021f 	and.w	r2, r3, #31
 8000df4:	4906      	ldr	r1, [pc, #24]	; (8000e10 <__NVIC_EnableIRQ+0x34>)
 8000df6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000dfa:	095b      	lsrs	r3, r3, #5
 8000dfc:	2001      	movs	r0, #1
 8000dfe:	fa00 f202 	lsl.w	r2, r0, r2
 8000e02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000e06:	bf00      	nop
 8000e08:	370c      	adds	r7, #12
 8000e0a:	46bd      	mov	sp, r7
 8000e0c:	bc80      	pop	{r7}
 8000e0e:	4770      	bx	lr
 8000e10:	e000e100 	.word	0xe000e100

08000e14 <__NVIC_SetPriority>:
 8000e14:	b480      	push	{r7}
 8000e16:	b083      	sub	sp, #12
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	4603      	mov	r3, r0
 8000e1c:	6039      	str	r1, [r7, #0]
 8000e1e:	71fb      	strb	r3, [r7, #7]
 8000e20:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e24:	2b00      	cmp	r3, #0
 8000e26:	db0a      	blt.n	8000e3e <__NVIC_SetPriority+0x2a>
 8000e28:	683b      	ldr	r3, [r7, #0]
 8000e2a:	b2da      	uxtb	r2, r3
 8000e2c:	490c      	ldr	r1, [pc, #48]	; (8000e60 <__NVIC_SetPriority+0x4c>)
 8000e2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e32:	0112      	lsls	r2, r2, #4
 8000e34:	b2d2      	uxtb	r2, r2
 8000e36:	440b      	add	r3, r1
 8000e38:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000e3c:	e00a      	b.n	8000e54 <__NVIC_SetPriority+0x40>
 8000e3e:	683b      	ldr	r3, [r7, #0]
 8000e40:	b2da      	uxtb	r2, r3
 8000e42:	4908      	ldr	r1, [pc, #32]	; (8000e64 <__NVIC_SetPriority+0x50>)
 8000e44:	79fb      	ldrb	r3, [r7, #7]
 8000e46:	f003 030f 	and.w	r3, r3, #15
 8000e4a:	3b04      	subs	r3, #4
 8000e4c:	0112      	lsls	r2, r2, #4
 8000e4e:	b2d2      	uxtb	r2, r2
 8000e50:	440b      	add	r3, r1
 8000e52:	761a      	strb	r2, [r3, #24]
 8000e54:	bf00      	nop
 8000e56:	370c      	adds	r7, #12
 8000e58:	46bd      	mov	sp, r7
 8000e5a:	bc80      	pop	{r7}
 8000e5c:	4770      	bx	lr
 8000e5e:	bf00      	nop
 8000e60:	e000e100 	.word	0xe000e100
 8000e64:	e000ed00 	.word	0xe000ed00

08000e68 <NVIC_EncodePriority>:
 8000e68:	b480      	push	{r7}
 8000e6a:	b089      	sub	sp, #36	; 0x24
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	60f8      	str	r0, [r7, #12]
 8000e70:	60b9      	str	r1, [r7, #8]
 8000e72:	607a      	str	r2, [r7, #4]
 8000e74:	68fb      	ldr	r3, [r7, #12]
 8000e76:	f003 0307 	and.w	r3, r3, #7
 8000e7a:	61fb      	str	r3, [r7, #28]
 8000e7c:	69fb      	ldr	r3, [r7, #28]
 8000e7e:	f1c3 0307 	rsb	r3, r3, #7
 8000e82:	2b04      	cmp	r3, #4
 8000e84:	bf28      	it	cs
 8000e86:	2304      	movcs	r3, #4
 8000e88:	61bb      	str	r3, [r7, #24]
 8000e8a:	69fb      	ldr	r3, [r7, #28]
 8000e8c:	3304      	adds	r3, #4
 8000e8e:	2b06      	cmp	r3, #6
 8000e90:	d902      	bls.n	8000e98 <NVIC_EncodePriority+0x30>
 8000e92:	69fb      	ldr	r3, [r7, #28]
 8000e94:	3b03      	subs	r3, #3
 8000e96:	e000      	b.n	8000e9a <NVIC_EncodePriority+0x32>
 8000e98:	2300      	movs	r3, #0
 8000e9a:	617b      	str	r3, [r7, #20]
 8000e9c:	f04f 32ff 	mov.w	r2, #4294967295
 8000ea0:	69bb      	ldr	r3, [r7, #24]
 8000ea2:	fa02 f303 	lsl.w	r3, r2, r3
 8000ea6:	43da      	mvns	r2, r3
 8000ea8:	68bb      	ldr	r3, [r7, #8]
 8000eaa:	401a      	ands	r2, r3
 8000eac:	697b      	ldr	r3, [r7, #20]
 8000eae:	409a      	lsls	r2, r3
 8000eb0:	f04f 31ff 	mov.w	r1, #4294967295
 8000eb4:	697b      	ldr	r3, [r7, #20]
 8000eb6:	fa01 f303 	lsl.w	r3, r1, r3
 8000eba:	43d9      	mvns	r1, r3
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	400b      	ands	r3, r1
 8000ec0:	4313      	orrs	r3, r2
 8000ec2:	4618      	mov	r0, r3
 8000ec4:	3724      	adds	r7, #36	; 0x24
 8000ec6:	46bd      	mov	sp, r7
 8000ec8:	bc80      	pop	{r7}
 8000eca:	4770      	bx	lr

08000ecc <SysTick_Config>:
 8000ecc:	b580      	push	{r7, lr}
 8000ece:	b082      	sub	sp, #8
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	6078      	str	r0, [r7, #4]
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	3b01      	subs	r3, #1
 8000ed8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000edc:	d301      	bcc.n	8000ee2 <SysTick_Config+0x16>
 8000ede:	2301      	movs	r3, #1
 8000ee0:	e00f      	b.n	8000f02 <SysTick_Config+0x36>
 8000ee2:	4a0a      	ldr	r2, [pc, #40]	; (8000f0c <SysTick_Config+0x40>)
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	3b01      	subs	r3, #1
 8000ee8:	6053      	str	r3, [r2, #4]
 8000eea:	210f      	movs	r1, #15
 8000eec:	f04f 30ff 	mov.w	r0, #4294967295
 8000ef0:	f7ff ff90 	bl	8000e14 <__NVIC_SetPriority>
 8000ef4:	4b05      	ldr	r3, [pc, #20]	; (8000f0c <SysTick_Config+0x40>)
 8000ef6:	2200      	movs	r2, #0
 8000ef8:	609a      	str	r2, [r3, #8]
 8000efa:	4b04      	ldr	r3, [pc, #16]	; (8000f0c <SysTick_Config+0x40>)
 8000efc:	2207      	movs	r2, #7
 8000efe:	601a      	str	r2, [r3, #0]
 8000f00:	2300      	movs	r3, #0
 8000f02:	4618      	mov	r0, r3
 8000f04:	3708      	adds	r7, #8
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bd80      	pop	{r7, pc}
 8000f0a:	bf00      	nop
 8000f0c:	e000e010 	.word	0xe000e010

08000f10 <HAL_NVIC_SetPriorityGrouping>:
 8000f10:	b580      	push	{r7, lr}
 8000f12:	b082      	sub	sp, #8
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	6078      	str	r0, [r7, #4]
 8000f18:	6878      	ldr	r0, [r7, #4]
 8000f1a:	f7ff ff2d 	bl	8000d78 <__NVIC_SetPriorityGrouping>
 8000f1e:	bf00      	nop
 8000f20:	3708      	adds	r7, #8
 8000f22:	46bd      	mov	sp, r7
 8000f24:	bd80      	pop	{r7, pc}

08000f26 <HAL_NVIC_SetPriority>:
 8000f26:	b580      	push	{r7, lr}
 8000f28:	b086      	sub	sp, #24
 8000f2a:	af00      	add	r7, sp, #0
 8000f2c:	4603      	mov	r3, r0
 8000f2e:	60b9      	str	r1, [r7, #8]
 8000f30:	607a      	str	r2, [r7, #4]
 8000f32:	73fb      	strb	r3, [r7, #15]
 8000f34:	2300      	movs	r3, #0
 8000f36:	617b      	str	r3, [r7, #20]
 8000f38:	f7ff ff42 	bl	8000dc0 <__NVIC_GetPriorityGrouping>
 8000f3c:	6178      	str	r0, [r7, #20]
 8000f3e:	687a      	ldr	r2, [r7, #4]
 8000f40:	68b9      	ldr	r1, [r7, #8]
 8000f42:	6978      	ldr	r0, [r7, #20]
 8000f44:	f7ff ff90 	bl	8000e68 <NVIC_EncodePriority>
 8000f48:	4602      	mov	r2, r0
 8000f4a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f4e:	4611      	mov	r1, r2
 8000f50:	4618      	mov	r0, r3
 8000f52:	f7ff ff5f 	bl	8000e14 <__NVIC_SetPriority>
 8000f56:	bf00      	nop
 8000f58:	3718      	adds	r7, #24
 8000f5a:	46bd      	mov	sp, r7
 8000f5c:	bd80      	pop	{r7, pc}

08000f5e <HAL_NVIC_EnableIRQ>:
 8000f5e:	b580      	push	{r7, lr}
 8000f60:	b082      	sub	sp, #8
 8000f62:	af00      	add	r7, sp, #0
 8000f64:	4603      	mov	r3, r0
 8000f66:	71fb      	strb	r3, [r7, #7]
 8000f68:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f6c:	4618      	mov	r0, r3
 8000f6e:	f7ff ff35 	bl	8000ddc <__NVIC_EnableIRQ>
 8000f72:	bf00      	nop
 8000f74:	3708      	adds	r7, #8
 8000f76:	46bd      	mov	sp, r7
 8000f78:	bd80      	pop	{r7, pc}

08000f7a <HAL_SYSTICK_Config>:
 8000f7a:	b580      	push	{r7, lr}
 8000f7c:	b082      	sub	sp, #8
 8000f7e:	af00      	add	r7, sp, #0
 8000f80:	6078      	str	r0, [r7, #4]
 8000f82:	6878      	ldr	r0, [r7, #4]
 8000f84:	f7ff ffa2 	bl	8000ecc <SysTick_Config>
 8000f88:	4603      	mov	r3, r0
 8000f8a:	4618      	mov	r0, r3
 8000f8c:	3708      	adds	r7, #8
 8000f8e:	46bd      	mov	sp, r7
 8000f90:	bd80      	pop	{r7, pc}

08000f92 <HAL_DMA_Abort>:
 8000f92:	b480      	push	{r7}
 8000f94:	b085      	sub	sp, #20
 8000f96:	af00      	add	r7, sp, #0
 8000f98:	6078      	str	r0, [r7, #4]
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	73fb      	strb	r3, [r7, #15]
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8000fa4:	2b02      	cmp	r3, #2
 8000fa6:	d008      	beq.n	8000fba <HAL_DMA_Abort+0x28>
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	2204      	movs	r2, #4
 8000fac:	639a      	str	r2, [r3, #56]	; 0x38
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	2200      	movs	r2, #0
 8000fb2:	f883 2020 	strb.w	r2, [r3, #32]
 8000fb6:	2301      	movs	r3, #1
 8000fb8:	e020      	b.n	8000ffc <HAL_DMA_Abort+0x6a>
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	681a      	ldr	r2, [r3, #0]
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	681b      	ldr	r3, [r3, #0]
 8000fc4:	f022 020e 	bic.w	r2, r2, #14
 8000fc8:	601a      	str	r2, [r3, #0]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	681b      	ldr	r3, [r3, #0]
 8000fce:	681a      	ldr	r2, [r3, #0]
 8000fd0:	687b      	ldr	r3, [r7, #4]
 8000fd2:	681b      	ldr	r3, [r3, #0]
 8000fd4:	f022 0201 	bic.w	r2, r2, #1
 8000fd8:	601a      	str	r2, [r3, #0]
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000fde:	687b      	ldr	r3, [r7, #4]
 8000fe0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8000fe2:	2101      	movs	r1, #1
 8000fe4:	fa01 f202 	lsl.w	r2, r1, r2
 8000fe8:	605a      	str	r2, [r3, #4]
 8000fea:	687b      	ldr	r3, [r7, #4]
 8000fec:	2201      	movs	r2, #1
 8000fee:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	f883 2020 	strb.w	r2, [r3, #32]
 8000ffa:	7bfb      	ldrb	r3, [r7, #15]
 8000ffc:	4618      	mov	r0, r3
 8000ffe:	3714      	adds	r7, #20
 8001000:	46bd      	mov	sp, r7
 8001002:	bc80      	pop	{r7}
 8001004:	4770      	bx	lr
	...

08001008 <HAL_DMA_Abort_IT>:
 8001008:	b580      	push	{r7, lr}
 800100a:	b084      	sub	sp, #16
 800100c:	af00      	add	r7, sp, #0
 800100e:	6078      	str	r0, [r7, #4]
 8001010:	2300      	movs	r3, #0
 8001012:	73fb      	strb	r3, [r7, #15]
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800101a:	2b02      	cmp	r3, #2
 800101c:	d005      	beq.n	800102a <HAL_DMA_Abort_IT+0x22>
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	2204      	movs	r2, #4
 8001022:	639a      	str	r2, [r3, #56]	; 0x38
 8001024:	2301      	movs	r3, #1
 8001026:	73fb      	strb	r3, [r7, #15]
 8001028:	e051      	b.n	80010ce <HAL_DMA_Abort_IT+0xc6>
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	681a      	ldr	r2, [r3, #0]
 8001030:	687b      	ldr	r3, [r7, #4]
 8001032:	681b      	ldr	r3, [r3, #0]
 8001034:	f022 020e 	bic.w	r2, r2, #14
 8001038:	601a      	str	r2, [r3, #0]
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	681a      	ldr	r2, [r3, #0]
 8001040:	687b      	ldr	r3, [r7, #4]
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	f022 0201 	bic.w	r2, r2, #1
 8001048:	601a      	str	r2, [r3, #0]
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	4a22      	ldr	r2, [pc, #136]	; (80010d8 <HAL_DMA_Abort_IT+0xd0>)
 8001050:	4293      	cmp	r3, r2
 8001052:	d029      	beq.n	80010a8 <HAL_DMA_Abort_IT+0xa0>
 8001054:	687b      	ldr	r3, [r7, #4]
 8001056:	681b      	ldr	r3, [r3, #0]
 8001058:	4a20      	ldr	r2, [pc, #128]	; (80010dc <HAL_DMA_Abort_IT+0xd4>)
 800105a:	4293      	cmp	r3, r2
 800105c:	d022      	beq.n	80010a4 <HAL_DMA_Abort_IT+0x9c>
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	681b      	ldr	r3, [r3, #0]
 8001062:	4a1f      	ldr	r2, [pc, #124]	; (80010e0 <HAL_DMA_Abort_IT+0xd8>)
 8001064:	4293      	cmp	r3, r2
 8001066:	d01a      	beq.n	800109e <HAL_DMA_Abort_IT+0x96>
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	4a1d      	ldr	r2, [pc, #116]	; (80010e4 <HAL_DMA_Abort_IT+0xdc>)
 800106e:	4293      	cmp	r3, r2
 8001070:	d012      	beq.n	8001098 <HAL_DMA_Abort_IT+0x90>
 8001072:	687b      	ldr	r3, [r7, #4]
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	4a1c      	ldr	r2, [pc, #112]	; (80010e8 <HAL_DMA_Abort_IT+0xe0>)
 8001078:	4293      	cmp	r3, r2
 800107a:	d00a      	beq.n	8001092 <HAL_DMA_Abort_IT+0x8a>
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	4a1a      	ldr	r2, [pc, #104]	; (80010ec <HAL_DMA_Abort_IT+0xe4>)
 8001082:	4293      	cmp	r3, r2
 8001084:	d102      	bne.n	800108c <HAL_DMA_Abort_IT+0x84>
 8001086:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800108a:	e00e      	b.n	80010aa <HAL_DMA_Abort_IT+0xa2>
 800108c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001090:	e00b      	b.n	80010aa <HAL_DMA_Abort_IT+0xa2>
 8001092:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001096:	e008      	b.n	80010aa <HAL_DMA_Abort_IT+0xa2>
 8001098:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800109c:	e005      	b.n	80010aa <HAL_DMA_Abort_IT+0xa2>
 800109e:	f44f 7380 	mov.w	r3, #256	; 0x100
 80010a2:	e002      	b.n	80010aa <HAL_DMA_Abort_IT+0xa2>
 80010a4:	2310      	movs	r3, #16
 80010a6:	e000      	b.n	80010aa <HAL_DMA_Abort_IT+0xa2>
 80010a8:	2301      	movs	r3, #1
 80010aa:	4a11      	ldr	r2, [pc, #68]	; (80010f0 <HAL_DMA_Abort_IT+0xe8>)
 80010ac:	6053      	str	r3, [r2, #4]
 80010ae:	687b      	ldr	r3, [r7, #4]
 80010b0:	2201      	movs	r2, #1
 80010b2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	2200      	movs	r2, #0
 80010ba:	f883 2020 	strb.w	r2, [r3, #32]
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d003      	beq.n	80010ce <HAL_DMA_Abort_IT+0xc6>
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010ca:	6878      	ldr	r0, [r7, #4]
 80010cc:	4798      	blx	r3
 80010ce:	7bfb      	ldrb	r3, [r7, #15]
 80010d0:	4618      	mov	r0, r3
 80010d2:	3710      	adds	r7, #16
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bd80      	pop	{r7, pc}
 80010d8:	40020008 	.word	0x40020008
 80010dc:	4002001c 	.word	0x4002001c
 80010e0:	40020030 	.word	0x40020030
 80010e4:	40020044 	.word	0x40020044
 80010e8:	40020058 	.word	0x40020058
 80010ec:	4002006c 	.word	0x4002006c
 80010f0:	40020000 	.word	0x40020000

080010f4 <HAL_GPIO_Init>:
 80010f4:	b480      	push	{r7}
 80010f6:	b08b      	sub	sp, #44	; 0x2c
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
 80010fc:	6039      	str	r1, [r7, #0]
 80010fe:	2300      	movs	r3, #0
 8001100:	627b      	str	r3, [r7, #36]	; 0x24
 8001102:	2300      	movs	r3, #0
 8001104:	623b      	str	r3, [r7, #32]
 8001106:	e169      	b.n	80013dc <HAL_GPIO_Init+0x2e8>
 8001108:	2201      	movs	r2, #1
 800110a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800110c:	fa02 f303 	lsl.w	r3, r2, r3
 8001110:	61fb      	str	r3, [r7, #28]
 8001112:	683b      	ldr	r3, [r7, #0]
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	69fa      	ldr	r2, [r7, #28]
 8001118:	4013      	ands	r3, r2
 800111a:	61bb      	str	r3, [r7, #24]
 800111c:	69ba      	ldr	r2, [r7, #24]
 800111e:	69fb      	ldr	r3, [r7, #28]
 8001120:	429a      	cmp	r2, r3
 8001122:	f040 8158 	bne.w	80013d6 <HAL_GPIO_Init+0x2e2>
 8001126:	683b      	ldr	r3, [r7, #0]
 8001128:	685b      	ldr	r3, [r3, #4]
 800112a:	4a9a      	ldr	r2, [pc, #616]	; (8001394 <HAL_GPIO_Init+0x2a0>)
 800112c:	4293      	cmp	r3, r2
 800112e:	d05e      	beq.n	80011ee <HAL_GPIO_Init+0xfa>
 8001130:	4a98      	ldr	r2, [pc, #608]	; (8001394 <HAL_GPIO_Init+0x2a0>)
 8001132:	4293      	cmp	r3, r2
 8001134:	d875      	bhi.n	8001222 <HAL_GPIO_Init+0x12e>
 8001136:	4a98      	ldr	r2, [pc, #608]	; (8001398 <HAL_GPIO_Init+0x2a4>)
 8001138:	4293      	cmp	r3, r2
 800113a:	d058      	beq.n	80011ee <HAL_GPIO_Init+0xfa>
 800113c:	4a96      	ldr	r2, [pc, #600]	; (8001398 <HAL_GPIO_Init+0x2a4>)
 800113e:	4293      	cmp	r3, r2
 8001140:	d86f      	bhi.n	8001222 <HAL_GPIO_Init+0x12e>
 8001142:	4a96      	ldr	r2, [pc, #600]	; (800139c <HAL_GPIO_Init+0x2a8>)
 8001144:	4293      	cmp	r3, r2
 8001146:	d052      	beq.n	80011ee <HAL_GPIO_Init+0xfa>
 8001148:	4a94      	ldr	r2, [pc, #592]	; (800139c <HAL_GPIO_Init+0x2a8>)
 800114a:	4293      	cmp	r3, r2
 800114c:	d869      	bhi.n	8001222 <HAL_GPIO_Init+0x12e>
 800114e:	4a94      	ldr	r2, [pc, #592]	; (80013a0 <HAL_GPIO_Init+0x2ac>)
 8001150:	4293      	cmp	r3, r2
 8001152:	d04c      	beq.n	80011ee <HAL_GPIO_Init+0xfa>
 8001154:	4a92      	ldr	r2, [pc, #584]	; (80013a0 <HAL_GPIO_Init+0x2ac>)
 8001156:	4293      	cmp	r3, r2
 8001158:	d863      	bhi.n	8001222 <HAL_GPIO_Init+0x12e>
 800115a:	4a92      	ldr	r2, [pc, #584]	; (80013a4 <HAL_GPIO_Init+0x2b0>)
 800115c:	4293      	cmp	r3, r2
 800115e:	d046      	beq.n	80011ee <HAL_GPIO_Init+0xfa>
 8001160:	4a90      	ldr	r2, [pc, #576]	; (80013a4 <HAL_GPIO_Init+0x2b0>)
 8001162:	4293      	cmp	r3, r2
 8001164:	d85d      	bhi.n	8001222 <HAL_GPIO_Init+0x12e>
 8001166:	2b12      	cmp	r3, #18
 8001168:	d82a      	bhi.n	80011c0 <HAL_GPIO_Init+0xcc>
 800116a:	2b12      	cmp	r3, #18
 800116c:	d859      	bhi.n	8001222 <HAL_GPIO_Init+0x12e>
 800116e:	a201      	add	r2, pc, #4	; (adr r2, 8001174 <HAL_GPIO_Init+0x80>)
 8001170:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001174:	080011ef 	.word	0x080011ef
 8001178:	080011c9 	.word	0x080011c9
 800117c:	080011db 	.word	0x080011db
 8001180:	0800121d 	.word	0x0800121d
 8001184:	08001223 	.word	0x08001223
 8001188:	08001223 	.word	0x08001223
 800118c:	08001223 	.word	0x08001223
 8001190:	08001223 	.word	0x08001223
 8001194:	08001223 	.word	0x08001223
 8001198:	08001223 	.word	0x08001223
 800119c:	08001223 	.word	0x08001223
 80011a0:	08001223 	.word	0x08001223
 80011a4:	08001223 	.word	0x08001223
 80011a8:	08001223 	.word	0x08001223
 80011ac:	08001223 	.word	0x08001223
 80011b0:	08001223 	.word	0x08001223
 80011b4:	08001223 	.word	0x08001223
 80011b8:	080011d1 	.word	0x080011d1
 80011bc:	080011e5 	.word	0x080011e5
 80011c0:	4a79      	ldr	r2, [pc, #484]	; (80013a8 <HAL_GPIO_Init+0x2b4>)
 80011c2:	4293      	cmp	r3, r2
 80011c4:	d013      	beq.n	80011ee <HAL_GPIO_Init+0xfa>
 80011c6:	e02c      	b.n	8001222 <HAL_GPIO_Init+0x12e>
 80011c8:	683b      	ldr	r3, [r7, #0]
 80011ca:	68db      	ldr	r3, [r3, #12]
 80011cc:	623b      	str	r3, [r7, #32]
 80011ce:	e029      	b.n	8001224 <HAL_GPIO_Init+0x130>
 80011d0:	683b      	ldr	r3, [r7, #0]
 80011d2:	68db      	ldr	r3, [r3, #12]
 80011d4:	3304      	adds	r3, #4
 80011d6:	623b      	str	r3, [r7, #32]
 80011d8:	e024      	b.n	8001224 <HAL_GPIO_Init+0x130>
 80011da:	683b      	ldr	r3, [r7, #0]
 80011dc:	68db      	ldr	r3, [r3, #12]
 80011de:	3308      	adds	r3, #8
 80011e0:	623b      	str	r3, [r7, #32]
 80011e2:	e01f      	b.n	8001224 <HAL_GPIO_Init+0x130>
 80011e4:	683b      	ldr	r3, [r7, #0]
 80011e6:	68db      	ldr	r3, [r3, #12]
 80011e8:	330c      	adds	r3, #12
 80011ea:	623b      	str	r3, [r7, #32]
 80011ec:	e01a      	b.n	8001224 <HAL_GPIO_Init+0x130>
 80011ee:	683b      	ldr	r3, [r7, #0]
 80011f0:	689b      	ldr	r3, [r3, #8]
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d102      	bne.n	80011fc <HAL_GPIO_Init+0x108>
 80011f6:	2304      	movs	r3, #4
 80011f8:	623b      	str	r3, [r7, #32]
 80011fa:	e013      	b.n	8001224 <HAL_GPIO_Init+0x130>
 80011fc:	683b      	ldr	r3, [r7, #0]
 80011fe:	689b      	ldr	r3, [r3, #8]
 8001200:	2b01      	cmp	r3, #1
 8001202:	d105      	bne.n	8001210 <HAL_GPIO_Init+0x11c>
 8001204:	2308      	movs	r3, #8
 8001206:	623b      	str	r3, [r7, #32]
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	69fa      	ldr	r2, [r7, #28]
 800120c:	611a      	str	r2, [r3, #16]
 800120e:	e009      	b.n	8001224 <HAL_GPIO_Init+0x130>
 8001210:	2308      	movs	r3, #8
 8001212:	623b      	str	r3, [r7, #32]
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	69fa      	ldr	r2, [r7, #28]
 8001218:	615a      	str	r2, [r3, #20]
 800121a:	e003      	b.n	8001224 <HAL_GPIO_Init+0x130>
 800121c:	2300      	movs	r3, #0
 800121e:	623b      	str	r3, [r7, #32]
 8001220:	e000      	b.n	8001224 <HAL_GPIO_Init+0x130>
 8001222:	bf00      	nop
 8001224:	69bb      	ldr	r3, [r7, #24]
 8001226:	2bff      	cmp	r3, #255	; 0xff
 8001228:	d801      	bhi.n	800122e <HAL_GPIO_Init+0x13a>
 800122a:	687b      	ldr	r3, [r7, #4]
 800122c:	e001      	b.n	8001232 <HAL_GPIO_Init+0x13e>
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	3304      	adds	r3, #4
 8001232:	617b      	str	r3, [r7, #20]
 8001234:	69bb      	ldr	r3, [r7, #24]
 8001236:	2bff      	cmp	r3, #255	; 0xff
 8001238:	d802      	bhi.n	8001240 <HAL_GPIO_Init+0x14c>
 800123a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800123c:	009b      	lsls	r3, r3, #2
 800123e:	e002      	b.n	8001246 <HAL_GPIO_Init+0x152>
 8001240:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001242:	3b08      	subs	r3, #8
 8001244:	009b      	lsls	r3, r3, #2
 8001246:	613b      	str	r3, [r7, #16]
 8001248:	697b      	ldr	r3, [r7, #20]
 800124a:	681a      	ldr	r2, [r3, #0]
 800124c:	210f      	movs	r1, #15
 800124e:	693b      	ldr	r3, [r7, #16]
 8001250:	fa01 f303 	lsl.w	r3, r1, r3
 8001254:	43db      	mvns	r3, r3
 8001256:	401a      	ands	r2, r3
 8001258:	6a39      	ldr	r1, [r7, #32]
 800125a:	693b      	ldr	r3, [r7, #16]
 800125c:	fa01 f303 	lsl.w	r3, r1, r3
 8001260:	431a      	orrs	r2, r3
 8001262:	697b      	ldr	r3, [r7, #20]
 8001264:	601a      	str	r2, [r3, #0]
 8001266:	683b      	ldr	r3, [r7, #0]
 8001268:	685b      	ldr	r3, [r3, #4]
 800126a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800126e:	2b00      	cmp	r3, #0
 8001270:	f000 80b1 	beq.w	80013d6 <HAL_GPIO_Init+0x2e2>
 8001274:	4b4d      	ldr	r3, [pc, #308]	; (80013ac <HAL_GPIO_Init+0x2b8>)
 8001276:	699b      	ldr	r3, [r3, #24]
 8001278:	4a4c      	ldr	r2, [pc, #304]	; (80013ac <HAL_GPIO_Init+0x2b8>)
 800127a:	f043 0301 	orr.w	r3, r3, #1
 800127e:	6193      	str	r3, [r2, #24]
 8001280:	4b4a      	ldr	r3, [pc, #296]	; (80013ac <HAL_GPIO_Init+0x2b8>)
 8001282:	699b      	ldr	r3, [r3, #24]
 8001284:	f003 0301 	and.w	r3, r3, #1
 8001288:	60bb      	str	r3, [r7, #8]
 800128a:	68bb      	ldr	r3, [r7, #8]
 800128c:	4a48      	ldr	r2, [pc, #288]	; (80013b0 <HAL_GPIO_Init+0x2bc>)
 800128e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001290:	089b      	lsrs	r3, r3, #2
 8001292:	3302      	adds	r3, #2
 8001294:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001298:	60fb      	str	r3, [r7, #12]
 800129a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800129c:	f003 0303 	and.w	r3, r3, #3
 80012a0:	009b      	lsls	r3, r3, #2
 80012a2:	220f      	movs	r2, #15
 80012a4:	fa02 f303 	lsl.w	r3, r2, r3
 80012a8:	43db      	mvns	r3, r3
 80012aa:	68fa      	ldr	r2, [r7, #12]
 80012ac:	4013      	ands	r3, r2
 80012ae:	60fb      	str	r3, [r7, #12]
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	4a40      	ldr	r2, [pc, #256]	; (80013b4 <HAL_GPIO_Init+0x2c0>)
 80012b4:	4293      	cmp	r3, r2
 80012b6:	d013      	beq.n	80012e0 <HAL_GPIO_Init+0x1ec>
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	4a3f      	ldr	r2, [pc, #252]	; (80013b8 <HAL_GPIO_Init+0x2c4>)
 80012bc:	4293      	cmp	r3, r2
 80012be:	d00d      	beq.n	80012dc <HAL_GPIO_Init+0x1e8>
 80012c0:	687b      	ldr	r3, [r7, #4]
 80012c2:	4a3e      	ldr	r2, [pc, #248]	; (80013bc <HAL_GPIO_Init+0x2c8>)
 80012c4:	4293      	cmp	r3, r2
 80012c6:	d007      	beq.n	80012d8 <HAL_GPIO_Init+0x1e4>
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	4a3d      	ldr	r2, [pc, #244]	; (80013c0 <HAL_GPIO_Init+0x2cc>)
 80012cc:	4293      	cmp	r3, r2
 80012ce:	d101      	bne.n	80012d4 <HAL_GPIO_Init+0x1e0>
 80012d0:	2303      	movs	r3, #3
 80012d2:	e006      	b.n	80012e2 <HAL_GPIO_Init+0x1ee>
 80012d4:	2304      	movs	r3, #4
 80012d6:	e004      	b.n	80012e2 <HAL_GPIO_Init+0x1ee>
 80012d8:	2302      	movs	r3, #2
 80012da:	e002      	b.n	80012e2 <HAL_GPIO_Init+0x1ee>
 80012dc:	2301      	movs	r3, #1
 80012de:	e000      	b.n	80012e2 <HAL_GPIO_Init+0x1ee>
 80012e0:	2300      	movs	r3, #0
 80012e2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80012e4:	f002 0203 	and.w	r2, r2, #3
 80012e8:	0092      	lsls	r2, r2, #2
 80012ea:	4093      	lsls	r3, r2
 80012ec:	68fa      	ldr	r2, [r7, #12]
 80012ee:	4313      	orrs	r3, r2
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	492f      	ldr	r1, [pc, #188]	; (80013b0 <HAL_GPIO_Init+0x2bc>)
 80012f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012f6:	089b      	lsrs	r3, r3, #2
 80012f8:	3302      	adds	r3, #2
 80012fa:	68fa      	ldr	r2, [r7, #12]
 80012fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001300:	683b      	ldr	r3, [r7, #0]
 8001302:	685b      	ldr	r3, [r3, #4]
 8001304:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001308:	2b00      	cmp	r3, #0
 800130a:	d006      	beq.n	800131a <HAL_GPIO_Init+0x226>
 800130c:	4b2d      	ldr	r3, [pc, #180]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800130e:	681a      	ldr	r2, [r3, #0]
 8001310:	492c      	ldr	r1, [pc, #176]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001312:	69bb      	ldr	r3, [r7, #24]
 8001314:	4313      	orrs	r3, r2
 8001316:	600b      	str	r3, [r1, #0]
 8001318:	e006      	b.n	8001328 <HAL_GPIO_Init+0x234>
 800131a:	4b2a      	ldr	r3, [pc, #168]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800131c:	681a      	ldr	r2, [r3, #0]
 800131e:	69bb      	ldr	r3, [r7, #24]
 8001320:	43db      	mvns	r3, r3
 8001322:	4928      	ldr	r1, [pc, #160]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001324:	4013      	ands	r3, r2
 8001326:	600b      	str	r3, [r1, #0]
 8001328:	683b      	ldr	r3, [r7, #0]
 800132a:	685b      	ldr	r3, [r3, #4]
 800132c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001330:	2b00      	cmp	r3, #0
 8001332:	d006      	beq.n	8001342 <HAL_GPIO_Init+0x24e>
 8001334:	4b23      	ldr	r3, [pc, #140]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001336:	685a      	ldr	r2, [r3, #4]
 8001338:	4922      	ldr	r1, [pc, #136]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800133a:	69bb      	ldr	r3, [r7, #24]
 800133c:	4313      	orrs	r3, r2
 800133e:	604b      	str	r3, [r1, #4]
 8001340:	e006      	b.n	8001350 <HAL_GPIO_Init+0x25c>
 8001342:	4b20      	ldr	r3, [pc, #128]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001344:	685a      	ldr	r2, [r3, #4]
 8001346:	69bb      	ldr	r3, [r7, #24]
 8001348:	43db      	mvns	r3, r3
 800134a:	491e      	ldr	r1, [pc, #120]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800134c:	4013      	ands	r3, r2
 800134e:	604b      	str	r3, [r1, #4]
 8001350:	683b      	ldr	r3, [r7, #0]
 8001352:	685b      	ldr	r3, [r3, #4]
 8001354:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001358:	2b00      	cmp	r3, #0
 800135a:	d006      	beq.n	800136a <HAL_GPIO_Init+0x276>
 800135c:	4b19      	ldr	r3, [pc, #100]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800135e:	689a      	ldr	r2, [r3, #8]
 8001360:	4918      	ldr	r1, [pc, #96]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001362:	69bb      	ldr	r3, [r7, #24]
 8001364:	4313      	orrs	r3, r2
 8001366:	608b      	str	r3, [r1, #8]
 8001368:	e006      	b.n	8001378 <HAL_GPIO_Init+0x284>
 800136a:	4b16      	ldr	r3, [pc, #88]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800136c:	689a      	ldr	r2, [r3, #8]
 800136e:	69bb      	ldr	r3, [r7, #24]
 8001370:	43db      	mvns	r3, r3
 8001372:	4914      	ldr	r1, [pc, #80]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001374:	4013      	ands	r3, r2
 8001376:	608b      	str	r3, [r1, #8]
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	685b      	ldr	r3, [r3, #4]
 800137c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001380:	2b00      	cmp	r3, #0
 8001382:	d021      	beq.n	80013c8 <HAL_GPIO_Init+0x2d4>
 8001384:	4b0f      	ldr	r3, [pc, #60]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 8001386:	68da      	ldr	r2, [r3, #12]
 8001388:	490e      	ldr	r1, [pc, #56]	; (80013c4 <HAL_GPIO_Init+0x2d0>)
 800138a:	69bb      	ldr	r3, [r7, #24]
 800138c:	4313      	orrs	r3, r2
 800138e:	60cb      	str	r3, [r1, #12]
 8001390:	e021      	b.n	80013d6 <HAL_GPIO_Init+0x2e2>
 8001392:	bf00      	nop
 8001394:	10320000 	.word	0x10320000
 8001398:	10310000 	.word	0x10310000
 800139c:	10220000 	.word	0x10220000
 80013a0:	10210000 	.word	0x10210000
 80013a4:	10120000 	.word	0x10120000
 80013a8:	10110000 	.word	0x10110000
 80013ac:	40021000 	.word	0x40021000
 80013b0:	40010000 	.word	0x40010000
 80013b4:	40010800 	.word	0x40010800
 80013b8:	40010c00 	.word	0x40010c00
 80013bc:	40011000 	.word	0x40011000
 80013c0:	40011400 	.word	0x40011400
 80013c4:	40010400 	.word	0x40010400
 80013c8:	4b0b      	ldr	r3, [pc, #44]	; (80013f8 <HAL_GPIO_Init+0x304>)
 80013ca:	68da      	ldr	r2, [r3, #12]
 80013cc:	69bb      	ldr	r3, [r7, #24]
 80013ce:	43db      	mvns	r3, r3
 80013d0:	4909      	ldr	r1, [pc, #36]	; (80013f8 <HAL_GPIO_Init+0x304>)
 80013d2:	4013      	ands	r3, r2
 80013d4:	60cb      	str	r3, [r1, #12]
 80013d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013d8:	3301      	adds	r3, #1
 80013da:	627b      	str	r3, [r7, #36]	; 0x24
 80013dc:	683b      	ldr	r3, [r7, #0]
 80013de:	681a      	ldr	r2, [r3, #0]
 80013e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013e2:	fa22 f303 	lsr.w	r3, r2, r3
 80013e6:	2b00      	cmp	r3, #0
 80013e8:	f47f ae8e 	bne.w	8001108 <HAL_GPIO_Init+0x14>
 80013ec:	bf00      	nop
 80013ee:	bf00      	nop
 80013f0:	372c      	adds	r7, #44	; 0x2c
 80013f2:	46bd      	mov	sp, r7
 80013f4:	bc80      	pop	{r7}
 80013f6:	4770      	bx	lr
 80013f8:	40010400 	.word	0x40010400

080013fc <HAL_GPIO_WritePin>:
 80013fc:	b480      	push	{r7}
 80013fe:	b083      	sub	sp, #12
 8001400:	af00      	add	r7, sp, #0
 8001402:	6078      	str	r0, [r7, #4]
 8001404:	460b      	mov	r3, r1
 8001406:	807b      	strh	r3, [r7, #2]
 8001408:	4613      	mov	r3, r2
 800140a:	707b      	strb	r3, [r7, #1]
 800140c:	787b      	ldrb	r3, [r7, #1]
 800140e:	2b00      	cmp	r3, #0
 8001410:	d003      	beq.n	800141a <HAL_GPIO_WritePin+0x1e>
 8001412:	887a      	ldrh	r2, [r7, #2]
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	611a      	str	r2, [r3, #16]
 8001418:	e003      	b.n	8001422 <HAL_GPIO_WritePin+0x26>
 800141a:	887b      	ldrh	r3, [r7, #2]
 800141c:	041a      	lsls	r2, r3, #16
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	611a      	str	r2, [r3, #16]
 8001422:	bf00      	nop
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	bc80      	pop	{r7}
 800142a:	4770      	bx	lr

0800142c <HAL_GPIO_TogglePin>:
 800142c:	b480      	push	{r7}
 800142e:	b085      	sub	sp, #20
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]
 8001434:	460b      	mov	r3, r1
 8001436:	807b      	strh	r3, [r7, #2]
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	68db      	ldr	r3, [r3, #12]
 800143c:	60fb      	str	r3, [r7, #12]
 800143e:	887a      	ldrh	r2, [r7, #2]
 8001440:	68fb      	ldr	r3, [r7, #12]
 8001442:	4013      	ands	r3, r2
 8001444:	041a      	lsls	r2, r3, #16
 8001446:	68fb      	ldr	r3, [r7, #12]
 8001448:	43d9      	mvns	r1, r3
 800144a:	887b      	ldrh	r3, [r7, #2]
 800144c:	400b      	ands	r3, r1
 800144e:	431a      	orrs	r2, r3
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	611a      	str	r2, [r3, #16]
 8001454:	bf00      	nop
 8001456:	3714      	adds	r7, #20
 8001458:	46bd      	mov	sp, r7
 800145a:	bc80      	pop	{r7}
 800145c:	4770      	bx	lr
	...

08001460 <HAL_RCC_OscConfig>:
 8001460:	b580      	push	{r7, lr}
 8001462:	b086      	sub	sp, #24
 8001464:	af00      	add	r7, sp, #0
 8001466:	6078      	str	r0, [r7, #4]
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	2b00      	cmp	r3, #0
 800146c:	d101      	bne.n	8001472 <HAL_RCC_OscConfig+0x12>
 800146e:	2301      	movs	r3, #1
 8001470:	e272      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001472:	687b      	ldr	r3, [r7, #4]
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	f003 0301 	and.w	r3, r3, #1
 800147a:	2b00      	cmp	r3, #0
 800147c:	f000 8087 	beq.w	800158e <HAL_RCC_OscConfig+0x12e>
 8001480:	4b92      	ldr	r3, [pc, #584]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001482:	685b      	ldr	r3, [r3, #4]
 8001484:	f003 030c 	and.w	r3, r3, #12
 8001488:	2b04      	cmp	r3, #4
 800148a:	d00c      	beq.n	80014a6 <HAL_RCC_OscConfig+0x46>
 800148c:	4b8f      	ldr	r3, [pc, #572]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 800148e:	685b      	ldr	r3, [r3, #4]
 8001490:	f003 030c 	and.w	r3, r3, #12
 8001494:	2b08      	cmp	r3, #8
 8001496:	d112      	bne.n	80014be <HAL_RCC_OscConfig+0x5e>
 8001498:	4b8c      	ldr	r3, [pc, #560]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 800149a:	685b      	ldr	r3, [r3, #4]
 800149c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80014a0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80014a4:	d10b      	bne.n	80014be <HAL_RCC_OscConfig+0x5e>
 80014a6:	4b89      	ldr	r3, [pc, #548]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014a8:	681b      	ldr	r3, [r3, #0]
 80014aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d06c      	beq.n	800158c <HAL_RCC_OscConfig+0x12c>
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	685b      	ldr	r3, [r3, #4]
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d168      	bne.n	800158c <HAL_RCC_OscConfig+0x12c>
 80014ba:	2301      	movs	r3, #1
 80014bc:	e24c      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 80014be:	687b      	ldr	r3, [r7, #4]
 80014c0:	685b      	ldr	r3, [r3, #4]
 80014c2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80014c6:	d106      	bne.n	80014d6 <HAL_RCC_OscConfig+0x76>
 80014c8:	4b80      	ldr	r3, [pc, #512]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014ca:	681b      	ldr	r3, [r3, #0]
 80014cc:	4a7f      	ldr	r2, [pc, #508]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014ce:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80014d2:	6013      	str	r3, [r2, #0]
 80014d4:	e02e      	b.n	8001534 <HAL_RCC_OscConfig+0xd4>
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	685b      	ldr	r3, [r3, #4]
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d10c      	bne.n	80014f8 <HAL_RCC_OscConfig+0x98>
 80014de:	4b7b      	ldr	r3, [pc, #492]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	4a7a      	ldr	r2, [pc, #488]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014e4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80014e8:	6013      	str	r3, [r2, #0]
 80014ea:	4b78      	ldr	r3, [pc, #480]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014ec:	681b      	ldr	r3, [r3, #0]
 80014ee:	4a77      	ldr	r2, [pc, #476]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80014f0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80014f4:	6013      	str	r3, [r2, #0]
 80014f6:	e01d      	b.n	8001534 <HAL_RCC_OscConfig+0xd4>
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	685b      	ldr	r3, [r3, #4]
 80014fc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001500:	d10c      	bne.n	800151c <HAL_RCC_OscConfig+0xbc>
 8001502:	4b72      	ldr	r3, [pc, #456]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001504:	681b      	ldr	r3, [r3, #0]
 8001506:	4a71      	ldr	r2, [pc, #452]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001508:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800150c:	6013      	str	r3, [r2, #0]
 800150e:	4b6f      	ldr	r3, [pc, #444]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	4a6e      	ldr	r2, [pc, #440]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001514:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001518:	6013      	str	r3, [r2, #0]
 800151a:	e00b      	b.n	8001534 <HAL_RCC_OscConfig+0xd4>
 800151c:	4b6b      	ldr	r3, [pc, #428]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	4a6a      	ldr	r2, [pc, #424]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001522:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001526:	6013      	str	r3, [r2, #0]
 8001528:	4b68      	ldr	r3, [pc, #416]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	4a67      	ldr	r2, [pc, #412]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 800152e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001532:	6013      	str	r3, [r2, #0]
 8001534:	687b      	ldr	r3, [r7, #4]
 8001536:	685b      	ldr	r3, [r3, #4]
 8001538:	2b00      	cmp	r3, #0
 800153a:	d013      	beq.n	8001564 <HAL_RCC_OscConfig+0x104>
 800153c:	f7ff fbee 	bl	8000d1c <HAL_GetTick>
 8001540:	6138      	str	r0, [r7, #16]
 8001542:	e008      	b.n	8001556 <HAL_RCC_OscConfig+0xf6>
 8001544:	f7ff fbea 	bl	8000d1c <HAL_GetTick>
 8001548:	4602      	mov	r2, r0
 800154a:	693b      	ldr	r3, [r7, #16]
 800154c:	1ad3      	subs	r3, r2, r3
 800154e:	2b64      	cmp	r3, #100	; 0x64
 8001550:	d901      	bls.n	8001556 <HAL_RCC_OscConfig+0xf6>
 8001552:	2303      	movs	r3, #3
 8001554:	e200      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001556:	4b5d      	ldr	r3, [pc, #372]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800155e:	2b00      	cmp	r3, #0
 8001560:	d0f0      	beq.n	8001544 <HAL_RCC_OscConfig+0xe4>
 8001562:	e014      	b.n	800158e <HAL_RCC_OscConfig+0x12e>
 8001564:	f7ff fbda 	bl	8000d1c <HAL_GetTick>
 8001568:	6138      	str	r0, [r7, #16]
 800156a:	e008      	b.n	800157e <HAL_RCC_OscConfig+0x11e>
 800156c:	f7ff fbd6 	bl	8000d1c <HAL_GetTick>
 8001570:	4602      	mov	r2, r0
 8001572:	693b      	ldr	r3, [r7, #16]
 8001574:	1ad3      	subs	r3, r2, r3
 8001576:	2b64      	cmp	r3, #100	; 0x64
 8001578:	d901      	bls.n	800157e <HAL_RCC_OscConfig+0x11e>
 800157a:	2303      	movs	r3, #3
 800157c:	e1ec      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 800157e:	4b53      	ldr	r3, [pc, #332]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001586:	2b00      	cmp	r3, #0
 8001588:	d1f0      	bne.n	800156c <HAL_RCC_OscConfig+0x10c>
 800158a:	e000      	b.n	800158e <HAL_RCC_OscConfig+0x12e>
 800158c:	bf00      	nop
 800158e:	687b      	ldr	r3, [r7, #4]
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	f003 0302 	and.w	r3, r3, #2
 8001596:	2b00      	cmp	r3, #0
 8001598:	d063      	beq.n	8001662 <HAL_RCC_OscConfig+0x202>
 800159a:	4b4c      	ldr	r3, [pc, #304]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 800159c:	685b      	ldr	r3, [r3, #4]
 800159e:	f003 030c 	and.w	r3, r3, #12
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d00b      	beq.n	80015be <HAL_RCC_OscConfig+0x15e>
 80015a6:	4b49      	ldr	r3, [pc, #292]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80015a8:	685b      	ldr	r3, [r3, #4]
 80015aa:	f003 030c 	and.w	r3, r3, #12
 80015ae:	2b08      	cmp	r3, #8
 80015b0:	d11c      	bne.n	80015ec <HAL_RCC_OscConfig+0x18c>
 80015b2:	4b46      	ldr	r3, [pc, #280]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80015b4:	685b      	ldr	r3, [r3, #4]
 80015b6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	d116      	bne.n	80015ec <HAL_RCC_OscConfig+0x18c>
 80015be:	4b43      	ldr	r3, [pc, #268]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80015c0:	681b      	ldr	r3, [r3, #0]
 80015c2:	f003 0302 	and.w	r3, r3, #2
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d005      	beq.n	80015d6 <HAL_RCC_OscConfig+0x176>
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	691b      	ldr	r3, [r3, #16]
 80015ce:	2b01      	cmp	r3, #1
 80015d0:	d001      	beq.n	80015d6 <HAL_RCC_OscConfig+0x176>
 80015d2:	2301      	movs	r3, #1
 80015d4:	e1c0      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 80015d6:	4b3d      	ldr	r3, [pc, #244]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	695b      	ldr	r3, [r3, #20]
 80015e2:	00db      	lsls	r3, r3, #3
 80015e4:	4939      	ldr	r1, [pc, #228]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 80015e6:	4313      	orrs	r3, r2
 80015e8:	600b      	str	r3, [r1, #0]
 80015ea:	e03a      	b.n	8001662 <HAL_RCC_OscConfig+0x202>
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	691b      	ldr	r3, [r3, #16]
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d020      	beq.n	8001636 <HAL_RCC_OscConfig+0x1d6>
 80015f4:	4b36      	ldr	r3, [pc, #216]	; (80016d0 <HAL_RCC_OscConfig+0x270>)
 80015f6:	2201      	movs	r2, #1
 80015f8:	601a      	str	r2, [r3, #0]
 80015fa:	f7ff fb8f 	bl	8000d1c <HAL_GetTick>
 80015fe:	6138      	str	r0, [r7, #16]
 8001600:	e008      	b.n	8001614 <HAL_RCC_OscConfig+0x1b4>
 8001602:	f7ff fb8b 	bl	8000d1c <HAL_GetTick>
 8001606:	4602      	mov	r2, r0
 8001608:	693b      	ldr	r3, [r7, #16]
 800160a:	1ad3      	subs	r3, r2, r3
 800160c:	2b02      	cmp	r3, #2
 800160e:	d901      	bls.n	8001614 <HAL_RCC_OscConfig+0x1b4>
 8001610:	2303      	movs	r3, #3
 8001612:	e1a1      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001614:	4b2d      	ldr	r3, [pc, #180]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001616:	681b      	ldr	r3, [r3, #0]
 8001618:	f003 0302 	and.w	r3, r3, #2
 800161c:	2b00      	cmp	r3, #0
 800161e:	d0f0      	beq.n	8001602 <HAL_RCC_OscConfig+0x1a2>
 8001620:	4b2a      	ldr	r3, [pc, #168]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	695b      	ldr	r3, [r3, #20]
 800162c:	00db      	lsls	r3, r3, #3
 800162e:	4927      	ldr	r1, [pc, #156]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001630:	4313      	orrs	r3, r2
 8001632:	600b      	str	r3, [r1, #0]
 8001634:	e015      	b.n	8001662 <HAL_RCC_OscConfig+0x202>
 8001636:	4b26      	ldr	r3, [pc, #152]	; (80016d0 <HAL_RCC_OscConfig+0x270>)
 8001638:	2200      	movs	r2, #0
 800163a:	601a      	str	r2, [r3, #0]
 800163c:	f7ff fb6e 	bl	8000d1c <HAL_GetTick>
 8001640:	6138      	str	r0, [r7, #16]
 8001642:	e008      	b.n	8001656 <HAL_RCC_OscConfig+0x1f6>
 8001644:	f7ff fb6a 	bl	8000d1c <HAL_GetTick>
 8001648:	4602      	mov	r2, r0
 800164a:	693b      	ldr	r3, [r7, #16]
 800164c:	1ad3      	subs	r3, r2, r3
 800164e:	2b02      	cmp	r3, #2
 8001650:	d901      	bls.n	8001656 <HAL_RCC_OscConfig+0x1f6>
 8001652:	2303      	movs	r3, #3
 8001654:	e180      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001656:	4b1d      	ldr	r3, [pc, #116]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	f003 0302 	and.w	r3, r3, #2
 800165e:	2b00      	cmp	r3, #0
 8001660:	d1f0      	bne.n	8001644 <HAL_RCC_OscConfig+0x1e4>
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	f003 0308 	and.w	r3, r3, #8
 800166a:	2b00      	cmp	r3, #0
 800166c:	d03a      	beq.n	80016e4 <HAL_RCC_OscConfig+0x284>
 800166e:	687b      	ldr	r3, [r7, #4]
 8001670:	699b      	ldr	r3, [r3, #24]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d019      	beq.n	80016aa <HAL_RCC_OscConfig+0x24a>
 8001676:	4b17      	ldr	r3, [pc, #92]	; (80016d4 <HAL_RCC_OscConfig+0x274>)
 8001678:	2201      	movs	r2, #1
 800167a:	601a      	str	r2, [r3, #0]
 800167c:	f7ff fb4e 	bl	8000d1c <HAL_GetTick>
 8001680:	6138      	str	r0, [r7, #16]
 8001682:	e008      	b.n	8001696 <HAL_RCC_OscConfig+0x236>
 8001684:	f7ff fb4a 	bl	8000d1c <HAL_GetTick>
 8001688:	4602      	mov	r2, r0
 800168a:	693b      	ldr	r3, [r7, #16]
 800168c:	1ad3      	subs	r3, r2, r3
 800168e:	2b02      	cmp	r3, #2
 8001690:	d901      	bls.n	8001696 <HAL_RCC_OscConfig+0x236>
 8001692:	2303      	movs	r3, #3
 8001694:	e160      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001696:	4b0d      	ldr	r3, [pc, #52]	; (80016cc <HAL_RCC_OscConfig+0x26c>)
 8001698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800169a:	f003 0302 	and.w	r3, r3, #2
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d0f0      	beq.n	8001684 <HAL_RCC_OscConfig+0x224>
 80016a2:	2001      	movs	r0, #1
 80016a4:	f000 fad8 	bl	8001c58 <RCC_Delay>
 80016a8:	e01c      	b.n	80016e4 <HAL_RCC_OscConfig+0x284>
 80016aa:	4b0a      	ldr	r3, [pc, #40]	; (80016d4 <HAL_RCC_OscConfig+0x274>)
 80016ac:	2200      	movs	r2, #0
 80016ae:	601a      	str	r2, [r3, #0]
 80016b0:	f7ff fb34 	bl	8000d1c <HAL_GetTick>
 80016b4:	6138      	str	r0, [r7, #16]
 80016b6:	e00f      	b.n	80016d8 <HAL_RCC_OscConfig+0x278>
 80016b8:	f7ff fb30 	bl	8000d1c <HAL_GetTick>
 80016bc:	4602      	mov	r2, r0
 80016be:	693b      	ldr	r3, [r7, #16]
 80016c0:	1ad3      	subs	r3, r2, r3
 80016c2:	2b02      	cmp	r3, #2
 80016c4:	d908      	bls.n	80016d8 <HAL_RCC_OscConfig+0x278>
 80016c6:	2303      	movs	r3, #3
 80016c8:	e146      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 80016ca:	bf00      	nop
 80016cc:	40021000 	.word	0x40021000
 80016d0:	42420000 	.word	0x42420000
 80016d4:	42420480 	.word	0x42420480
 80016d8:	4b92      	ldr	r3, [pc, #584]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80016da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80016dc:	f003 0302 	and.w	r3, r3, #2
 80016e0:	2b00      	cmp	r3, #0
 80016e2:	d1e9      	bne.n	80016b8 <HAL_RCC_OscConfig+0x258>
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	681b      	ldr	r3, [r3, #0]
 80016e8:	f003 0304 	and.w	r3, r3, #4
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	f000 80a6 	beq.w	800183e <HAL_RCC_OscConfig+0x3de>
 80016f2:	2300      	movs	r3, #0
 80016f4:	75fb      	strb	r3, [r7, #23]
 80016f6:	4b8b      	ldr	r3, [pc, #556]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80016f8:	69db      	ldr	r3, [r3, #28]
 80016fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80016fe:	2b00      	cmp	r3, #0
 8001700:	d10d      	bne.n	800171e <HAL_RCC_OscConfig+0x2be>
 8001702:	4b88      	ldr	r3, [pc, #544]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001704:	69db      	ldr	r3, [r3, #28]
 8001706:	4a87      	ldr	r2, [pc, #540]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001708:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800170c:	61d3      	str	r3, [r2, #28]
 800170e:	4b85      	ldr	r3, [pc, #532]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001710:	69db      	ldr	r3, [r3, #28]
 8001712:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001716:	60bb      	str	r3, [r7, #8]
 8001718:	68bb      	ldr	r3, [r7, #8]
 800171a:	2301      	movs	r3, #1
 800171c:	75fb      	strb	r3, [r7, #23]
 800171e:	4b82      	ldr	r3, [pc, #520]	; (8001928 <HAL_RCC_OscConfig+0x4c8>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001726:	2b00      	cmp	r3, #0
 8001728:	d118      	bne.n	800175c <HAL_RCC_OscConfig+0x2fc>
 800172a:	4b7f      	ldr	r3, [pc, #508]	; (8001928 <HAL_RCC_OscConfig+0x4c8>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	4a7e      	ldr	r2, [pc, #504]	; (8001928 <HAL_RCC_OscConfig+0x4c8>)
 8001730:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001734:	6013      	str	r3, [r2, #0]
 8001736:	f7ff faf1 	bl	8000d1c <HAL_GetTick>
 800173a:	6138      	str	r0, [r7, #16]
 800173c:	e008      	b.n	8001750 <HAL_RCC_OscConfig+0x2f0>
 800173e:	f7ff faed 	bl	8000d1c <HAL_GetTick>
 8001742:	4602      	mov	r2, r0
 8001744:	693b      	ldr	r3, [r7, #16]
 8001746:	1ad3      	subs	r3, r2, r3
 8001748:	2b64      	cmp	r3, #100	; 0x64
 800174a:	d901      	bls.n	8001750 <HAL_RCC_OscConfig+0x2f0>
 800174c:	2303      	movs	r3, #3
 800174e:	e103      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001750:	4b75      	ldr	r3, [pc, #468]	; (8001928 <HAL_RCC_OscConfig+0x4c8>)
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001758:	2b00      	cmp	r3, #0
 800175a:	d0f0      	beq.n	800173e <HAL_RCC_OscConfig+0x2de>
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	68db      	ldr	r3, [r3, #12]
 8001760:	2b01      	cmp	r3, #1
 8001762:	d106      	bne.n	8001772 <HAL_RCC_OscConfig+0x312>
 8001764:	4b6f      	ldr	r3, [pc, #444]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001766:	6a1b      	ldr	r3, [r3, #32]
 8001768:	4a6e      	ldr	r2, [pc, #440]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800176a:	f043 0301 	orr.w	r3, r3, #1
 800176e:	6213      	str	r3, [r2, #32]
 8001770:	e02d      	b.n	80017ce <HAL_RCC_OscConfig+0x36e>
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	68db      	ldr	r3, [r3, #12]
 8001776:	2b00      	cmp	r3, #0
 8001778:	d10c      	bne.n	8001794 <HAL_RCC_OscConfig+0x334>
 800177a:	4b6a      	ldr	r3, [pc, #424]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800177c:	6a1b      	ldr	r3, [r3, #32]
 800177e:	4a69      	ldr	r2, [pc, #420]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001780:	f023 0301 	bic.w	r3, r3, #1
 8001784:	6213      	str	r3, [r2, #32]
 8001786:	4b67      	ldr	r3, [pc, #412]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001788:	6a1b      	ldr	r3, [r3, #32]
 800178a:	4a66      	ldr	r2, [pc, #408]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800178c:	f023 0304 	bic.w	r3, r3, #4
 8001790:	6213      	str	r3, [r2, #32]
 8001792:	e01c      	b.n	80017ce <HAL_RCC_OscConfig+0x36e>
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	68db      	ldr	r3, [r3, #12]
 8001798:	2b05      	cmp	r3, #5
 800179a:	d10c      	bne.n	80017b6 <HAL_RCC_OscConfig+0x356>
 800179c:	4b61      	ldr	r3, [pc, #388]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800179e:	6a1b      	ldr	r3, [r3, #32]
 80017a0:	4a60      	ldr	r2, [pc, #384]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017a2:	f043 0304 	orr.w	r3, r3, #4
 80017a6:	6213      	str	r3, [r2, #32]
 80017a8:	4b5e      	ldr	r3, [pc, #376]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017aa:	6a1b      	ldr	r3, [r3, #32]
 80017ac:	4a5d      	ldr	r2, [pc, #372]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017ae:	f043 0301 	orr.w	r3, r3, #1
 80017b2:	6213      	str	r3, [r2, #32]
 80017b4:	e00b      	b.n	80017ce <HAL_RCC_OscConfig+0x36e>
 80017b6:	4b5b      	ldr	r3, [pc, #364]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017b8:	6a1b      	ldr	r3, [r3, #32]
 80017ba:	4a5a      	ldr	r2, [pc, #360]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017bc:	f023 0301 	bic.w	r3, r3, #1
 80017c0:	6213      	str	r3, [r2, #32]
 80017c2:	4b58      	ldr	r3, [pc, #352]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017c4:	6a1b      	ldr	r3, [r3, #32]
 80017c6:	4a57      	ldr	r2, [pc, #348]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017c8:	f023 0304 	bic.w	r3, r3, #4
 80017cc:	6213      	str	r3, [r2, #32]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	68db      	ldr	r3, [r3, #12]
 80017d2:	2b00      	cmp	r3, #0
 80017d4:	d015      	beq.n	8001802 <HAL_RCC_OscConfig+0x3a2>
 80017d6:	f7ff faa1 	bl	8000d1c <HAL_GetTick>
 80017da:	6138      	str	r0, [r7, #16]
 80017dc:	e00a      	b.n	80017f4 <HAL_RCC_OscConfig+0x394>
 80017de:	f7ff fa9d 	bl	8000d1c <HAL_GetTick>
 80017e2:	4602      	mov	r2, r0
 80017e4:	693b      	ldr	r3, [r7, #16]
 80017e6:	1ad3      	subs	r3, r2, r3
 80017e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80017ec:	4293      	cmp	r3, r2
 80017ee:	d901      	bls.n	80017f4 <HAL_RCC_OscConfig+0x394>
 80017f0:	2303      	movs	r3, #3
 80017f2:	e0b1      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 80017f4:	4b4b      	ldr	r3, [pc, #300]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80017f6:	6a1b      	ldr	r3, [r3, #32]
 80017f8:	f003 0302 	and.w	r3, r3, #2
 80017fc:	2b00      	cmp	r3, #0
 80017fe:	d0ee      	beq.n	80017de <HAL_RCC_OscConfig+0x37e>
 8001800:	e014      	b.n	800182c <HAL_RCC_OscConfig+0x3cc>
 8001802:	f7ff fa8b 	bl	8000d1c <HAL_GetTick>
 8001806:	6138      	str	r0, [r7, #16]
 8001808:	e00a      	b.n	8001820 <HAL_RCC_OscConfig+0x3c0>
 800180a:	f7ff fa87 	bl	8000d1c <HAL_GetTick>
 800180e:	4602      	mov	r2, r0
 8001810:	693b      	ldr	r3, [r7, #16]
 8001812:	1ad3      	subs	r3, r2, r3
 8001814:	f241 3288 	movw	r2, #5000	; 0x1388
 8001818:	4293      	cmp	r3, r2
 800181a:	d901      	bls.n	8001820 <HAL_RCC_OscConfig+0x3c0>
 800181c:	2303      	movs	r3, #3
 800181e:	e09b      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001820:	4b40      	ldr	r3, [pc, #256]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001822:	6a1b      	ldr	r3, [r3, #32]
 8001824:	f003 0302 	and.w	r3, r3, #2
 8001828:	2b00      	cmp	r3, #0
 800182a:	d1ee      	bne.n	800180a <HAL_RCC_OscConfig+0x3aa>
 800182c:	7dfb      	ldrb	r3, [r7, #23]
 800182e:	2b01      	cmp	r3, #1
 8001830:	d105      	bne.n	800183e <HAL_RCC_OscConfig+0x3de>
 8001832:	4b3c      	ldr	r3, [pc, #240]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001834:	69db      	ldr	r3, [r3, #28]
 8001836:	4a3b      	ldr	r2, [pc, #236]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001838:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800183c:	61d3      	str	r3, [r2, #28]
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	69db      	ldr	r3, [r3, #28]
 8001842:	2b00      	cmp	r3, #0
 8001844:	f000 8087 	beq.w	8001956 <HAL_RCC_OscConfig+0x4f6>
 8001848:	4b36      	ldr	r3, [pc, #216]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800184a:	685b      	ldr	r3, [r3, #4]
 800184c:	f003 030c 	and.w	r3, r3, #12
 8001850:	2b08      	cmp	r3, #8
 8001852:	d061      	beq.n	8001918 <HAL_RCC_OscConfig+0x4b8>
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	69db      	ldr	r3, [r3, #28]
 8001858:	2b02      	cmp	r3, #2
 800185a:	d146      	bne.n	80018ea <HAL_RCC_OscConfig+0x48a>
 800185c:	4b33      	ldr	r3, [pc, #204]	; (800192c <HAL_RCC_OscConfig+0x4cc>)
 800185e:	2200      	movs	r2, #0
 8001860:	601a      	str	r2, [r3, #0]
 8001862:	f7ff fa5b 	bl	8000d1c <HAL_GetTick>
 8001866:	6138      	str	r0, [r7, #16]
 8001868:	e008      	b.n	800187c <HAL_RCC_OscConfig+0x41c>
 800186a:	f7ff fa57 	bl	8000d1c <HAL_GetTick>
 800186e:	4602      	mov	r2, r0
 8001870:	693b      	ldr	r3, [r7, #16]
 8001872:	1ad3      	subs	r3, r2, r3
 8001874:	2b02      	cmp	r3, #2
 8001876:	d901      	bls.n	800187c <HAL_RCC_OscConfig+0x41c>
 8001878:	2303      	movs	r3, #3
 800187a:	e06d      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 800187c:	4b29      	ldr	r3, [pc, #164]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001884:	2b00      	cmp	r3, #0
 8001886:	d1f0      	bne.n	800186a <HAL_RCC_OscConfig+0x40a>
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	6a1b      	ldr	r3, [r3, #32]
 800188c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001890:	d108      	bne.n	80018a4 <HAL_RCC_OscConfig+0x444>
 8001892:	4b24      	ldr	r3, [pc, #144]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 8001894:	685b      	ldr	r3, [r3, #4]
 8001896:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	689b      	ldr	r3, [r3, #8]
 800189e:	4921      	ldr	r1, [pc, #132]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80018a0:	4313      	orrs	r3, r2
 80018a2:	604b      	str	r3, [r1, #4]
 80018a4:	4b1f      	ldr	r3, [pc, #124]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80018a6:	685b      	ldr	r3, [r3, #4]
 80018a8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	6a19      	ldr	r1, [r3, #32]
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018b4:	430b      	orrs	r3, r1
 80018b6:	491b      	ldr	r1, [pc, #108]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80018b8:	4313      	orrs	r3, r2
 80018ba:	604b      	str	r3, [r1, #4]
 80018bc:	4b1b      	ldr	r3, [pc, #108]	; (800192c <HAL_RCC_OscConfig+0x4cc>)
 80018be:	2201      	movs	r2, #1
 80018c0:	601a      	str	r2, [r3, #0]
 80018c2:	f7ff fa2b 	bl	8000d1c <HAL_GetTick>
 80018c6:	6138      	str	r0, [r7, #16]
 80018c8:	e008      	b.n	80018dc <HAL_RCC_OscConfig+0x47c>
 80018ca:	f7ff fa27 	bl	8000d1c <HAL_GetTick>
 80018ce:	4602      	mov	r2, r0
 80018d0:	693b      	ldr	r3, [r7, #16]
 80018d2:	1ad3      	subs	r3, r2, r3
 80018d4:	2b02      	cmp	r3, #2
 80018d6:	d901      	bls.n	80018dc <HAL_RCC_OscConfig+0x47c>
 80018d8:	2303      	movs	r3, #3
 80018da:	e03d      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 80018dc:	4b11      	ldr	r3, [pc, #68]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d0f0      	beq.n	80018ca <HAL_RCC_OscConfig+0x46a>
 80018e8:	e035      	b.n	8001956 <HAL_RCC_OscConfig+0x4f6>
 80018ea:	4b10      	ldr	r3, [pc, #64]	; (800192c <HAL_RCC_OscConfig+0x4cc>)
 80018ec:	2200      	movs	r2, #0
 80018ee:	601a      	str	r2, [r3, #0]
 80018f0:	f7ff fa14 	bl	8000d1c <HAL_GetTick>
 80018f4:	6138      	str	r0, [r7, #16]
 80018f6:	e008      	b.n	800190a <HAL_RCC_OscConfig+0x4aa>
 80018f8:	f7ff fa10 	bl	8000d1c <HAL_GetTick>
 80018fc:	4602      	mov	r2, r0
 80018fe:	693b      	ldr	r3, [r7, #16]
 8001900:	1ad3      	subs	r3, r2, r3
 8001902:	2b02      	cmp	r3, #2
 8001904:	d901      	bls.n	800190a <HAL_RCC_OscConfig+0x4aa>
 8001906:	2303      	movs	r3, #3
 8001908:	e026      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 800190a:	4b06      	ldr	r3, [pc, #24]	; (8001924 <HAL_RCC_OscConfig+0x4c4>)
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001912:	2b00      	cmp	r3, #0
 8001914:	d1f0      	bne.n	80018f8 <HAL_RCC_OscConfig+0x498>
 8001916:	e01e      	b.n	8001956 <HAL_RCC_OscConfig+0x4f6>
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	69db      	ldr	r3, [r3, #28]
 800191c:	2b01      	cmp	r3, #1
 800191e:	d107      	bne.n	8001930 <HAL_RCC_OscConfig+0x4d0>
 8001920:	2301      	movs	r3, #1
 8001922:	e019      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001924:	40021000 	.word	0x40021000
 8001928:	40007000 	.word	0x40007000
 800192c:	42420060 	.word	0x42420060
 8001930:	4b0b      	ldr	r3, [pc, #44]	; (8001960 <HAL_RCC_OscConfig+0x500>)
 8001932:	685b      	ldr	r3, [r3, #4]
 8001934:	60fb      	str	r3, [r7, #12]
 8001936:	68fb      	ldr	r3, [r7, #12]
 8001938:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	6a1b      	ldr	r3, [r3, #32]
 8001940:	429a      	cmp	r2, r3
 8001942:	d106      	bne.n	8001952 <HAL_RCC_OscConfig+0x4f2>
 8001944:	68fb      	ldr	r3, [r7, #12]
 8001946:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800194e:	429a      	cmp	r2, r3
 8001950:	d001      	beq.n	8001956 <HAL_RCC_OscConfig+0x4f6>
 8001952:	2301      	movs	r3, #1
 8001954:	e000      	b.n	8001958 <HAL_RCC_OscConfig+0x4f8>
 8001956:	2300      	movs	r3, #0
 8001958:	4618      	mov	r0, r3
 800195a:	3718      	adds	r7, #24
 800195c:	46bd      	mov	sp, r7
 800195e:	bd80      	pop	{r7, pc}
 8001960:	40021000 	.word	0x40021000

08001964 <HAL_RCC_ClockConfig>:
 8001964:	b580      	push	{r7, lr}
 8001966:	b084      	sub	sp, #16
 8001968:	af00      	add	r7, sp, #0
 800196a:	6078      	str	r0, [r7, #4]
 800196c:	6039      	str	r1, [r7, #0]
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	2b00      	cmp	r3, #0
 8001972:	d101      	bne.n	8001978 <HAL_RCC_ClockConfig+0x14>
 8001974:	2301      	movs	r3, #1
 8001976:	e0d0      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 8001978:	4b6a      	ldr	r3, [pc, #424]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	f003 0307 	and.w	r3, r3, #7
 8001980:	683a      	ldr	r2, [r7, #0]
 8001982:	429a      	cmp	r2, r3
 8001984:	d910      	bls.n	80019a8 <HAL_RCC_ClockConfig+0x44>
 8001986:	4b67      	ldr	r3, [pc, #412]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f023 0207 	bic.w	r2, r3, #7
 800198e:	4965      	ldr	r1, [pc, #404]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001990:	683b      	ldr	r3, [r7, #0]
 8001992:	4313      	orrs	r3, r2
 8001994:	600b      	str	r3, [r1, #0]
 8001996:	4b63      	ldr	r3, [pc, #396]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	f003 0307 	and.w	r3, r3, #7
 800199e:	683a      	ldr	r2, [r7, #0]
 80019a0:	429a      	cmp	r2, r3
 80019a2:	d001      	beq.n	80019a8 <HAL_RCC_ClockConfig+0x44>
 80019a4:	2301      	movs	r3, #1
 80019a6:	e0b8      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 80019a8:	687b      	ldr	r3, [r7, #4]
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	f003 0302 	and.w	r3, r3, #2
 80019b0:	2b00      	cmp	r3, #0
 80019b2:	d020      	beq.n	80019f6 <HAL_RCC_ClockConfig+0x92>
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	f003 0304 	and.w	r3, r3, #4
 80019bc:	2b00      	cmp	r3, #0
 80019be:	d005      	beq.n	80019cc <HAL_RCC_ClockConfig+0x68>
 80019c0:	4b59      	ldr	r3, [pc, #356]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 80019c2:	685b      	ldr	r3, [r3, #4]
 80019c4:	4a58      	ldr	r2, [pc, #352]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 80019c6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80019ca:	6053      	str	r3, [r2, #4]
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	681b      	ldr	r3, [r3, #0]
 80019d0:	f003 0308 	and.w	r3, r3, #8
 80019d4:	2b00      	cmp	r3, #0
 80019d6:	d005      	beq.n	80019e4 <HAL_RCC_ClockConfig+0x80>
 80019d8:	4b53      	ldr	r3, [pc, #332]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 80019da:	685b      	ldr	r3, [r3, #4]
 80019dc:	4a52      	ldr	r2, [pc, #328]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 80019de:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80019e2:	6053      	str	r3, [r2, #4]
 80019e4:	4b50      	ldr	r3, [pc, #320]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 80019e6:	685b      	ldr	r3, [r3, #4]
 80019e8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	689b      	ldr	r3, [r3, #8]
 80019f0:	494d      	ldr	r1, [pc, #308]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 80019f2:	4313      	orrs	r3, r2
 80019f4:	604b      	str	r3, [r1, #4]
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	f003 0301 	and.w	r3, r3, #1
 80019fe:	2b00      	cmp	r3, #0
 8001a00:	d040      	beq.n	8001a84 <HAL_RCC_ClockConfig+0x120>
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	685b      	ldr	r3, [r3, #4]
 8001a06:	2b01      	cmp	r3, #1
 8001a08:	d107      	bne.n	8001a1a <HAL_RCC_ClockConfig+0xb6>
 8001a0a:	4b47      	ldr	r3, [pc, #284]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	d115      	bne.n	8001a42 <HAL_RCC_ClockConfig+0xde>
 8001a16:	2301      	movs	r3, #1
 8001a18:	e07f      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	685b      	ldr	r3, [r3, #4]
 8001a1e:	2b02      	cmp	r3, #2
 8001a20:	d107      	bne.n	8001a32 <HAL_RCC_ClockConfig+0xce>
 8001a22:	4b41      	ldr	r3, [pc, #260]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a2a:	2b00      	cmp	r3, #0
 8001a2c:	d109      	bne.n	8001a42 <HAL_RCC_ClockConfig+0xde>
 8001a2e:	2301      	movs	r3, #1
 8001a30:	e073      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 8001a32:	4b3d      	ldr	r3, [pc, #244]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001a34:	681b      	ldr	r3, [r3, #0]
 8001a36:	f003 0302 	and.w	r3, r3, #2
 8001a3a:	2b00      	cmp	r3, #0
 8001a3c:	d101      	bne.n	8001a42 <HAL_RCC_ClockConfig+0xde>
 8001a3e:	2301      	movs	r3, #1
 8001a40:	e06b      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 8001a42:	4b39      	ldr	r3, [pc, #228]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001a44:	685b      	ldr	r3, [r3, #4]
 8001a46:	f023 0203 	bic.w	r2, r3, #3
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	685b      	ldr	r3, [r3, #4]
 8001a4e:	4936      	ldr	r1, [pc, #216]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001a50:	4313      	orrs	r3, r2
 8001a52:	604b      	str	r3, [r1, #4]
 8001a54:	f7ff f962 	bl	8000d1c <HAL_GetTick>
 8001a58:	60f8      	str	r0, [r7, #12]
 8001a5a:	e00a      	b.n	8001a72 <HAL_RCC_ClockConfig+0x10e>
 8001a5c:	f7ff f95e 	bl	8000d1c <HAL_GetTick>
 8001a60:	4602      	mov	r2, r0
 8001a62:	68fb      	ldr	r3, [r7, #12]
 8001a64:	1ad3      	subs	r3, r2, r3
 8001a66:	f241 3288 	movw	r2, #5000	; 0x1388
 8001a6a:	4293      	cmp	r3, r2
 8001a6c:	d901      	bls.n	8001a72 <HAL_RCC_ClockConfig+0x10e>
 8001a6e:	2303      	movs	r3, #3
 8001a70:	e053      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 8001a72:	4b2d      	ldr	r3, [pc, #180]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001a74:	685b      	ldr	r3, [r3, #4]
 8001a76:	f003 020c 	and.w	r2, r3, #12
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	685b      	ldr	r3, [r3, #4]
 8001a7e:	009b      	lsls	r3, r3, #2
 8001a80:	429a      	cmp	r2, r3
 8001a82:	d1eb      	bne.n	8001a5c <HAL_RCC_ClockConfig+0xf8>
 8001a84:	4b27      	ldr	r3, [pc, #156]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	f003 0307 	and.w	r3, r3, #7
 8001a8c:	683a      	ldr	r2, [r7, #0]
 8001a8e:	429a      	cmp	r2, r3
 8001a90:	d210      	bcs.n	8001ab4 <HAL_RCC_ClockConfig+0x150>
 8001a92:	4b24      	ldr	r3, [pc, #144]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	f023 0207 	bic.w	r2, r3, #7
 8001a9a:	4922      	ldr	r1, [pc, #136]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001a9c:	683b      	ldr	r3, [r7, #0]
 8001a9e:	4313      	orrs	r3, r2
 8001aa0:	600b      	str	r3, [r1, #0]
 8001aa2:	4b20      	ldr	r3, [pc, #128]	; (8001b24 <HAL_RCC_ClockConfig+0x1c0>)
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	f003 0307 	and.w	r3, r3, #7
 8001aaa:	683a      	ldr	r2, [r7, #0]
 8001aac:	429a      	cmp	r2, r3
 8001aae:	d001      	beq.n	8001ab4 <HAL_RCC_ClockConfig+0x150>
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	e032      	b.n	8001b1a <HAL_RCC_ClockConfig+0x1b6>
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	f003 0304 	and.w	r3, r3, #4
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d008      	beq.n	8001ad2 <HAL_RCC_ClockConfig+0x16e>
 8001ac0:	4b19      	ldr	r3, [pc, #100]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001ac2:	685b      	ldr	r3, [r3, #4]
 8001ac4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	68db      	ldr	r3, [r3, #12]
 8001acc:	4916      	ldr	r1, [pc, #88]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001ace:	4313      	orrs	r3, r2
 8001ad0:	604b      	str	r3, [r1, #4]
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	f003 0308 	and.w	r3, r3, #8
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d009      	beq.n	8001af2 <HAL_RCC_ClockConfig+0x18e>
 8001ade:	4b12      	ldr	r3, [pc, #72]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001ae0:	685b      	ldr	r3, [r3, #4]
 8001ae2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	691b      	ldr	r3, [r3, #16]
 8001aea:	00db      	lsls	r3, r3, #3
 8001aec:	490e      	ldr	r1, [pc, #56]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001aee:	4313      	orrs	r3, r2
 8001af0:	604b      	str	r3, [r1, #4]
 8001af2:	f000 f821 	bl	8001b38 <HAL_RCC_GetSysClockFreq>
 8001af6:	4602      	mov	r2, r0
 8001af8:	4b0b      	ldr	r3, [pc, #44]	; (8001b28 <HAL_RCC_ClockConfig+0x1c4>)
 8001afa:	685b      	ldr	r3, [r3, #4]
 8001afc:	091b      	lsrs	r3, r3, #4
 8001afe:	f003 030f 	and.w	r3, r3, #15
 8001b02:	490a      	ldr	r1, [pc, #40]	; (8001b2c <HAL_RCC_ClockConfig+0x1c8>)
 8001b04:	5ccb      	ldrb	r3, [r1, r3]
 8001b06:	fa22 f303 	lsr.w	r3, r2, r3
 8001b0a:	4a09      	ldr	r2, [pc, #36]	; (8001b30 <HAL_RCC_ClockConfig+0x1cc>)
 8001b0c:	6013      	str	r3, [r2, #0]
 8001b0e:	4b09      	ldr	r3, [pc, #36]	; (8001b34 <HAL_RCC_ClockConfig+0x1d0>)
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	4618      	mov	r0, r3
 8001b14:	f7ff f8c0 	bl	8000c98 <HAL_InitTick>
 8001b18:	2300      	movs	r3, #0
 8001b1a:	4618      	mov	r0, r3
 8001b1c:	3710      	adds	r7, #16
 8001b1e:	46bd      	mov	sp, r7
 8001b20:	bd80      	pop	{r7, pc}
 8001b22:	bf00      	nop
 8001b24:	40022000 	.word	0x40022000
 8001b28:	40021000 	.word	0x40021000
 8001b2c:	08004bf8 	.word	0x08004bf8
 8001b30:	20000000 	.word	0x20000000
 8001b34:	20000004 	.word	0x20000004

08001b38 <HAL_RCC_GetSysClockFreq>:
 8001b38:	b490      	push	{r4, r7}
 8001b3a:	b08a      	sub	sp, #40	; 0x28
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	4b29      	ldr	r3, [pc, #164]	; (8001be4 <HAL_RCC_GetSysClockFreq+0xac>)
 8001b40:	1d3c      	adds	r4, r7, #4
 8001b42:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001b44:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001b48:	f240 2301 	movw	r3, #513	; 0x201
 8001b4c:	803b      	strh	r3, [r7, #0]
 8001b4e:	2300      	movs	r3, #0
 8001b50:	61fb      	str	r3, [r7, #28]
 8001b52:	2300      	movs	r3, #0
 8001b54:	61bb      	str	r3, [r7, #24]
 8001b56:	2300      	movs	r3, #0
 8001b58:	627b      	str	r3, [r7, #36]	; 0x24
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	617b      	str	r3, [r7, #20]
 8001b5e:	2300      	movs	r3, #0
 8001b60:	623b      	str	r3, [r7, #32]
 8001b62:	4b21      	ldr	r3, [pc, #132]	; (8001be8 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001b64:	685b      	ldr	r3, [r3, #4]
 8001b66:	61fb      	str	r3, [r7, #28]
 8001b68:	69fb      	ldr	r3, [r7, #28]
 8001b6a:	f003 030c 	and.w	r3, r3, #12
 8001b6e:	2b04      	cmp	r3, #4
 8001b70:	d002      	beq.n	8001b78 <HAL_RCC_GetSysClockFreq+0x40>
 8001b72:	2b08      	cmp	r3, #8
 8001b74:	d003      	beq.n	8001b7e <HAL_RCC_GetSysClockFreq+0x46>
 8001b76:	e02b      	b.n	8001bd0 <HAL_RCC_GetSysClockFreq+0x98>
 8001b78:	4b1c      	ldr	r3, [pc, #112]	; (8001bec <HAL_RCC_GetSysClockFreq+0xb4>)
 8001b7a:	623b      	str	r3, [r7, #32]
 8001b7c:	e02b      	b.n	8001bd6 <HAL_RCC_GetSysClockFreq+0x9e>
 8001b7e:	69fb      	ldr	r3, [r7, #28]
 8001b80:	0c9b      	lsrs	r3, r3, #18
 8001b82:	f003 030f 	and.w	r3, r3, #15
 8001b86:	3328      	adds	r3, #40	; 0x28
 8001b88:	443b      	add	r3, r7
 8001b8a:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001b8e:	617b      	str	r3, [r7, #20]
 8001b90:	69fb      	ldr	r3, [r7, #28]
 8001b92:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d012      	beq.n	8001bc0 <HAL_RCC_GetSysClockFreq+0x88>
 8001b9a:	4b13      	ldr	r3, [pc, #76]	; (8001be8 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001b9c:	685b      	ldr	r3, [r3, #4]
 8001b9e:	0c5b      	lsrs	r3, r3, #17
 8001ba0:	f003 0301 	and.w	r3, r3, #1
 8001ba4:	3328      	adds	r3, #40	; 0x28
 8001ba6:	443b      	add	r3, r7
 8001ba8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001bac:	61bb      	str	r3, [r7, #24]
 8001bae:	697b      	ldr	r3, [r7, #20]
 8001bb0:	4a0e      	ldr	r2, [pc, #56]	; (8001bec <HAL_RCC_GetSysClockFreq+0xb4>)
 8001bb2:	fb03 f202 	mul.w	r2, r3, r2
 8001bb6:	69bb      	ldr	r3, [r7, #24]
 8001bb8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bbc:	627b      	str	r3, [r7, #36]	; 0x24
 8001bbe:	e004      	b.n	8001bca <HAL_RCC_GetSysClockFreq+0x92>
 8001bc0:	697b      	ldr	r3, [r7, #20]
 8001bc2:	4a0b      	ldr	r2, [pc, #44]	; (8001bf0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001bc4:	fb02 f303 	mul.w	r3, r2, r3
 8001bc8:	627b      	str	r3, [r7, #36]	; 0x24
 8001bca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bcc:	623b      	str	r3, [r7, #32]
 8001bce:	e002      	b.n	8001bd6 <HAL_RCC_GetSysClockFreq+0x9e>
 8001bd0:	4b06      	ldr	r3, [pc, #24]	; (8001bec <HAL_RCC_GetSysClockFreq+0xb4>)
 8001bd2:	623b      	str	r3, [r7, #32]
 8001bd4:	bf00      	nop
 8001bd6:	6a3b      	ldr	r3, [r7, #32]
 8001bd8:	4618      	mov	r0, r3
 8001bda:	3728      	adds	r7, #40	; 0x28
 8001bdc:	46bd      	mov	sp, r7
 8001bde:	bc90      	pop	{r4, r7}
 8001be0:	4770      	bx	lr
 8001be2:	bf00      	nop
 8001be4:	08004bdc 	.word	0x08004bdc
 8001be8:	40021000 	.word	0x40021000
 8001bec:	007a1200 	.word	0x007a1200
 8001bf0:	003d0900 	.word	0x003d0900

08001bf4 <HAL_RCC_GetHCLKFreq>:
 8001bf4:	b480      	push	{r7}
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	4b02      	ldr	r3, [pc, #8]	; (8001c04 <HAL_RCC_GetHCLKFreq+0x10>)
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	4618      	mov	r0, r3
 8001bfe:	46bd      	mov	sp, r7
 8001c00:	bc80      	pop	{r7}
 8001c02:	4770      	bx	lr
 8001c04:	20000000 	.word	0x20000000

08001c08 <HAL_RCC_GetPCLK1Freq>:
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	af00      	add	r7, sp, #0
 8001c0c:	f7ff fff2 	bl	8001bf4 <HAL_RCC_GetHCLKFreq>
 8001c10:	4602      	mov	r2, r0
 8001c12:	4b05      	ldr	r3, [pc, #20]	; (8001c28 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001c14:	685b      	ldr	r3, [r3, #4]
 8001c16:	0a1b      	lsrs	r3, r3, #8
 8001c18:	f003 0307 	and.w	r3, r3, #7
 8001c1c:	4903      	ldr	r1, [pc, #12]	; (8001c2c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001c1e:	5ccb      	ldrb	r3, [r1, r3]
 8001c20:	fa22 f303 	lsr.w	r3, r2, r3
 8001c24:	4618      	mov	r0, r3
 8001c26:	bd80      	pop	{r7, pc}
 8001c28:	40021000 	.word	0x40021000
 8001c2c:	08004c08 	.word	0x08004c08

08001c30 <HAL_RCC_GetPCLK2Freq>:
 8001c30:	b580      	push	{r7, lr}
 8001c32:	af00      	add	r7, sp, #0
 8001c34:	f7ff ffde 	bl	8001bf4 <HAL_RCC_GetHCLKFreq>
 8001c38:	4602      	mov	r2, r0
 8001c3a:	4b05      	ldr	r3, [pc, #20]	; (8001c50 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001c3c:	685b      	ldr	r3, [r3, #4]
 8001c3e:	0adb      	lsrs	r3, r3, #11
 8001c40:	f003 0307 	and.w	r3, r3, #7
 8001c44:	4903      	ldr	r1, [pc, #12]	; (8001c54 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001c46:	5ccb      	ldrb	r3, [r1, r3]
 8001c48:	fa22 f303 	lsr.w	r3, r2, r3
 8001c4c:	4618      	mov	r0, r3
 8001c4e:	bd80      	pop	{r7, pc}
 8001c50:	40021000 	.word	0x40021000
 8001c54:	08004c08 	.word	0x08004c08

08001c58 <RCC_Delay>:
 8001c58:	b480      	push	{r7}
 8001c5a:	b085      	sub	sp, #20
 8001c5c:	af00      	add	r7, sp, #0
 8001c5e:	6078      	str	r0, [r7, #4]
 8001c60:	4b0a      	ldr	r3, [pc, #40]	; (8001c8c <RCC_Delay+0x34>)
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	4a0a      	ldr	r2, [pc, #40]	; (8001c90 <RCC_Delay+0x38>)
 8001c66:	fba2 2303 	umull	r2, r3, r2, r3
 8001c6a:	0a5b      	lsrs	r3, r3, #9
 8001c6c:	687a      	ldr	r2, [r7, #4]
 8001c6e:	fb02 f303 	mul.w	r3, r2, r3
 8001c72:	60fb      	str	r3, [r7, #12]
 8001c74:	bf00      	nop
 8001c76:	68fb      	ldr	r3, [r7, #12]
 8001c78:	1e5a      	subs	r2, r3, #1
 8001c7a:	60fa      	str	r2, [r7, #12]
 8001c7c:	2b00      	cmp	r3, #0
 8001c7e:	d1f9      	bne.n	8001c74 <RCC_Delay+0x1c>
 8001c80:	bf00      	nop
 8001c82:	bf00      	nop
 8001c84:	3714      	adds	r7, #20
 8001c86:	46bd      	mov	sp, r7
 8001c88:	bc80      	pop	{r7}
 8001c8a:	4770      	bx	lr
 8001c8c:	20000000 	.word	0x20000000
 8001c90:	10624dd3 	.word	0x10624dd3

08001c94 <HAL_UART_Init>:
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b082      	sub	sp, #8
 8001c98:	af00      	add	r7, sp, #0
 8001c9a:	6078      	str	r0, [r7, #4]
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	d101      	bne.n	8001ca6 <HAL_UART_Init+0x12>
 8001ca2:	2301      	movs	r3, #1
 8001ca4:	e03f      	b.n	8001d26 <HAL_UART_Init+0x92>
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001cac:	b2db      	uxtb	r3, r3
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	d106      	bne.n	8001cc0 <HAL_UART_Init+0x2c>
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001cba:	6878      	ldr	r0, [r7, #4]
 8001cbc:	f7fe fe3a 	bl	8000934 <HAL_UART_MspInit>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	2224      	movs	r2, #36	; 0x24
 8001cc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	68da      	ldr	r2, [r3, #12]
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8001cd6:	60da      	str	r2, [r3, #12]
 8001cd8:	6878      	ldr	r0, [r7, #4]
 8001cda:	f000 fcc7 	bl	800266c <UART_SetConfig>
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	691a      	ldr	r2, [r3, #16]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8001cec:	611a      	str	r2, [r3, #16]
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	695a      	ldr	r2, [r3, #20]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8001cfc:	615a      	str	r2, [r3, #20]
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	681b      	ldr	r3, [r3, #0]
 8001d02:	68da      	ldr	r2, [r3, #12]
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8001d0c:	60da      	str	r2, [r3, #12]
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	2200      	movs	r2, #0
 8001d12:	641a      	str	r2, [r3, #64]	; 0x40
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	2220      	movs	r2, #32
 8001d18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	2220      	movs	r2, #32
 8001d20:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001d24:	2300      	movs	r3, #0
 8001d26:	4618      	mov	r0, r3
 8001d28:	3708      	adds	r7, #8
 8001d2a:	46bd      	mov	sp, r7
 8001d2c:	bd80      	pop	{r7, pc}

08001d2e <HAL_UART_Transmit>:
 8001d2e:	b580      	push	{r7, lr}
 8001d30:	b08a      	sub	sp, #40	; 0x28
 8001d32:	af02      	add	r7, sp, #8
 8001d34:	60f8      	str	r0, [r7, #12]
 8001d36:	60b9      	str	r1, [r7, #8]
 8001d38:	603b      	str	r3, [r7, #0]
 8001d3a:	4613      	mov	r3, r2
 8001d3c:	80fb      	strh	r3, [r7, #6]
 8001d3e:	2300      	movs	r3, #0
 8001d40:	617b      	str	r3, [r7, #20]
 8001d42:	68fb      	ldr	r3, [r7, #12]
 8001d44:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001d48:	b2db      	uxtb	r3, r3
 8001d4a:	2b20      	cmp	r3, #32
 8001d4c:	d17c      	bne.n	8001e48 <HAL_UART_Transmit+0x11a>
 8001d4e:	68bb      	ldr	r3, [r7, #8]
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d002      	beq.n	8001d5a <HAL_UART_Transmit+0x2c>
 8001d54:	88fb      	ldrh	r3, [r7, #6]
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d101      	bne.n	8001d5e <HAL_UART_Transmit+0x30>
 8001d5a:	2301      	movs	r3, #1
 8001d5c:	e075      	b.n	8001e4a <HAL_UART_Transmit+0x11c>
 8001d5e:	68fb      	ldr	r3, [r7, #12]
 8001d60:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001d64:	2b01      	cmp	r3, #1
 8001d66:	d101      	bne.n	8001d6c <HAL_UART_Transmit+0x3e>
 8001d68:	2302      	movs	r3, #2
 8001d6a:	e06e      	b.n	8001e4a <HAL_UART_Transmit+0x11c>
 8001d6c:	68fb      	ldr	r3, [r7, #12]
 8001d6e:	2201      	movs	r2, #1
 8001d70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	2200      	movs	r2, #0
 8001d78:	641a      	str	r2, [r3, #64]	; 0x40
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	2221      	movs	r2, #33	; 0x21
 8001d7e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d82:	f7fe ffcb 	bl	8000d1c <HAL_GetTick>
 8001d86:	6178      	str	r0, [r7, #20]
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	88fa      	ldrh	r2, [r7, #6]
 8001d8c:	849a      	strh	r2, [r3, #36]	; 0x24
 8001d8e:	68fb      	ldr	r3, [r7, #12]
 8001d90:	88fa      	ldrh	r2, [r7, #6]
 8001d92:	84da      	strh	r2, [r3, #38]	; 0x26
 8001d94:	68fb      	ldr	r3, [r7, #12]
 8001d96:	689b      	ldr	r3, [r3, #8]
 8001d98:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001d9c:	d108      	bne.n	8001db0 <HAL_UART_Transmit+0x82>
 8001d9e:	68fb      	ldr	r3, [r7, #12]
 8001da0:	691b      	ldr	r3, [r3, #16]
 8001da2:	2b00      	cmp	r3, #0
 8001da4:	d104      	bne.n	8001db0 <HAL_UART_Transmit+0x82>
 8001da6:	2300      	movs	r3, #0
 8001da8:	61fb      	str	r3, [r7, #28]
 8001daa:	68bb      	ldr	r3, [r7, #8]
 8001dac:	61bb      	str	r3, [r7, #24]
 8001dae:	e003      	b.n	8001db8 <HAL_UART_Transmit+0x8a>
 8001db0:	68bb      	ldr	r3, [r7, #8]
 8001db2:	61fb      	str	r3, [r7, #28]
 8001db4:	2300      	movs	r3, #0
 8001db6:	61bb      	str	r3, [r7, #24]
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	2200      	movs	r2, #0
 8001dbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001dc0:	e02a      	b.n	8001e18 <HAL_UART_Transmit+0xea>
 8001dc2:	683b      	ldr	r3, [r7, #0]
 8001dc4:	9300      	str	r3, [sp, #0]
 8001dc6:	697b      	ldr	r3, [r7, #20]
 8001dc8:	2200      	movs	r2, #0
 8001dca:	2180      	movs	r1, #128	; 0x80
 8001dcc:	68f8      	ldr	r0, [r7, #12]
 8001dce:	f000 fab3 	bl	8002338 <UART_WaitOnFlagUntilTimeout>
 8001dd2:	4603      	mov	r3, r0
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d001      	beq.n	8001ddc <HAL_UART_Transmit+0xae>
 8001dd8:	2303      	movs	r3, #3
 8001dda:	e036      	b.n	8001e4a <HAL_UART_Transmit+0x11c>
 8001ddc:	69fb      	ldr	r3, [r7, #28]
 8001dde:	2b00      	cmp	r3, #0
 8001de0:	d10b      	bne.n	8001dfa <HAL_UART_Transmit+0xcc>
 8001de2:	69bb      	ldr	r3, [r7, #24]
 8001de4:	881b      	ldrh	r3, [r3, #0]
 8001de6:	461a      	mov	r2, r3
 8001de8:	68fb      	ldr	r3, [r7, #12]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001df0:	605a      	str	r2, [r3, #4]
 8001df2:	69bb      	ldr	r3, [r7, #24]
 8001df4:	3302      	adds	r3, #2
 8001df6:	61bb      	str	r3, [r7, #24]
 8001df8:	e007      	b.n	8001e0a <HAL_UART_Transmit+0xdc>
 8001dfa:	69fb      	ldr	r3, [r7, #28]
 8001dfc:	781a      	ldrb	r2, [r3, #0]
 8001dfe:	68fb      	ldr	r3, [r7, #12]
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	605a      	str	r2, [r3, #4]
 8001e04:	69fb      	ldr	r3, [r7, #28]
 8001e06:	3301      	adds	r3, #1
 8001e08:	61fb      	str	r3, [r7, #28]
 8001e0a:	68fb      	ldr	r3, [r7, #12]
 8001e0c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001e0e:	b29b      	uxth	r3, r3
 8001e10:	3b01      	subs	r3, #1
 8001e12:	b29a      	uxth	r2, r3
 8001e14:	68fb      	ldr	r3, [r7, #12]
 8001e16:	84da      	strh	r2, [r3, #38]	; 0x26
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001e1c:	b29b      	uxth	r3, r3
 8001e1e:	2b00      	cmp	r3, #0
 8001e20:	d1cf      	bne.n	8001dc2 <HAL_UART_Transmit+0x94>
 8001e22:	683b      	ldr	r3, [r7, #0]
 8001e24:	9300      	str	r3, [sp, #0]
 8001e26:	697b      	ldr	r3, [r7, #20]
 8001e28:	2200      	movs	r2, #0
 8001e2a:	2140      	movs	r1, #64	; 0x40
 8001e2c:	68f8      	ldr	r0, [r7, #12]
 8001e2e:	f000 fa83 	bl	8002338 <UART_WaitOnFlagUntilTimeout>
 8001e32:	4603      	mov	r3, r0
 8001e34:	2b00      	cmp	r3, #0
 8001e36:	d001      	beq.n	8001e3c <HAL_UART_Transmit+0x10e>
 8001e38:	2303      	movs	r3, #3
 8001e3a:	e006      	b.n	8001e4a <HAL_UART_Transmit+0x11c>
 8001e3c:	68fb      	ldr	r3, [r7, #12]
 8001e3e:	2220      	movs	r2, #32
 8001e40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001e44:	2300      	movs	r3, #0
 8001e46:	e000      	b.n	8001e4a <HAL_UART_Transmit+0x11c>
 8001e48:	2302      	movs	r3, #2
 8001e4a:	4618      	mov	r0, r3
 8001e4c:	3720      	adds	r7, #32
 8001e4e:	46bd      	mov	sp, r7
 8001e50:	bd80      	pop	{r7, pc}

08001e52 <HAL_UART_Receive>:
 8001e52:	b580      	push	{r7, lr}
 8001e54:	b08a      	sub	sp, #40	; 0x28
 8001e56:	af02      	add	r7, sp, #8
 8001e58:	60f8      	str	r0, [r7, #12]
 8001e5a:	60b9      	str	r1, [r7, #8]
 8001e5c:	603b      	str	r3, [r7, #0]
 8001e5e:	4613      	mov	r3, r2
 8001e60:	80fb      	strh	r3, [r7, #6]
 8001e62:	2300      	movs	r3, #0
 8001e64:	617b      	str	r3, [r7, #20]
 8001e66:	68fb      	ldr	r3, [r7, #12]
 8001e68:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8001e6c:	b2db      	uxtb	r3, r3
 8001e6e:	2b20      	cmp	r3, #32
 8001e70:	f040 808c 	bne.w	8001f8c <HAL_UART_Receive+0x13a>
 8001e74:	68bb      	ldr	r3, [r7, #8]
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d002      	beq.n	8001e80 <HAL_UART_Receive+0x2e>
 8001e7a:	88fb      	ldrh	r3, [r7, #6]
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d101      	bne.n	8001e84 <HAL_UART_Receive+0x32>
 8001e80:	2301      	movs	r3, #1
 8001e82:	e084      	b.n	8001f8e <HAL_UART_Receive+0x13c>
 8001e84:	68fb      	ldr	r3, [r7, #12]
 8001e86:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001e8a:	2b01      	cmp	r3, #1
 8001e8c:	d101      	bne.n	8001e92 <HAL_UART_Receive+0x40>
 8001e8e:	2302      	movs	r3, #2
 8001e90:	e07d      	b.n	8001f8e <HAL_UART_Receive+0x13c>
 8001e92:	68fb      	ldr	r3, [r7, #12]
 8001e94:	2201      	movs	r2, #1
 8001e96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001e9a:	68fb      	ldr	r3, [r7, #12]
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	641a      	str	r2, [r3, #64]	; 0x40
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	2222      	movs	r2, #34	; 0x22
 8001ea4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001ea8:	68fb      	ldr	r3, [r7, #12]
 8001eaa:	2200      	movs	r2, #0
 8001eac:	631a      	str	r2, [r3, #48]	; 0x30
 8001eae:	f7fe ff35 	bl	8000d1c <HAL_GetTick>
 8001eb2:	6178      	str	r0, [r7, #20]
 8001eb4:	68fb      	ldr	r3, [r7, #12]
 8001eb6:	88fa      	ldrh	r2, [r7, #6]
 8001eb8:	859a      	strh	r2, [r3, #44]	; 0x2c
 8001eba:	68fb      	ldr	r3, [r7, #12]
 8001ebc:	88fa      	ldrh	r2, [r7, #6]
 8001ebe:	85da      	strh	r2, [r3, #46]	; 0x2e
 8001ec0:	68fb      	ldr	r3, [r7, #12]
 8001ec2:	689b      	ldr	r3, [r3, #8]
 8001ec4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001ec8:	d108      	bne.n	8001edc <HAL_UART_Receive+0x8a>
 8001eca:	68fb      	ldr	r3, [r7, #12]
 8001ecc:	691b      	ldr	r3, [r3, #16]
 8001ece:	2b00      	cmp	r3, #0
 8001ed0:	d104      	bne.n	8001edc <HAL_UART_Receive+0x8a>
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	61fb      	str	r3, [r7, #28]
 8001ed6:	68bb      	ldr	r3, [r7, #8]
 8001ed8:	61bb      	str	r3, [r7, #24]
 8001eda:	e003      	b.n	8001ee4 <HAL_UART_Receive+0x92>
 8001edc:	68bb      	ldr	r3, [r7, #8]
 8001ede:	61fb      	str	r3, [r7, #28]
 8001ee0:	2300      	movs	r3, #0
 8001ee2:	61bb      	str	r3, [r7, #24]
 8001ee4:	68fb      	ldr	r3, [r7, #12]
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001eec:	e043      	b.n	8001f76 <HAL_UART_Receive+0x124>
 8001eee:	683b      	ldr	r3, [r7, #0]
 8001ef0:	9300      	str	r3, [sp, #0]
 8001ef2:	697b      	ldr	r3, [r7, #20]
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	2120      	movs	r1, #32
 8001ef8:	68f8      	ldr	r0, [r7, #12]
 8001efa:	f000 fa1d 	bl	8002338 <UART_WaitOnFlagUntilTimeout>
 8001efe:	4603      	mov	r3, r0
 8001f00:	2b00      	cmp	r3, #0
 8001f02:	d001      	beq.n	8001f08 <HAL_UART_Receive+0xb6>
 8001f04:	2303      	movs	r3, #3
 8001f06:	e042      	b.n	8001f8e <HAL_UART_Receive+0x13c>
 8001f08:	69fb      	ldr	r3, [r7, #28]
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d10c      	bne.n	8001f28 <HAL_UART_Receive+0xd6>
 8001f0e:	68fb      	ldr	r3, [r7, #12]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	685b      	ldr	r3, [r3, #4]
 8001f14:	b29b      	uxth	r3, r3
 8001f16:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001f1a:	b29a      	uxth	r2, r3
 8001f1c:	69bb      	ldr	r3, [r7, #24]
 8001f1e:	801a      	strh	r2, [r3, #0]
 8001f20:	69bb      	ldr	r3, [r7, #24]
 8001f22:	3302      	adds	r3, #2
 8001f24:	61bb      	str	r3, [r7, #24]
 8001f26:	e01f      	b.n	8001f68 <HAL_UART_Receive+0x116>
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	689b      	ldr	r3, [r3, #8]
 8001f2c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001f30:	d007      	beq.n	8001f42 <HAL_UART_Receive+0xf0>
 8001f32:	68fb      	ldr	r3, [r7, #12]
 8001f34:	689b      	ldr	r3, [r3, #8]
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d10a      	bne.n	8001f50 <HAL_UART_Receive+0xfe>
 8001f3a:	68fb      	ldr	r3, [r7, #12]
 8001f3c:	691b      	ldr	r3, [r3, #16]
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d106      	bne.n	8001f50 <HAL_UART_Receive+0xfe>
 8001f42:	68fb      	ldr	r3, [r7, #12]
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	685b      	ldr	r3, [r3, #4]
 8001f48:	b2da      	uxtb	r2, r3
 8001f4a:	69fb      	ldr	r3, [r7, #28]
 8001f4c:	701a      	strb	r2, [r3, #0]
 8001f4e:	e008      	b.n	8001f62 <HAL_UART_Receive+0x110>
 8001f50:	68fb      	ldr	r3, [r7, #12]
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	685b      	ldr	r3, [r3, #4]
 8001f56:	b2db      	uxtb	r3, r3
 8001f58:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001f5c:	b2da      	uxtb	r2, r3
 8001f5e:	69fb      	ldr	r3, [r7, #28]
 8001f60:	701a      	strb	r2, [r3, #0]
 8001f62:	69fb      	ldr	r3, [r7, #28]
 8001f64:	3301      	adds	r3, #1
 8001f66:	61fb      	str	r3, [r7, #28]
 8001f68:	68fb      	ldr	r3, [r7, #12]
 8001f6a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8001f6c:	b29b      	uxth	r3, r3
 8001f6e:	3b01      	subs	r3, #1
 8001f70:	b29a      	uxth	r2, r3
 8001f72:	68fb      	ldr	r3, [r7, #12]
 8001f74:	85da      	strh	r2, [r3, #46]	; 0x2e
 8001f76:	68fb      	ldr	r3, [r7, #12]
 8001f78:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8001f7a:	b29b      	uxth	r3, r3
 8001f7c:	2b00      	cmp	r3, #0
 8001f7e:	d1b6      	bne.n	8001eee <HAL_UART_Receive+0x9c>
 8001f80:	68fb      	ldr	r3, [r7, #12]
 8001f82:	2220      	movs	r2, #32
 8001f84:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001f88:	2300      	movs	r3, #0
 8001f8a:	e000      	b.n	8001f8e <HAL_UART_Receive+0x13c>
 8001f8c:	2302      	movs	r3, #2
 8001f8e:	4618      	mov	r0, r3
 8001f90:	3720      	adds	r7, #32
 8001f92:	46bd      	mov	sp, r7
 8001f94:	bd80      	pop	{r7, pc}
	...

08001f98 <HAL_UART_IRQHandler>:
 8001f98:	b580      	push	{r7, lr}
 8001f9a:	b08a      	sub	sp, #40	; 0x28
 8001f9c:	af00      	add	r7, sp, #0
 8001f9e:	6078      	str	r0, [r7, #4]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	627b      	str	r3, [r7, #36]	; 0x24
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	68db      	ldr	r3, [r3, #12]
 8001fae:	623b      	str	r3, [r7, #32]
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	695b      	ldr	r3, [r3, #20]
 8001fb6:	61fb      	str	r3, [r7, #28]
 8001fb8:	2300      	movs	r3, #0
 8001fba:	61bb      	str	r3, [r7, #24]
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	617b      	str	r3, [r7, #20]
 8001fc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fc2:	f003 030f 	and.w	r3, r3, #15
 8001fc6:	61bb      	str	r3, [r7, #24]
 8001fc8:	69bb      	ldr	r3, [r7, #24]
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	d10d      	bne.n	8001fea <HAL_UART_IRQHandler+0x52>
 8001fce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fd0:	f003 0320 	and.w	r3, r3, #32
 8001fd4:	2b00      	cmp	r3, #0
 8001fd6:	d008      	beq.n	8001fea <HAL_UART_IRQHandler+0x52>
 8001fd8:	6a3b      	ldr	r3, [r7, #32]
 8001fda:	f003 0320 	and.w	r3, r3, #32
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d003      	beq.n	8001fea <HAL_UART_IRQHandler+0x52>
 8001fe2:	6878      	ldr	r0, [r7, #4]
 8001fe4:	f000 fa99 	bl	800251a <UART_Receive_IT>
 8001fe8:	e17b      	b.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 8001fea:	69bb      	ldr	r3, [r7, #24]
 8001fec:	2b00      	cmp	r3, #0
 8001fee:	f000 80b1 	beq.w	8002154 <HAL_UART_IRQHandler+0x1bc>
 8001ff2:	69fb      	ldr	r3, [r7, #28]
 8001ff4:	f003 0301 	and.w	r3, r3, #1
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d105      	bne.n	8002008 <HAL_UART_IRQHandler+0x70>
 8001ffc:	6a3b      	ldr	r3, [r7, #32]
 8001ffe:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002002:	2b00      	cmp	r3, #0
 8002004:	f000 80a6 	beq.w	8002154 <HAL_UART_IRQHandler+0x1bc>
 8002008:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800200a:	f003 0301 	and.w	r3, r3, #1
 800200e:	2b00      	cmp	r3, #0
 8002010:	d00a      	beq.n	8002028 <HAL_UART_IRQHandler+0x90>
 8002012:	6a3b      	ldr	r3, [r7, #32]
 8002014:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002018:	2b00      	cmp	r3, #0
 800201a:	d005      	beq.n	8002028 <HAL_UART_IRQHandler+0x90>
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002020:	f043 0201 	orr.w	r2, r3, #1
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	641a      	str	r2, [r3, #64]	; 0x40
 8002028:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800202a:	f003 0304 	and.w	r3, r3, #4
 800202e:	2b00      	cmp	r3, #0
 8002030:	d00a      	beq.n	8002048 <HAL_UART_IRQHandler+0xb0>
 8002032:	69fb      	ldr	r3, [r7, #28]
 8002034:	f003 0301 	and.w	r3, r3, #1
 8002038:	2b00      	cmp	r3, #0
 800203a:	d005      	beq.n	8002048 <HAL_UART_IRQHandler+0xb0>
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002040:	f043 0202 	orr.w	r2, r3, #2
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	641a      	str	r2, [r3, #64]	; 0x40
 8002048:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800204a:	f003 0302 	and.w	r3, r3, #2
 800204e:	2b00      	cmp	r3, #0
 8002050:	d00a      	beq.n	8002068 <HAL_UART_IRQHandler+0xd0>
 8002052:	69fb      	ldr	r3, [r7, #28]
 8002054:	f003 0301 	and.w	r3, r3, #1
 8002058:	2b00      	cmp	r3, #0
 800205a:	d005      	beq.n	8002068 <HAL_UART_IRQHandler+0xd0>
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002060:	f043 0204 	orr.w	r2, r3, #4
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	641a      	str	r2, [r3, #64]	; 0x40
 8002068:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800206a:	f003 0308 	and.w	r3, r3, #8
 800206e:	2b00      	cmp	r3, #0
 8002070:	d00f      	beq.n	8002092 <HAL_UART_IRQHandler+0xfa>
 8002072:	6a3b      	ldr	r3, [r7, #32]
 8002074:	f003 0320 	and.w	r3, r3, #32
 8002078:	2b00      	cmp	r3, #0
 800207a:	d104      	bne.n	8002086 <HAL_UART_IRQHandler+0xee>
 800207c:	69fb      	ldr	r3, [r7, #28]
 800207e:	f003 0301 	and.w	r3, r3, #1
 8002082:	2b00      	cmp	r3, #0
 8002084:	d005      	beq.n	8002092 <HAL_UART_IRQHandler+0xfa>
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800208a:	f043 0208 	orr.w	r2, r3, #8
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	641a      	str	r2, [r3, #64]	; 0x40
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002096:	2b00      	cmp	r3, #0
 8002098:	f000 811e 	beq.w	80022d8 <HAL_UART_IRQHandler+0x340>
 800209c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800209e:	f003 0320 	and.w	r3, r3, #32
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d007      	beq.n	80020b6 <HAL_UART_IRQHandler+0x11e>
 80020a6:	6a3b      	ldr	r3, [r7, #32]
 80020a8:	f003 0320 	and.w	r3, r3, #32
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d002      	beq.n	80020b6 <HAL_UART_IRQHandler+0x11e>
 80020b0:	6878      	ldr	r0, [r7, #4]
 80020b2:	f000 fa32 	bl	800251a <UART_Receive_IT>
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	695b      	ldr	r3, [r3, #20]
 80020bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	bf14      	ite	ne
 80020c4:	2301      	movne	r3, #1
 80020c6:	2300      	moveq	r3, #0
 80020c8:	b2db      	uxtb	r3, r3
 80020ca:	617b      	str	r3, [r7, #20]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020d0:	f003 0308 	and.w	r3, r3, #8
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d102      	bne.n	80020de <HAL_UART_IRQHandler+0x146>
 80020d8:	697b      	ldr	r3, [r7, #20]
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d031      	beq.n	8002142 <HAL_UART_IRQHandler+0x1aa>
 80020de:	6878      	ldr	r0, [r7, #4]
 80020e0:	f000 f974 	bl	80023cc <UART_EndRxTransfer>
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	695b      	ldr	r3, [r3, #20]
 80020ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d023      	beq.n	800213a <HAL_UART_IRQHandler+0x1a2>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	695a      	ldr	r2, [r3, #20]
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002100:	615a      	str	r2, [r3, #20]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002106:	2b00      	cmp	r3, #0
 8002108:	d013      	beq.n	8002132 <HAL_UART_IRQHandler+0x19a>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800210e:	4a76      	ldr	r2, [pc, #472]	; (80022e8 <HAL_UART_IRQHandler+0x350>)
 8002110:	635a      	str	r2, [r3, #52]	; 0x34
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002116:	4618      	mov	r0, r3
 8002118:	f7fe ff76 	bl	8001008 <HAL_DMA_Abort_IT>
 800211c:	4603      	mov	r3, r0
 800211e:	2b00      	cmp	r3, #0
 8002120:	d016      	beq.n	8002150 <HAL_UART_IRQHandler+0x1b8>
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002126:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002128:	687a      	ldr	r2, [r7, #4]
 800212a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800212c:	4610      	mov	r0, r2
 800212e:	4798      	blx	r3
 8002130:	e00e      	b.n	8002150 <HAL_UART_IRQHandler+0x1b8>
 8002132:	6878      	ldr	r0, [r7, #4]
 8002134:	f000 f8ec 	bl	8002310 <HAL_UART_ErrorCallback>
 8002138:	e00a      	b.n	8002150 <HAL_UART_IRQHandler+0x1b8>
 800213a:	6878      	ldr	r0, [r7, #4]
 800213c:	f000 f8e8 	bl	8002310 <HAL_UART_ErrorCallback>
 8002140:	e006      	b.n	8002150 <HAL_UART_IRQHandler+0x1b8>
 8002142:	6878      	ldr	r0, [r7, #4]
 8002144:	f000 f8e4 	bl	8002310 <HAL_UART_ErrorCallback>
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2200      	movs	r2, #0
 800214c:	641a      	str	r2, [r3, #64]	; 0x40
 800214e:	e0c3      	b.n	80022d8 <HAL_UART_IRQHandler+0x340>
 8002150:	bf00      	nop
 8002152:	e0c1      	b.n	80022d8 <HAL_UART_IRQHandler+0x340>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002158:	2b01      	cmp	r3, #1
 800215a:	f040 80a1 	bne.w	80022a0 <HAL_UART_IRQHandler+0x308>
 800215e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002160:	f003 0310 	and.w	r3, r3, #16
 8002164:	2b00      	cmp	r3, #0
 8002166:	f000 809b 	beq.w	80022a0 <HAL_UART_IRQHandler+0x308>
 800216a:	6a3b      	ldr	r3, [r7, #32]
 800216c:	f003 0310 	and.w	r3, r3, #16
 8002170:	2b00      	cmp	r3, #0
 8002172:	f000 8095 	beq.w	80022a0 <HAL_UART_IRQHandler+0x308>
 8002176:	2300      	movs	r3, #0
 8002178:	60fb      	str	r3, [r7, #12]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	60fb      	str	r3, [r7, #12]
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	685b      	ldr	r3, [r3, #4]
 8002188:	60fb      	str	r3, [r7, #12]
 800218a:	68fb      	ldr	r3, [r7, #12]
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	695b      	ldr	r3, [r3, #20]
 8002192:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002196:	2b00      	cmp	r3, #0
 8002198:	d04e      	beq.n	8002238 <HAL_UART_IRQHandler+0x2a0>
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	685b      	ldr	r3, [r3, #4]
 80021a2:	823b      	strh	r3, [r7, #16]
 80021a4:	8a3b      	ldrh	r3, [r7, #16]
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	f000 8098 	beq.w	80022dc <HAL_UART_IRQHandler+0x344>
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80021b0:	8a3a      	ldrh	r2, [r7, #16]
 80021b2:	429a      	cmp	r2, r3
 80021b4:	f080 8092 	bcs.w	80022dc <HAL_UART_IRQHandler+0x344>
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	8a3a      	ldrh	r2, [r7, #16]
 80021bc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80021c2:	699b      	ldr	r3, [r3, #24]
 80021c4:	2b20      	cmp	r3, #32
 80021c6:	d02b      	beq.n	8002220 <HAL_UART_IRQHandler+0x288>
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	68da      	ldr	r2, [r3, #12]
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80021d6:	60da      	str	r2, [r3, #12]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	695a      	ldr	r2, [r3, #20]
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	f022 0201 	bic.w	r2, r2, #1
 80021e6:	615a      	str	r2, [r3, #20]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	695a      	ldr	r2, [r3, #20]
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80021f6:	615a      	str	r2, [r3, #20]
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	2220      	movs	r2, #32
 80021fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	2200      	movs	r2, #0
 8002204:	631a      	str	r2, [r3, #48]	; 0x30
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	68da      	ldr	r2, [r3, #12]
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	f022 0210 	bic.w	r2, r2, #16
 8002214:	60da      	str	r2, [r3, #12]
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800221a:	4618      	mov	r0, r3
 800221c:	f7fe feb9 	bl	8000f92 <HAL_DMA_Abort>
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002228:	b29b      	uxth	r3, r3
 800222a:	1ad3      	subs	r3, r2, r3
 800222c:	b29b      	uxth	r3, r3
 800222e:	4619      	mov	r1, r3
 8002230:	6878      	ldr	r0, [r7, #4]
 8002232:	f000 f876 	bl	8002322 <HAL_UARTEx_RxEventCallback>
 8002236:	e051      	b.n	80022dc <HAL_UART_IRQHandler+0x344>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002240:	b29b      	uxth	r3, r3
 8002242:	1ad3      	subs	r3, r2, r3
 8002244:	827b      	strh	r3, [r7, #18]
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800224a:	b29b      	uxth	r3, r3
 800224c:	2b00      	cmp	r3, #0
 800224e:	d047      	beq.n	80022e0 <HAL_UART_IRQHandler+0x348>
 8002250:	8a7b      	ldrh	r3, [r7, #18]
 8002252:	2b00      	cmp	r3, #0
 8002254:	d044      	beq.n	80022e0 <HAL_UART_IRQHandler+0x348>
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	68da      	ldr	r2, [r3, #12]
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8002264:	60da      	str	r2, [r3, #12]
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	695a      	ldr	r2, [r3, #20]
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	f022 0201 	bic.w	r2, r2, #1
 8002274:	615a      	str	r2, [r3, #20]
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	2220      	movs	r2, #32
 800227a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	2200      	movs	r2, #0
 8002282:	631a      	str	r2, [r3, #48]	; 0x30
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	68da      	ldr	r2, [r3, #12]
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	f022 0210 	bic.w	r2, r2, #16
 8002292:	60da      	str	r2, [r3, #12]
 8002294:	8a7b      	ldrh	r3, [r7, #18]
 8002296:	4619      	mov	r1, r3
 8002298:	6878      	ldr	r0, [r7, #4]
 800229a:	f000 f842 	bl	8002322 <HAL_UARTEx_RxEventCallback>
 800229e:	e01f      	b.n	80022e0 <HAL_UART_IRQHandler+0x348>
 80022a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80022a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022a6:	2b00      	cmp	r3, #0
 80022a8:	d008      	beq.n	80022bc <HAL_UART_IRQHandler+0x324>
 80022aa:	6a3b      	ldr	r3, [r7, #32]
 80022ac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d003      	beq.n	80022bc <HAL_UART_IRQHandler+0x324>
 80022b4:	6878      	ldr	r0, [r7, #4]
 80022b6:	f000 f8c9 	bl	800244c <UART_Transmit_IT>
 80022ba:	e012      	b.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 80022bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80022be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d00d      	beq.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 80022c6:	6a3b      	ldr	r3, [r7, #32]
 80022c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80022cc:	2b00      	cmp	r3, #0
 80022ce:	d008      	beq.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 80022d0:	6878      	ldr	r0, [r7, #4]
 80022d2:	f000 f90a 	bl	80024ea <UART_EndTransmit_IT>
 80022d6:	e004      	b.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 80022d8:	bf00      	nop
 80022da:	e002      	b.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 80022dc:	bf00      	nop
 80022de:	e000      	b.n	80022e2 <HAL_UART_IRQHandler+0x34a>
 80022e0:	bf00      	nop
 80022e2:	3728      	adds	r7, #40	; 0x28
 80022e4:	46bd      	mov	sp, r7
 80022e6:	bd80      	pop	{r7, pc}
 80022e8:	08002425 	.word	0x08002425

080022ec <HAL_UART_TxCpltCallback>:
 80022ec:	b480      	push	{r7}
 80022ee:	b083      	sub	sp, #12
 80022f0:	af00      	add	r7, sp, #0
 80022f2:	6078      	str	r0, [r7, #4]
 80022f4:	bf00      	nop
 80022f6:	370c      	adds	r7, #12
 80022f8:	46bd      	mov	sp, r7
 80022fa:	bc80      	pop	{r7}
 80022fc:	4770      	bx	lr

080022fe <HAL_UART_RxCpltCallback>:
 80022fe:	b480      	push	{r7}
 8002300:	b083      	sub	sp, #12
 8002302:	af00      	add	r7, sp, #0
 8002304:	6078      	str	r0, [r7, #4]
 8002306:	bf00      	nop
 8002308:	370c      	adds	r7, #12
 800230a:	46bd      	mov	sp, r7
 800230c:	bc80      	pop	{r7}
 800230e:	4770      	bx	lr

08002310 <HAL_UART_ErrorCallback>:
 8002310:	b480      	push	{r7}
 8002312:	b083      	sub	sp, #12
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
 8002318:	bf00      	nop
 800231a:	370c      	adds	r7, #12
 800231c:	46bd      	mov	sp, r7
 800231e:	bc80      	pop	{r7}
 8002320:	4770      	bx	lr

08002322 <HAL_UARTEx_RxEventCallback>:
 8002322:	b480      	push	{r7}
 8002324:	b083      	sub	sp, #12
 8002326:	af00      	add	r7, sp, #0
 8002328:	6078      	str	r0, [r7, #4]
 800232a:	460b      	mov	r3, r1
 800232c:	807b      	strh	r3, [r7, #2]
 800232e:	bf00      	nop
 8002330:	370c      	adds	r7, #12
 8002332:	46bd      	mov	sp, r7
 8002334:	bc80      	pop	{r7}
 8002336:	4770      	bx	lr

08002338 <UART_WaitOnFlagUntilTimeout>:
 8002338:	b580      	push	{r7, lr}
 800233a:	b084      	sub	sp, #16
 800233c:	af00      	add	r7, sp, #0
 800233e:	60f8      	str	r0, [r7, #12]
 8002340:	60b9      	str	r1, [r7, #8]
 8002342:	603b      	str	r3, [r7, #0]
 8002344:	4613      	mov	r3, r2
 8002346:	71fb      	strb	r3, [r7, #7]
 8002348:	e02c      	b.n	80023a4 <UART_WaitOnFlagUntilTimeout+0x6c>
 800234a:	69bb      	ldr	r3, [r7, #24]
 800234c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002350:	d028      	beq.n	80023a4 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002352:	69bb      	ldr	r3, [r7, #24]
 8002354:	2b00      	cmp	r3, #0
 8002356:	d007      	beq.n	8002368 <UART_WaitOnFlagUntilTimeout+0x30>
 8002358:	f7fe fce0 	bl	8000d1c <HAL_GetTick>
 800235c:	4602      	mov	r2, r0
 800235e:	683b      	ldr	r3, [r7, #0]
 8002360:	1ad3      	subs	r3, r2, r3
 8002362:	69ba      	ldr	r2, [r7, #24]
 8002364:	429a      	cmp	r2, r3
 8002366:	d21d      	bcs.n	80023a4 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002368:	68fb      	ldr	r3, [r7, #12]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	68da      	ldr	r2, [r3, #12]
 800236e:	68fb      	ldr	r3, [r7, #12]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002376:	60da      	str	r2, [r3, #12]
 8002378:	68fb      	ldr	r3, [r7, #12]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	695a      	ldr	r2, [r3, #20]
 800237e:	68fb      	ldr	r3, [r7, #12]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	f022 0201 	bic.w	r2, r2, #1
 8002386:	615a      	str	r2, [r3, #20]
 8002388:	68fb      	ldr	r3, [r7, #12]
 800238a:	2220      	movs	r2, #32
 800238c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	2220      	movs	r2, #32
 8002394:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	2200      	movs	r2, #0
 800239c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023a0:	2303      	movs	r3, #3
 80023a2:	e00f      	b.n	80023c4 <UART_WaitOnFlagUntilTimeout+0x8c>
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	681a      	ldr	r2, [r3, #0]
 80023aa:	68bb      	ldr	r3, [r7, #8]
 80023ac:	4013      	ands	r3, r2
 80023ae:	68ba      	ldr	r2, [r7, #8]
 80023b0:	429a      	cmp	r2, r3
 80023b2:	bf0c      	ite	eq
 80023b4:	2301      	moveq	r3, #1
 80023b6:	2300      	movne	r3, #0
 80023b8:	b2db      	uxtb	r3, r3
 80023ba:	461a      	mov	r2, r3
 80023bc:	79fb      	ldrb	r3, [r7, #7]
 80023be:	429a      	cmp	r2, r3
 80023c0:	d0c3      	beq.n	800234a <UART_WaitOnFlagUntilTimeout+0x12>
 80023c2:	2300      	movs	r3, #0
 80023c4:	4618      	mov	r0, r3
 80023c6:	3710      	adds	r7, #16
 80023c8:	46bd      	mov	sp, r7
 80023ca:	bd80      	pop	{r7, pc}

080023cc <UART_EndRxTransfer>:
 80023cc:	b480      	push	{r7}
 80023ce:	b083      	sub	sp, #12
 80023d0:	af00      	add	r7, sp, #0
 80023d2:	6078      	str	r0, [r7, #4]
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	68da      	ldr	r2, [r3, #12]
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80023e2:	60da      	str	r2, [r3, #12]
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	695a      	ldr	r2, [r3, #20]
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f022 0201 	bic.w	r2, r2, #1
 80023f2:	615a      	str	r2, [r3, #20]
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023f8:	2b01      	cmp	r3, #1
 80023fa:	d107      	bne.n	800240c <UART_EndRxTransfer+0x40>
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	68da      	ldr	r2, [r3, #12]
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f022 0210 	bic.w	r2, r2, #16
 800240a:	60da      	str	r2, [r3, #12]
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	2220      	movs	r2, #32
 8002410:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	2200      	movs	r2, #0
 8002418:	631a      	str	r2, [r3, #48]	; 0x30
 800241a:	bf00      	nop
 800241c:	370c      	adds	r7, #12
 800241e:	46bd      	mov	sp, r7
 8002420:	bc80      	pop	{r7}
 8002422:	4770      	bx	lr

08002424 <UART_DMAAbortOnError>:
 8002424:	b580      	push	{r7, lr}
 8002426:	b084      	sub	sp, #16
 8002428:	af00      	add	r7, sp, #0
 800242a:	6078      	str	r0, [r7, #4]
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002430:	60fb      	str	r3, [r7, #12]
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	2200      	movs	r2, #0
 8002436:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	2200      	movs	r2, #0
 800243c:	84da      	strh	r2, [r3, #38]	; 0x26
 800243e:	68f8      	ldr	r0, [r7, #12]
 8002440:	f7ff ff66 	bl	8002310 <HAL_UART_ErrorCallback>
 8002444:	bf00      	nop
 8002446:	3710      	adds	r7, #16
 8002448:	46bd      	mov	sp, r7
 800244a:	bd80      	pop	{r7, pc}

0800244c <UART_Transmit_IT>:
 800244c:	b480      	push	{r7}
 800244e:	b085      	sub	sp, #20
 8002450:	af00      	add	r7, sp, #0
 8002452:	6078      	str	r0, [r7, #4]
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800245a:	b2db      	uxtb	r3, r3
 800245c:	2b21      	cmp	r3, #33	; 0x21
 800245e:	d13e      	bne.n	80024de <UART_Transmit_IT+0x92>
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	689b      	ldr	r3, [r3, #8]
 8002464:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002468:	d114      	bne.n	8002494 <UART_Transmit_IT+0x48>
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	691b      	ldr	r3, [r3, #16]
 800246e:	2b00      	cmp	r3, #0
 8002470:	d110      	bne.n	8002494 <UART_Transmit_IT+0x48>
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	6a1b      	ldr	r3, [r3, #32]
 8002476:	60fb      	str	r3, [r7, #12]
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	881b      	ldrh	r3, [r3, #0]
 800247c:	461a      	mov	r2, r3
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002486:	605a      	str	r2, [r3, #4]
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	6a1b      	ldr	r3, [r3, #32]
 800248c:	1c9a      	adds	r2, r3, #2
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	621a      	str	r2, [r3, #32]
 8002492:	e008      	b.n	80024a6 <UART_Transmit_IT+0x5a>
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	6a1b      	ldr	r3, [r3, #32]
 8002498:	1c59      	adds	r1, r3, #1
 800249a:	687a      	ldr	r2, [r7, #4]
 800249c:	6211      	str	r1, [r2, #32]
 800249e:	781a      	ldrb	r2, [r3, #0]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	605a      	str	r2, [r3, #4]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80024aa:	b29b      	uxth	r3, r3
 80024ac:	3b01      	subs	r3, #1
 80024ae:	b29b      	uxth	r3, r3
 80024b0:	687a      	ldr	r2, [r7, #4]
 80024b2:	4619      	mov	r1, r3
 80024b4:	84d1      	strh	r1, [r2, #38]	; 0x26
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d10f      	bne.n	80024da <UART_Transmit_IT+0x8e>
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	68da      	ldr	r2, [r3, #12]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80024c8:	60da      	str	r2, [r3, #12]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	68da      	ldr	r2, [r3, #12]
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80024d8:	60da      	str	r2, [r3, #12]
 80024da:	2300      	movs	r3, #0
 80024dc:	e000      	b.n	80024e0 <UART_Transmit_IT+0x94>
 80024de:	2302      	movs	r3, #2
 80024e0:	4618      	mov	r0, r3
 80024e2:	3714      	adds	r7, #20
 80024e4:	46bd      	mov	sp, r7
 80024e6:	bc80      	pop	{r7}
 80024e8:	4770      	bx	lr

080024ea <UART_EndTransmit_IT>:
 80024ea:	b580      	push	{r7, lr}
 80024ec:	b082      	sub	sp, #8
 80024ee:	af00      	add	r7, sp, #0
 80024f0:	6078      	str	r0, [r7, #4]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	68da      	ldr	r2, [r3, #12]
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002500:	60da      	str	r2, [r3, #12]
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	2220      	movs	r2, #32
 8002506:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800250a:	6878      	ldr	r0, [r7, #4]
 800250c:	f7ff feee 	bl	80022ec <HAL_UART_TxCpltCallback>
 8002510:	2300      	movs	r3, #0
 8002512:	4618      	mov	r0, r3
 8002514:	3708      	adds	r7, #8
 8002516:	46bd      	mov	sp, r7
 8002518:	bd80      	pop	{r7, pc}

0800251a <UART_Receive_IT>:
 800251a:	b580      	push	{r7, lr}
 800251c:	b086      	sub	sp, #24
 800251e:	af00      	add	r7, sp, #0
 8002520:	6078      	str	r0, [r7, #4]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002528:	b2db      	uxtb	r3, r3
 800252a:	2b22      	cmp	r3, #34	; 0x22
 800252c:	f040 8099 	bne.w	8002662 <UART_Receive_IT+0x148>
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	689b      	ldr	r3, [r3, #8]
 8002534:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002538:	d117      	bne.n	800256a <UART_Receive_IT+0x50>
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	691b      	ldr	r3, [r3, #16]
 800253e:	2b00      	cmp	r3, #0
 8002540:	d113      	bne.n	800256a <UART_Receive_IT+0x50>
 8002542:	2300      	movs	r3, #0
 8002544:	617b      	str	r3, [r7, #20]
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800254a:	613b      	str	r3, [r7, #16]
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	681b      	ldr	r3, [r3, #0]
 8002550:	685b      	ldr	r3, [r3, #4]
 8002552:	b29b      	uxth	r3, r3
 8002554:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002558:	b29a      	uxth	r2, r3
 800255a:	693b      	ldr	r3, [r7, #16]
 800255c:	801a      	strh	r2, [r3, #0]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002562:	1c9a      	adds	r2, r3, #2
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	629a      	str	r2, [r3, #40]	; 0x28
 8002568:	e026      	b.n	80025b8 <UART_Receive_IT+0x9e>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800256e:	617b      	str	r3, [r7, #20]
 8002570:	2300      	movs	r3, #0
 8002572:	613b      	str	r3, [r7, #16]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	689b      	ldr	r3, [r3, #8]
 8002578:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800257c:	d007      	beq.n	800258e <UART_Receive_IT+0x74>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	689b      	ldr	r3, [r3, #8]
 8002582:	2b00      	cmp	r3, #0
 8002584:	d10a      	bne.n	800259c <UART_Receive_IT+0x82>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	691b      	ldr	r3, [r3, #16]
 800258a:	2b00      	cmp	r3, #0
 800258c:	d106      	bne.n	800259c <UART_Receive_IT+0x82>
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	685b      	ldr	r3, [r3, #4]
 8002594:	b2da      	uxtb	r2, r3
 8002596:	697b      	ldr	r3, [r7, #20]
 8002598:	701a      	strb	r2, [r3, #0]
 800259a:	e008      	b.n	80025ae <UART_Receive_IT+0x94>
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	685b      	ldr	r3, [r3, #4]
 80025a2:	b2db      	uxtb	r3, r3
 80025a4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80025a8:	b2da      	uxtb	r2, r3
 80025aa:	697b      	ldr	r3, [r7, #20]
 80025ac:	701a      	strb	r2, [r3, #0]
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025b2:	1c5a      	adds	r2, r3, #1
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	629a      	str	r2, [r3, #40]	; 0x28
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80025bc:	b29b      	uxth	r3, r3
 80025be:	3b01      	subs	r3, #1
 80025c0:	b29b      	uxth	r3, r3
 80025c2:	687a      	ldr	r2, [r7, #4]
 80025c4:	4619      	mov	r1, r3
 80025c6:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80025c8:	2b00      	cmp	r3, #0
 80025ca:	d148      	bne.n	800265e <UART_Receive_IT+0x144>
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	68da      	ldr	r2, [r3, #12]
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	f022 0220 	bic.w	r2, r2, #32
 80025da:	60da      	str	r2, [r3, #12]
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	68da      	ldr	r2, [r3, #12]
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80025ea:	60da      	str	r2, [r3, #12]
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	695a      	ldr	r2, [r3, #20]
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	f022 0201 	bic.w	r2, r2, #1
 80025fa:	615a      	str	r2, [r3, #20]
 80025fc:	687b      	ldr	r3, [r7, #4]
 80025fe:	2220      	movs	r2, #32
 8002600:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002608:	2b01      	cmp	r3, #1
 800260a:	d123      	bne.n	8002654 <UART_Receive_IT+0x13a>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	2200      	movs	r2, #0
 8002610:	631a      	str	r2, [r3, #48]	; 0x30
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	68da      	ldr	r2, [r3, #12]
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	f022 0210 	bic.w	r2, r2, #16
 8002620:	60da      	str	r2, [r3, #12]
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	f003 0310 	and.w	r3, r3, #16
 800262c:	2b10      	cmp	r3, #16
 800262e:	d10a      	bne.n	8002646 <UART_Receive_IT+0x12c>
 8002630:	2300      	movs	r3, #0
 8002632:	60fb      	str	r3, [r7, #12]
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	60fb      	str	r3, [r7, #12]
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	685b      	ldr	r3, [r3, #4]
 8002642:	60fb      	str	r3, [r7, #12]
 8002644:	68fb      	ldr	r3, [r7, #12]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800264a:	4619      	mov	r1, r3
 800264c:	6878      	ldr	r0, [r7, #4]
 800264e:	f7ff fe68 	bl	8002322 <HAL_UARTEx_RxEventCallback>
 8002652:	e002      	b.n	800265a <UART_Receive_IT+0x140>
 8002654:	6878      	ldr	r0, [r7, #4]
 8002656:	f7ff fe52 	bl	80022fe <HAL_UART_RxCpltCallback>
 800265a:	2300      	movs	r3, #0
 800265c:	e002      	b.n	8002664 <UART_Receive_IT+0x14a>
 800265e:	2300      	movs	r3, #0
 8002660:	e000      	b.n	8002664 <UART_Receive_IT+0x14a>
 8002662:	2302      	movs	r3, #2
 8002664:	4618      	mov	r0, r3
 8002666:	3718      	adds	r7, #24
 8002668:	46bd      	mov	sp, r7
 800266a:	bd80      	pop	{r7, pc}

0800266c <UART_SetConfig>:
 800266c:	b580      	push	{r7, lr}
 800266e:	b084      	sub	sp, #16
 8002670:	af00      	add	r7, sp, #0
 8002672:	6078      	str	r0, [r7, #4]
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	691b      	ldr	r3, [r3, #16]
 800267a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	68da      	ldr	r2, [r3, #12]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	430a      	orrs	r2, r1
 8002688:	611a      	str	r2, [r3, #16]
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	689a      	ldr	r2, [r3, #8]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	691b      	ldr	r3, [r3, #16]
 8002692:	431a      	orrs	r2, r3
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	695b      	ldr	r3, [r3, #20]
 8002698:	4313      	orrs	r3, r2
 800269a:	60bb      	str	r3, [r7, #8]
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	68db      	ldr	r3, [r3, #12]
 80026a2:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80026a6:	f023 030c 	bic.w	r3, r3, #12
 80026aa:	687a      	ldr	r2, [r7, #4]
 80026ac:	6812      	ldr	r2, [r2, #0]
 80026ae:	68b9      	ldr	r1, [r7, #8]
 80026b0:	430b      	orrs	r3, r1
 80026b2:	60d3      	str	r3, [r2, #12]
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	695b      	ldr	r3, [r3, #20]
 80026ba:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	699a      	ldr	r2, [r3, #24]
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	430a      	orrs	r2, r1
 80026c8:	615a      	str	r2, [r3, #20]
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	4a2c      	ldr	r2, [pc, #176]	; (8002780 <UART_SetConfig+0x114>)
 80026d0:	4293      	cmp	r3, r2
 80026d2:	d103      	bne.n	80026dc <UART_SetConfig+0x70>
 80026d4:	f7ff faac 	bl	8001c30 <HAL_RCC_GetPCLK2Freq>
 80026d8:	60f8      	str	r0, [r7, #12]
 80026da:	e002      	b.n	80026e2 <UART_SetConfig+0x76>
 80026dc:	f7ff fa94 	bl	8001c08 <HAL_RCC_GetPCLK1Freq>
 80026e0:	60f8      	str	r0, [r7, #12]
 80026e2:	68fa      	ldr	r2, [r7, #12]
 80026e4:	4613      	mov	r3, r2
 80026e6:	009b      	lsls	r3, r3, #2
 80026e8:	4413      	add	r3, r2
 80026ea:	009a      	lsls	r2, r3, #2
 80026ec:	441a      	add	r2, r3
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	685b      	ldr	r3, [r3, #4]
 80026f2:	009b      	lsls	r3, r3, #2
 80026f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80026f8:	4a22      	ldr	r2, [pc, #136]	; (8002784 <UART_SetConfig+0x118>)
 80026fa:	fba2 2303 	umull	r2, r3, r2, r3
 80026fe:	095b      	lsrs	r3, r3, #5
 8002700:	0119      	lsls	r1, r3, #4
 8002702:	68fa      	ldr	r2, [r7, #12]
 8002704:	4613      	mov	r3, r2
 8002706:	009b      	lsls	r3, r3, #2
 8002708:	4413      	add	r3, r2
 800270a:	009a      	lsls	r2, r3, #2
 800270c:	441a      	add	r2, r3
 800270e:	687b      	ldr	r3, [r7, #4]
 8002710:	685b      	ldr	r3, [r3, #4]
 8002712:	009b      	lsls	r3, r3, #2
 8002714:	fbb2 f2f3 	udiv	r2, r2, r3
 8002718:	4b1a      	ldr	r3, [pc, #104]	; (8002784 <UART_SetConfig+0x118>)
 800271a:	fba3 0302 	umull	r0, r3, r3, r2
 800271e:	095b      	lsrs	r3, r3, #5
 8002720:	2064      	movs	r0, #100	; 0x64
 8002722:	fb00 f303 	mul.w	r3, r0, r3
 8002726:	1ad3      	subs	r3, r2, r3
 8002728:	011b      	lsls	r3, r3, #4
 800272a:	3332      	adds	r3, #50	; 0x32
 800272c:	4a15      	ldr	r2, [pc, #84]	; (8002784 <UART_SetConfig+0x118>)
 800272e:	fba2 2303 	umull	r2, r3, r2, r3
 8002732:	095b      	lsrs	r3, r3, #5
 8002734:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002738:	4419      	add	r1, r3
 800273a:	68fa      	ldr	r2, [r7, #12]
 800273c:	4613      	mov	r3, r2
 800273e:	009b      	lsls	r3, r3, #2
 8002740:	4413      	add	r3, r2
 8002742:	009a      	lsls	r2, r3, #2
 8002744:	441a      	add	r2, r3
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	685b      	ldr	r3, [r3, #4]
 800274a:	009b      	lsls	r3, r3, #2
 800274c:	fbb2 f2f3 	udiv	r2, r2, r3
 8002750:	4b0c      	ldr	r3, [pc, #48]	; (8002784 <UART_SetConfig+0x118>)
 8002752:	fba3 0302 	umull	r0, r3, r3, r2
 8002756:	095b      	lsrs	r3, r3, #5
 8002758:	2064      	movs	r0, #100	; 0x64
 800275a:	fb00 f303 	mul.w	r3, r0, r3
 800275e:	1ad3      	subs	r3, r2, r3
 8002760:	011b      	lsls	r3, r3, #4
 8002762:	3332      	adds	r3, #50	; 0x32
 8002764:	4a07      	ldr	r2, [pc, #28]	; (8002784 <UART_SetConfig+0x118>)
 8002766:	fba2 2303 	umull	r2, r3, r2, r3
 800276a:	095b      	lsrs	r3, r3, #5
 800276c:	f003 020f 	and.w	r2, r3, #15
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	440a      	add	r2, r1
 8002776:	609a      	str	r2, [r3, #8]
 8002778:	bf00      	nop
 800277a:	3710      	adds	r7, #16
 800277c:	46bd      	mov	sp, r7
 800277e:	bd80      	pop	{r7, pc}
 8002780:	40013800 	.word	0x40013800
 8002784:	51eb851f 	.word	0x51eb851f

08002788 <__errno>:
 8002788:	4b01      	ldr	r3, [pc, #4]	; (8002790 <__errno+0x8>)
 800278a:	6818      	ldr	r0, [r3, #0]
 800278c:	4770      	bx	lr
 800278e:	bf00      	nop
 8002790:	2000000c 	.word	0x2000000c

08002794 <__sflush_r>:
 8002794:	898a      	ldrh	r2, [r1, #12]
 8002796:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002798:	4605      	mov	r5, r0
 800279a:	0710      	lsls	r0, r2, #28
 800279c:	460c      	mov	r4, r1
 800279e:	d457      	bmi.n	8002850 <__sflush_r+0xbc>
 80027a0:	684b      	ldr	r3, [r1, #4]
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	dc04      	bgt.n	80027b0 <__sflush_r+0x1c>
 80027a6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80027a8:	2b00      	cmp	r3, #0
 80027aa:	dc01      	bgt.n	80027b0 <__sflush_r+0x1c>
 80027ac:	2000      	movs	r0, #0
 80027ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80027b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80027b2:	2e00      	cmp	r6, #0
 80027b4:	d0fa      	beq.n	80027ac <__sflush_r+0x18>
 80027b6:	2300      	movs	r3, #0
 80027b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80027bc:	682f      	ldr	r7, [r5, #0]
 80027be:	602b      	str	r3, [r5, #0]
 80027c0:	d032      	beq.n	8002828 <__sflush_r+0x94>
 80027c2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80027c4:	89a3      	ldrh	r3, [r4, #12]
 80027c6:	075a      	lsls	r2, r3, #29
 80027c8:	d505      	bpl.n	80027d6 <__sflush_r+0x42>
 80027ca:	6863      	ldr	r3, [r4, #4]
 80027cc:	1ac0      	subs	r0, r0, r3
 80027ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80027d0:	b10b      	cbz	r3, 80027d6 <__sflush_r+0x42>
 80027d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80027d4:	1ac0      	subs	r0, r0, r3
 80027d6:	2300      	movs	r3, #0
 80027d8:	4602      	mov	r2, r0
 80027da:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80027dc:	4628      	mov	r0, r5
 80027de:	6a21      	ldr	r1, [r4, #32]
 80027e0:	47b0      	blx	r6
 80027e2:	1c43      	adds	r3, r0, #1
 80027e4:	89a3      	ldrh	r3, [r4, #12]
 80027e6:	d106      	bne.n	80027f6 <__sflush_r+0x62>
 80027e8:	6829      	ldr	r1, [r5, #0]
 80027ea:	291d      	cmp	r1, #29
 80027ec:	d82c      	bhi.n	8002848 <__sflush_r+0xb4>
 80027ee:	4a29      	ldr	r2, [pc, #164]	; (8002894 <__sflush_r+0x100>)
 80027f0:	40ca      	lsrs	r2, r1
 80027f2:	07d6      	lsls	r6, r2, #31
 80027f4:	d528      	bpl.n	8002848 <__sflush_r+0xb4>
 80027f6:	2200      	movs	r2, #0
 80027f8:	6062      	str	r2, [r4, #4]
 80027fa:	6922      	ldr	r2, [r4, #16]
 80027fc:	04d9      	lsls	r1, r3, #19
 80027fe:	6022      	str	r2, [r4, #0]
 8002800:	d504      	bpl.n	800280c <__sflush_r+0x78>
 8002802:	1c42      	adds	r2, r0, #1
 8002804:	d101      	bne.n	800280a <__sflush_r+0x76>
 8002806:	682b      	ldr	r3, [r5, #0]
 8002808:	b903      	cbnz	r3, 800280c <__sflush_r+0x78>
 800280a:	6560      	str	r0, [r4, #84]	; 0x54
 800280c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800280e:	602f      	str	r7, [r5, #0]
 8002810:	2900      	cmp	r1, #0
 8002812:	d0cb      	beq.n	80027ac <__sflush_r+0x18>
 8002814:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002818:	4299      	cmp	r1, r3
 800281a:	d002      	beq.n	8002822 <__sflush_r+0x8e>
 800281c:	4628      	mov	r0, r5
 800281e:	f000 f9cb 	bl	8002bb8 <_free_r>
 8002822:	2000      	movs	r0, #0
 8002824:	6360      	str	r0, [r4, #52]	; 0x34
 8002826:	e7c2      	b.n	80027ae <__sflush_r+0x1a>
 8002828:	6a21      	ldr	r1, [r4, #32]
 800282a:	2301      	movs	r3, #1
 800282c:	4628      	mov	r0, r5
 800282e:	47b0      	blx	r6
 8002830:	1c41      	adds	r1, r0, #1
 8002832:	d1c7      	bne.n	80027c4 <__sflush_r+0x30>
 8002834:	682b      	ldr	r3, [r5, #0]
 8002836:	2b00      	cmp	r3, #0
 8002838:	d0c4      	beq.n	80027c4 <__sflush_r+0x30>
 800283a:	2b1d      	cmp	r3, #29
 800283c:	d001      	beq.n	8002842 <__sflush_r+0xae>
 800283e:	2b16      	cmp	r3, #22
 8002840:	d101      	bne.n	8002846 <__sflush_r+0xb2>
 8002842:	602f      	str	r7, [r5, #0]
 8002844:	e7b2      	b.n	80027ac <__sflush_r+0x18>
 8002846:	89a3      	ldrh	r3, [r4, #12]
 8002848:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800284c:	81a3      	strh	r3, [r4, #12]
 800284e:	e7ae      	b.n	80027ae <__sflush_r+0x1a>
 8002850:	690f      	ldr	r7, [r1, #16]
 8002852:	2f00      	cmp	r7, #0
 8002854:	d0aa      	beq.n	80027ac <__sflush_r+0x18>
 8002856:	0793      	lsls	r3, r2, #30
 8002858:	bf18      	it	ne
 800285a:	2300      	movne	r3, #0
 800285c:	680e      	ldr	r6, [r1, #0]
 800285e:	bf08      	it	eq
 8002860:	694b      	ldreq	r3, [r1, #20]
 8002862:	1bf6      	subs	r6, r6, r7
 8002864:	600f      	str	r7, [r1, #0]
 8002866:	608b      	str	r3, [r1, #8]
 8002868:	2e00      	cmp	r6, #0
 800286a:	dd9f      	ble.n	80027ac <__sflush_r+0x18>
 800286c:	4633      	mov	r3, r6
 800286e:	463a      	mov	r2, r7
 8002870:	4628      	mov	r0, r5
 8002872:	6a21      	ldr	r1, [r4, #32]
 8002874:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8002878:	47e0      	blx	ip
 800287a:	2800      	cmp	r0, #0
 800287c:	dc06      	bgt.n	800288c <__sflush_r+0xf8>
 800287e:	89a3      	ldrh	r3, [r4, #12]
 8002880:	f04f 30ff 	mov.w	r0, #4294967295
 8002884:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002888:	81a3      	strh	r3, [r4, #12]
 800288a:	e790      	b.n	80027ae <__sflush_r+0x1a>
 800288c:	4407      	add	r7, r0
 800288e:	1a36      	subs	r6, r6, r0
 8002890:	e7ea      	b.n	8002868 <__sflush_r+0xd4>
 8002892:	bf00      	nop
 8002894:	20400001 	.word	0x20400001

08002898 <_fflush_r>:
 8002898:	b538      	push	{r3, r4, r5, lr}
 800289a:	690b      	ldr	r3, [r1, #16]
 800289c:	4605      	mov	r5, r0
 800289e:	460c      	mov	r4, r1
 80028a0:	b913      	cbnz	r3, 80028a8 <_fflush_r+0x10>
 80028a2:	2500      	movs	r5, #0
 80028a4:	4628      	mov	r0, r5
 80028a6:	bd38      	pop	{r3, r4, r5, pc}
 80028a8:	b118      	cbz	r0, 80028b2 <_fflush_r+0x1a>
 80028aa:	6983      	ldr	r3, [r0, #24]
 80028ac:	b90b      	cbnz	r3, 80028b2 <_fflush_r+0x1a>
 80028ae:	f000 f899 	bl	80029e4 <__sinit>
 80028b2:	4b14      	ldr	r3, [pc, #80]	; (8002904 <_fflush_r+0x6c>)
 80028b4:	429c      	cmp	r4, r3
 80028b6:	d11b      	bne.n	80028f0 <_fflush_r+0x58>
 80028b8:	686c      	ldr	r4, [r5, #4]
 80028ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d0ef      	beq.n	80028a2 <_fflush_r+0xa>
 80028c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80028c4:	07d0      	lsls	r0, r2, #31
 80028c6:	d404      	bmi.n	80028d2 <_fflush_r+0x3a>
 80028c8:	0599      	lsls	r1, r3, #22
 80028ca:	d402      	bmi.n	80028d2 <_fflush_r+0x3a>
 80028cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80028ce:	f000 f968 	bl	8002ba2 <__retarget_lock_acquire_recursive>
 80028d2:	4628      	mov	r0, r5
 80028d4:	4621      	mov	r1, r4
 80028d6:	f7ff ff5d 	bl	8002794 <__sflush_r>
 80028da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80028dc:	4605      	mov	r5, r0
 80028de:	07da      	lsls	r2, r3, #31
 80028e0:	d4e0      	bmi.n	80028a4 <_fflush_r+0xc>
 80028e2:	89a3      	ldrh	r3, [r4, #12]
 80028e4:	059b      	lsls	r3, r3, #22
 80028e6:	d4dd      	bmi.n	80028a4 <_fflush_r+0xc>
 80028e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80028ea:	f000 f95b 	bl	8002ba4 <__retarget_lock_release_recursive>
 80028ee:	e7d9      	b.n	80028a4 <_fflush_r+0xc>
 80028f0:	4b05      	ldr	r3, [pc, #20]	; (8002908 <_fflush_r+0x70>)
 80028f2:	429c      	cmp	r4, r3
 80028f4:	d101      	bne.n	80028fa <_fflush_r+0x62>
 80028f6:	68ac      	ldr	r4, [r5, #8]
 80028f8:	e7df      	b.n	80028ba <_fflush_r+0x22>
 80028fa:	4b04      	ldr	r3, [pc, #16]	; (800290c <_fflush_r+0x74>)
 80028fc:	429c      	cmp	r4, r3
 80028fe:	bf08      	it	eq
 8002900:	68ec      	ldreq	r4, [r5, #12]
 8002902:	e7da      	b.n	80028ba <_fflush_r+0x22>
 8002904:	08004c30 	.word	0x08004c30
 8002908:	08004c50 	.word	0x08004c50
 800290c:	08004c10 	.word	0x08004c10

08002910 <fflush>:
 8002910:	4601      	mov	r1, r0
 8002912:	b920      	cbnz	r0, 800291e <fflush+0xe>
 8002914:	4b04      	ldr	r3, [pc, #16]	; (8002928 <fflush+0x18>)
 8002916:	4905      	ldr	r1, [pc, #20]	; (800292c <fflush+0x1c>)
 8002918:	6818      	ldr	r0, [r3, #0]
 800291a:	f000 b8fe 	b.w	8002b1a <_fwalk_reent>
 800291e:	4b04      	ldr	r3, [pc, #16]	; (8002930 <fflush+0x20>)
 8002920:	6818      	ldr	r0, [r3, #0]
 8002922:	f7ff bfb9 	b.w	8002898 <_fflush_r>
 8002926:	bf00      	nop
 8002928:	08004c70 	.word	0x08004c70
 800292c:	08002899 	.word	0x08002899
 8002930:	2000000c 	.word	0x2000000c

08002934 <std>:
 8002934:	2300      	movs	r3, #0
 8002936:	b510      	push	{r4, lr}
 8002938:	4604      	mov	r4, r0
 800293a:	e9c0 3300 	strd	r3, r3, [r0]
 800293e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002942:	6083      	str	r3, [r0, #8]
 8002944:	8181      	strh	r1, [r0, #12]
 8002946:	6643      	str	r3, [r0, #100]	; 0x64
 8002948:	81c2      	strh	r2, [r0, #14]
 800294a:	6183      	str	r3, [r0, #24]
 800294c:	4619      	mov	r1, r3
 800294e:	2208      	movs	r2, #8
 8002950:	305c      	adds	r0, #92	; 0x5c
 8002952:	f000 f928 	bl	8002ba6 <memset>
 8002956:	4b05      	ldr	r3, [pc, #20]	; (800296c <std+0x38>)
 8002958:	6224      	str	r4, [r4, #32]
 800295a:	6263      	str	r3, [r4, #36]	; 0x24
 800295c:	4b04      	ldr	r3, [pc, #16]	; (8002970 <std+0x3c>)
 800295e:	62a3      	str	r3, [r4, #40]	; 0x28
 8002960:	4b04      	ldr	r3, [pc, #16]	; (8002974 <std+0x40>)
 8002962:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002964:	4b04      	ldr	r3, [pc, #16]	; (8002978 <std+0x44>)
 8002966:	6323      	str	r3, [r4, #48]	; 0x30
 8002968:	bd10      	pop	{r4, pc}
 800296a:	bf00      	nop
 800296c:	080030a9 	.word	0x080030a9
 8002970:	080030cb 	.word	0x080030cb
 8002974:	08003103 	.word	0x08003103
 8002978:	08003127 	.word	0x08003127

0800297c <_cleanup_r>:
 800297c:	4901      	ldr	r1, [pc, #4]	; (8002984 <_cleanup_r+0x8>)
 800297e:	f000 b8cc 	b.w	8002b1a <_fwalk_reent>
 8002982:	bf00      	nop
 8002984:	08002899 	.word	0x08002899

08002988 <__sfmoreglue>:
 8002988:	2268      	movs	r2, #104	; 0x68
 800298a:	b570      	push	{r4, r5, r6, lr}
 800298c:	1e4d      	subs	r5, r1, #1
 800298e:	4355      	muls	r5, r2
 8002990:	460e      	mov	r6, r1
 8002992:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002996:	f000 f977 	bl	8002c88 <_malloc_r>
 800299a:	4604      	mov	r4, r0
 800299c:	b140      	cbz	r0, 80029b0 <__sfmoreglue+0x28>
 800299e:	2100      	movs	r1, #0
 80029a0:	e9c0 1600 	strd	r1, r6, [r0]
 80029a4:	300c      	adds	r0, #12
 80029a6:	60a0      	str	r0, [r4, #8]
 80029a8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80029ac:	f000 f8fb 	bl	8002ba6 <memset>
 80029b0:	4620      	mov	r0, r4
 80029b2:	bd70      	pop	{r4, r5, r6, pc}

080029b4 <__sfp_lock_acquire>:
 80029b4:	4801      	ldr	r0, [pc, #4]	; (80029bc <__sfp_lock_acquire+0x8>)
 80029b6:	f000 b8f4 	b.w	8002ba2 <__retarget_lock_acquire_recursive>
 80029ba:	bf00      	nop
 80029bc:	2000011d 	.word	0x2000011d

080029c0 <__sfp_lock_release>:
 80029c0:	4801      	ldr	r0, [pc, #4]	; (80029c8 <__sfp_lock_release+0x8>)
 80029c2:	f000 b8ef 	b.w	8002ba4 <__retarget_lock_release_recursive>
 80029c6:	bf00      	nop
 80029c8:	2000011d 	.word	0x2000011d

080029cc <__sinit_lock_acquire>:
 80029cc:	4801      	ldr	r0, [pc, #4]	; (80029d4 <__sinit_lock_acquire+0x8>)
 80029ce:	f000 b8e8 	b.w	8002ba2 <__retarget_lock_acquire_recursive>
 80029d2:	bf00      	nop
 80029d4:	2000011e 	.word	0x2000011e

080029d8 <__sinit_lock_release>:
 80029d8:	4801      	ldr	r0, [pc, #4]	; (80029e0 <__sinit_lock_release+0x8>)
 80029da:	f000 b8e3 	b.w	8002ba4 <__retarget_lock_release_recursive>
 80029de:	bf00      	nop
 80029e0:	2000011e 	.word	0x2000011e

080029e4 <__sinit>:
 80029e4:	b510      	push	{r4, lr}
 80029e6:	4604      	mov	r4, r0
 80029e8:	f7ff fff0 	bl	80029cc <__sinit_lock_acquire>
 80029ec:	69a3      	ldr	r3, [r4, #24]
 80029ee:	b11b      	cbz	r3, 80029f8 <__sinit+0x14>
 80029f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80029f4:	f7ff bff0 	b.w	80029d8 <__sinit_lock_release>
 80029f8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80029fc:	6523      	str	r3, [r4, #80]	; 0x50
 80029fe:	4b13      	ldr	r3, [pc, #76]	; (8002a4c <__sinit+0x68>)
 8002a00:	4a13      	ldr	r2, [pc, #76]	; (8002a50 <__sinit+0x6c>)
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	62a2      	str	r2, [r4, #40]	; 0x28
 8002a06:	42a3      	cmp	r3, r4
 8002a08:	bf08      	it	eq
 8002a0a:	2301      	moveq	r3, #1
 8002a0c:	4620      	mov	r0, r4
 8002a0e:	bf08      	it	eq
 8002a10:	61a3      	streq	r3, [r4, #24]
 8002a12:	f000 f81f 	bl	8002a54 <__sfp>
 8002a16:	6060      	str	r0, [r4, #4]
 8002a18:	4620      	mov	r0, r4
 8002a1a:	f000 f81b 	bl	8002a54 <__sfp>
 8002a1e:	60a0      	str	r0, [r4, #8]
 8002a20:	4620      	mov	r0, r4
 8002a22:	f000 f817 	bl	8002a54 <__sfp>
 8002a26:	2200      	movs	r2, #0
 8002a28:	2104      	movs	r1, #4
 8002a2a:	60e0      	str	r0, [r4, #12]
 8002a2c:	6860      	ldr	r0, [r4, #4]
 8002a2e:	f7ff ff81 	bl	8002934 <std>
 8002a32:	2201      	movs	r2, #1
 8002a34:	2109      	movs	r1, #9
 8002a36:	68a0      	ldr	r0, [r4, #8]
 8002a38:	f7ff ff7c 	bl	8002934 <std>
 8002a3c:	2202      	movs	r2, #2
 8002a3e:	2112      	movs	r1, #18
 8002a40:	68e0      	ldr	r0, [r4, #12]
 8002a42:	f7ff ff77 	bl	8002934 <std>
 8002a46:	2301      	movs	r3, #1
 8002a48:	61a3      	str	r3, [r4, #24]
 8002a4a:	e7d1      	b.n	80029f0 <__sinit+0xc>
 8002a4c:	08004c70 	.word	0x08004c70
 8002a50:	0800297d 	.word	0x0800297d

08002a54 <__sfp>:
 8002a54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a56:	4607      	mov	r7, r0
 8002a58:	f7ff ffac 	bl	80029b4 <__sfp_lock_acquire>
 8002a5c:	4b1e      	ldr	r3, [pc, #120]	; (8002ad8 <__sfp+0x84>)
 8002a5e:	681e      	ldr	r6, [r3, #0]
 8002a60:	69b3      	ldr	r3, [r6, #24]
 8002a62:	b913      	cbnz	r3, 8002a6a <__sfp+0x16>
 8002a64:	4630      	mov	r0, r6
 8002a66:	f7ff ffbd 	bl	80029e4 <__sinit>
 8002a6a:	3648      	adds	r6, #72	; 0x48
 8002a6c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8002a70:	3b01      	subs	r3, #1
 8002a72:	d503      	bpl.n	8002a7c <__sfp+0x28>
 8002a74:	6833      	ldr	r3, [r6, #0]
 8002a76:	b30b      	cbz	r3, 8002abc <__sfp+0x68>
 8002a78:	6836      	ldr	r6, [r6, #0]
 8002a7a:	e7f7      	b.n	8002a6c <__sfp+0x18>
 8002a7c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8002a80:	b9d5      	cbnz	r5, 8002ab8 <__sfp+0x64>
 8002a82:	4b16      	ldr	r3, [pc, #88]	; (8002adc <__sfp+0x88>)
 8002a84:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002a88:	60e3      	str	r3, [r4, #12]
 8002a8a:	6665      	str	r5, [r4, #100]	; 0x64
 8002a8c:	f000 f888 	bl	8002ba0 <__retarget_lock_init_recursive>
 8002a90:	f7ff ff96 	bl	80029c0 <__sfp_lock_release>
 8002a94:	2208      	movs	r2, #8
 8002a96:	4629      	mov	r1, r5
 8002a98:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002a9c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002aa0:	6025      	str	r5, [r4, #0]
 8002aa2:	61a5      	str	r5, [r4, #24]
 8002aa4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002aa8:	f000 f87d 	bl	8002ba6 <memset>
 8002aac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8002ab0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002ab4:	4620      	mov	r0, r4
 8002ab6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002ab8:	3468      	adds	r4, #104	; 0x68
 8002aba:	e7d9      	b.n	8002a70 <__sfp+0x1c>
 8002abc:	2104      	movs	r1, #4
 8002abe:	4638      	mov	r0, r7
 8002ac0:	f7ff ff62 	bl	8002988 <__sfmoreglue>
 8002ac4:	4604      	mov	r4, r0
 8002ac6:	6030      	str	r0, [r6, #0]
 8002ac8:	2800      	cmp	r0, #0
 8002aca:	d1d5      	bne.n	8002a78 <__sfp+0x24>
 8002acc:	f7ff ff78 	bl	80029c0 <__sfp_lock_release>
 8002ad0:	230c      	movs	r3, #12
 8002ad2:	603b      	str	r3, [r7, #0]
 8002ad4:	e7ee      	b.n	8002ab4 <__sfp+0x60>
 8002ad6:	bf00      	nop
 8002ad8:	08004c70 	.word	0x08004c70
 8002adc:	ffff0001 	.word	0xffff0001

08002ae0 <_fwalk>:
 8002ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ae4:	460f      	mov	r7, r1
 8002ae6:	2600      	movs	r6, #0
 8002ae8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002aec:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 8002af0:	f1b8 0801 	subs.w	r8, r8, #1
 8002af4:	d505      	bpl.n	8002b02 <_fwalk+0x22>
 8002af6:	6824      	ldr	r4, [r4, #0]
 8002af8:	2c00      	cmp	r4, #0
 8002afa:	d1f7      	bne.n	8002aec <_fwalk+0xc>
 8002afc:	4630      	mov	r0, r6
 8002afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b02:	89ab      	ldrh	r3, [r5, #12]
 8002b04:	2b01      	cmp	r3, #1
 8002b06:	d906      	bls.n	8002b16 <_fwalk+0x36>
 8002b08:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002b0c:	3301      	adds	r3, #1
 8002b0e:	d002      	beq.n	8002b16 <_fwalk+0x36>
 8002b10:	4628      	mov	r0, r5
 8002b12:	47b8      	blx	r7
 8002b14:	4306      	orrs	r6, r0
 8002b16:	3568      	adds	r5, #104	; 0x68
 8002b18:	e7ea      	b.n	8002af0 <_fwalk+0x10>

08002b1a <_fwalk_reent>:
 8002b1a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002b1e:	4606      	mov	r6, r0
 8002b20:	4688      	mov	r8, r1
 8002b22:	2700      	movs	r7, #0
 8002b24:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002b28:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002b2c:	f1b9 0901 	subs.w	r9, r9, #1
 8002b30:	d505      	bpl.n	8002b3e <_fwalk_reent+0x24>
 8002b32:	6824      	ldr	r4, [r4, #0]
 8002b34:	2c00      	cmp	r4, #0
 8002b36:	d1f7      	bne.n	8002b28 <_fwalk_reent+0xe>
 8002b38:	4638      	mov	r0, r7
 8002b3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002b3e:	89ab      	ldrh	r3, [r5, #12]
 8002b40:	2b01      	cmp	r3, #1
 8002b42:	d907      	bls.n	8002b54 <_fwalk_reent+0x3a>
 8002b44:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002b48:	3301      	adds	r3, #1
 8002b4a:	d003      	beq.n	8002b54 <_fwalk_reent+0x3a>
 8002b4c:	4629      	mov	r1, r5
 8002b4e:	4630      	mov	r0, r6
 8002b50:	47c0      	blx	r8
 8002b52:	4307      	orrs	r7, r0
 8002b54:	3568      	adds	r5, #104	; 0x68
 8002b56:	e7e9      	b.n	8002b2c <_fwalk_reent+0x12>

08002b58 <__libc_init_array>:
 8002b58:	b570      	push	{r4, r5, r6, lr}
 8002b5a:	2600      	movs	r6, #0
 8002b5c:	4d0c      	ldr	r5, [pc, #48]	; (8002b90 <__libc_init_array+0x38>)
 8002b5e:	4c0d      	ldr	r4, [pc, #52]	; (8002b94 <__libc_init_array+0x3c>)
 8002b60:	1b64      	subs	r4, r4, r5
 8002b62:	10a4      	asrs	r4, r4, #2
 8002b64:	42a6      	cmp	r6, r4
 8002b66:	d109      	bne.n	8002b7c <__libc_init_array+0x24>
 8002b68:	f001 ff00 	bl	800496c <_init>
 8002b6c:	2600      	movs	r6, #0
 8002b6e:	4d0a      	ldr	r5, [pc, #40]	; (8002b98 <__libc_init_array+0x40>)
 8002b70:	4c0a      	ldr	r4, [pc, #40]	; (8002b9c <__libc_init_array+0x44>)
 8002b72:	1b64      	subs	r4, r4, r5
 8002b74:	10a4      	asrs	r4, r4, #2
 8002b76:	42a6      	cmp	r6, r4
 8002b78:	d105      	bne.n	8002b86 <__libc_init_array+0x2e>
 8002b7a:	bd70      	pop	{r4, r5, r6, pc}
 8002b7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002b80:	4798      	blx	r3
 8002b82:	3601      	adds	r6, #1
 8002b84:	e7ee      	b.n	8002b64 <__libc_init_array+0xc>
 8002b86:	f855 3b04 	ldr.w	r3, [r5], #4
 8002b8a:	4798      	blx	r3
 8002b8c:	3601      	adds	r6, #1
 8002b8e:	e7f2      	b.n	8002b76 <__libc_init_array+0x1e>
 8002b90:	08004dc4 	.word	0x08004dc4
 8002b94:	08004dc4 	.word	0x08004dc4
 8002b98:	08004dc4 	.word	0x08004dc4
 8002b9c:	08004dc8 	.word	0x08004dc8

08002ba0 <__retarget_lock_init_recursive>:
 8002ba0:	4770      	bx	lr

08002ba2 <__retarget_lock_acquire_recursive>:
 8002ba2:	4770      	bx	lr

08002ba4 <__retarget_lock_release_recursive>:
 8002ba4:	4770      	bx	lr

08002ba6 <memset>:
 8002ba6:	4603      	mov	r3, r0
 8002ba8:	4402      	add	r2, r0
 8002baa:	4293      	cmp	r3, r2
 8002bac:	d100      	bne.n	8002bb0 <memset+0xa>
 8002bae:	4770      	bx	lr
 8002bb0:	f803 1b01 	strb.w	r1, [r3], #1
 8002bb4:	e7f9      	b.n	8002baa <memset+0x4>
	...

08002bb8 <_free_r>:
 8002bb8:	b538      	push	{r3, r4, r5, lr}
 8002bba:	4605      	mov	r5, r0
 8002bbc:	2900      	cmp	r1, #0
 8002bbe:	d040      	beq.n	8002c42 <_free_r+0x8a>
 8002bc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002bc4:	1f0c      	subs	r4, r1, #4
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	bfb8      	it	lt
 8002bca:	18e4      	addlt	r4, r4, r3
 8002bcc:	f000 fc26 	bl	800341c <__malloc_lock>
 8002bd0:	4a1c      	ldr	r2, [pc, #112]	; (8002c44 <_free_r+0x8c>)
 8002bd2:	6813      	ldr	r3, [r2, #0]
 8002bd4:	b933      	cbnz	r3, 8002be4 <_free_r+0x2c>
 8002bd6:	6063      	str	r3, [r4, #4]
 8002bd8:	6014      	str	r4, [r2, #0]
 8002bda:	4628      	mov	r0, r5
 8002bdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002be0:	f000 bc22 	b.w	8003428 <__malloc_unlock>
 8002be4:	42a3      	cmp	r3, r4
 8002be6:	d908      	bls.n	8002bfa <_free_r+0x42>
 8002be8:	6820      	ldr	r0, [r4, #0]
 8002bea:	1821      	adds	r1, r4, r0
 8002bec:	428b      	cmp	r3, r1
 8002bee:	bf01      	itttt	eq
 8002bf0:	6819      	ldreq	r1, [r3, #0]
 8002bf2:	685b      	ldreq	r3, [r3, #4]
 8002bf4:	1809      	addeq	r1, r1, r0
 8002bf6:	6021      	streq	r1, [r4, #0]
 8002bf8:	e7ed      	b.n	8002bd6 <_free_r+0x1e>
 8002bfa:	461a      	mov	r2, r3
 8002bfc:	685b      	ldr	r3, [r3, #4]
 8002bfe:	b10b      	cbz	r3, 8002c04 <_free_r+0x4c>
 8002c00:	42a3      	cmp	r3, r4
 8002c02:	d9fa      	bls.n	8002bfa <_free_r+0x42>
 8002c04:	6811      	ldr	r1, [r2, #0]
 8002c06:	1850      	adds	r0, r2, r1
 8002c08:	42a0      	cmp	r0, r4
 8002c0a:	d10b      	bne.n	8002c24 <_free_r+0x6c>
 8002c0c:	6820      	ldr	r0, [r4, #0]
 8002c0e:	4401      	add	r1, r0
 8002c10:	1850      	adds	r0, r2, r1
 8002c12:	4283      	cmp	r3, r0
 8002c14:	6011      	str	r1, [r2, #0]
 8002c16:	d1e0      	bne.n	8002bda <_free_r+0x22>
 8002c18:	6818      	ldr	r0, [r3, #0]
 8002c1a:	685b      	ldr	r3, [r3, #4]
 8002c1c:	4401      	add	r1, r0
 8002c1e:	6011      	str	r1, [r2, #0]
 8002c20:	6053      	str	r3, [r2, #4]
 8002c22:	e7da      	b.n	8002bda <_free_r+0x22>
 8002c24:	d902      	bls.n	8002c2c <_free_r+0x74>
 8002c26:	230c      	movs	r3, #12
 8002c28:	602b      	str	r3, [r5, #0]
 8002c2a:	e7d6      	b.n	8002bda <_free_r+0x22>
 8002c2c:	6820      	ldr	r0, [r4, #0]
 8002c2e:	1821      	adds	r1, r4, r0
 8002c30:	428b      	cmp	r3, r1
 8002c32:	bf01      	itttt	eq
 8002c34:	6819      	ldreq	r1, [r3, #0]
 8002c36:	685b      	ldreq	r3, [r3, #4]
 8002c38:	1809      	addeq	r1, r1, r0
 8002c3a:	6021      	streq	r1, [r4, #0]
 8002c3c:	6063      	str	r3, [r4, #4]
 8002c3e:	6054      	str	r4, [r2, #4]
 8002c40:	e7cb      	b.n	8002bda <_free_r+0x22>
 8002c42:	bd38      	pop	{r3, r4, r5, pc}
 8002c44:	20000120 	.word	0x20000120

08002c48 <sbrk_aligned>:
 8002c48:	b570      	push	{r4, r5, r6, lr}
 8002c4a:	4e0e      	ldr	r6, [pc, #56]	; (8002c84 <sbrk_aligned+0x3c>)
 8002c4c:	460c      	mov	r4, r1
 8002c4e:	6831      	ldr	r1, [r6, #0]
 8002c50:	4605      	mov	r5, r0
 8002c52:	b911      	cbnz	r1, 8002c5a <sbrk_aligned+0x12>
 8002c54:	f000 f91a 	bl	8002e8c <_sbrk_r>
 8002c58:	6030      	str	r0, [r6, #0]
 8002c5a:	4621      	mov	r1, r4
 8002c5c:	4628      	mov	r0, r5
 8002c5e:	f000 f915 	bl	8002e8c <_sbrk_r>
 8002c62:	1c43      	adds	r3, r0, #1
 8002c64:	d00a      	beq.n	8002c7c <sbrk_aligned+0x34>
 8002c66:	1cc4      	adds	r4, r0, #3
 8002c68:	f024 0403 	bic.w	r4, r4, #3
 8002c6c:	42a0      	cmp	r0, r4
 8002c6e:	d007      	beq.n	8002c80 <sbrk_aligned+0x38>
 8002c70:	1a21      	subs	r1, r4, r0
 8002c72:	4628      	mov	r0, r5
 8002c74:	f000 f90a 	bl	8002e8c <_sbrk_r>
 8002c78:	3001      	adds	r0, #1
 8002c7a:	d101      	bne.n	8002c80 <sbrk_aligned+0x38>
 8002c7c:	f04f 34ff 	mov.w	r4, #4294967295
 8002c80:	4620      	mov	r0, r4
 8002c82:	bd70      	pop	{r4, r5, r6, pc}
 8002c84:	20000124 	.word	0x20000124

08002c88 <_malloc_r>:
 8002c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c8c:	1ccd      	adds	r5, r1, #3
 8002c8e:	f025 0503 	bic.w	r5, r5, #3
 8002c92:	3508      	adds	r5, #8
 8002c94:	2d0c      	cmp	r5, #12
 8002c96:	bf38      	it	cc
 8002c98:	250c      	movcc	r5, #12
 8002c9a:	2d00      	cmp	r5, #0
 8002c9c:	4607      	mov	r7, r0
 8002c9e:	db01      	blt.n	8002ca4 <_malloc_r+0x1c>
 8002ca0:	42a9      	cmp	r1, r5
 8002ca2:	d905      	bls.n	8002cb0 <_malloc_r+0x28>
 8002ca4:	230c      	movs	r3, #12
 8002ca6:	2600      	movs	r6, #0
 8002ca8:	603b      	str	r3, [r7, #0]
 8002caa:	4630      	mov	r0, r6
 8002cac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002cb0:	4e2e      	ldr	r6, [pc, #184]	; (8002d6c <_malloc_r+0xe4>)
 8002cb2:	f000 fbb3 	bl	800341c <__malloc_lock>
 8002cb6:	6833      	ldr	r3, [r6, #0]
 8002cb8:	461c      	mov	r4, r3
 8002cba:	bb34      	cbnz	r4, 8002d0a <_malloc_r+0x82>
 8002cbc:	4629      	mov	r1, r5
 8002cbe:	4638      	mov	r0, r7
 8002cc0:	f7ff ffc2 	bl	8002c48 <sbrk_aligned>
 8002cc4:	1c43      	adds	r3, r0, #1
 8002cc6:	4604      	mov	r4, r0
 8002cc8:	d14d      	bne.n	8002d66 <_malloc_r+0xde>
 8002cca:	6834      	ldr	r4, [r6, #0]
 8002ccc:	4626      	mov	r6, r4
 8002cce:	2e00      	cmp	r6, #0
 8002cd0:	d140      	bne.n	8002d54 <_malloc_r+0xcc>
 8002cd2:	6823      	ldr	r3, [r4, #0]
 8002cd4:	4631      	mov	r1, r6
 8002cd6:	4638      	mov	r0, r7
 8002cd8:	eb04 0803 	add.w	r8, r4, r3
 8002cdc:	f000 f8d6 	bl	8002e8c <_sbrk_r>
 8002ce0:	4580      	cmp	r8, r0
 8002ce2:	d13a      	bne.n	8002d5a <_malloc_r+0xd2>
 8002ce4:	6821      	ldr	r1, [r4, #0]
 8002ce6:	3503      	adds	r5, #3
 8002ce8:	1a6d      	subs	r5, r5, r1
 8002cea:	f025 0503 	bic.w	r5, r5, #3
 8002cee:	3508      	adds	r5, #8
 8002cf0:	2d0c      	cmp	r5, #12
 8002cf2:	bf38      	it	cc
 8002cf4:	250c      	movcc	r5, #12
 8002cf6:	4638      	mov	r0, r7
 8002cf8:	4629      	mov	r1, r5
 8002cfa:	f7ff ffa5 	bl	8002c48 <sbrk_aligned>
 8002cfe:	3001      	adds	r0, #1
 8002d00:	d02b      	beq.n	8002d5a <_malloc_r+0xd2>
 8002d02:	6823      	ldr	r3, [r4, #0]
 8002d04:	442b      	add	r3, r5
 8002d06:	6023      	str	r3, [r4, #0]
 8002d08:	e00e      	b.n	8002d28 <_malloc_r+0xa0>
 8002d0a:	6822      	ldr	r2, [r4, #0]
 8002d0c:	1b52      	subs	r2, r2, r5
 8002d0e:	d41e      	bmi.n	8002d4e <_malloc_r+0xc6>
 8002d10:	2a0b      	cmp	r2, #11
 8002d12:	d916      	bls.n	8002d42 <_malloc_r+0xba>
 8002d14:	1961      	adds	r1, r4, r5
 8002d16:	42a3      	cmp	r3, r4
 8002d18:	6025      	str	r5, [r4, #0]
 8002d1a:	bf18      	it	ne
 8002d1c:	6059      	strne	r1, [r3, #4]
 8002d1e:	6863      	ldr	r3, [r4, #4]
 8002d20:	bf08      	it	eq
 8002d22:	6031      	streq	r1, [r6, #0]
 8002d24:	5162      	str	r2, [r4, r5]
 8002d26:	604b      	str	r3, [r1, #4]
 8002d28:	4638      	mov	r0, r7
 8002d2a:	f104 060b 	add.w	r6, r4, #11
 8002d2e:	f000 fb7b 	bl	8003428 <__malloc_unlock>
 8002d32:	f026 0607 	bic.w	r6, r6, #7
 8002d36:	1d23      	adds	r3, r4, #4
 8002d38:	1af2      	subs	r2, r6, r3
 8002d3a:	d0b6      	beq.n	8002caa <_malloc_r+0x22>
 8002d3c:	1b9b      	subs	r3, r3, r6
 8002d3e:	50a3      	str	r3, [r4, r2]
 8002d40:	e7b3      	b.n	8002caa <_malloc_r+0x22>
 8002d42:	6862      	ldr	r2, [r4, #4]
 8002d44:	42a3      	cmp	r3, r4
 8002d46:	bf0c      	ite	eq
 8002d48:	6032      	streq	r2, [r6, #0]
 8002d4a:	605a      	strne	r2, [r3, #4]
 8002d4c:	e7ec      	b.n	8002d28 <_malloc_r+0xa0>
 8002d4e:	4623      	mov	r3, r4
 8002d50:	6864      	ldr	r4, [r4, #4]
 8002d52:	e7b2      	b.n	8002cba <_malloc_r+0x32>
 8002d54:	4634      	mov	r4, r6
 8002d56:	6876      	ldr	r6, [r6, #4]
 8002d58:	e7b9      	b.n	8002cce <_malloc_r+0x46>
 8002d5a:	230c      	movs	r3, #12
 8002d5c:	4638      	mov	r0, r7
 8002d5e:	603b      	str	r3, [r7, #0]
 8002d60:	f000 fb62 	bl	8003428 <__malloc_unlock>
 8002d64:	e7a1      	b.n	8002caa <_malloc_r+0x22>
 8002d66:	6025      	str	r5, [r4, #0]
 8002d68:	e7de      	b.n	8002d28 <_malloc_r+0xa0>
 8002d6a:	bf00      	nop
 8002d6c:	20000120 	.word	0x20000120

08002d70 <iprintf>:
 8002d70:	b40f      	push	{r0, r1, r2, r3}
 8002d72:	4b0a      	ldr	r3, [pc, #40]	; (8002d9c <iprintf+0x2c>)
 8002d74:	b513      	push	{r0, r1, r4, lr}
 8002d76:	681c      	ldr	r4, [r3, #0]
 8002d78:	b124      	cbz	r4, 8002d84 <iprintf+0x14>
 8002d7a:	69a3      	ldr	r3, [r4, #24]
 8002d7c:	b913      	cbnz	r3, 8002d84 <iprintf+0x14>
 8002d7e:	4620      	mov	r0, r4
 8002d80:	f7ff fe30 	bl	80029e4 <__sinit>
 8002d84:	ab05      	add	r3, sp, #20
 8002d86:	4620      	mov	r0, r4
 8002d88:	9a04      	ldr	r2, [sp, #16]
 8002d8a:	68a1      	ldr	r1, [r4, #8]
 8002d8c:	9301      	str	r3, [sp, #4]
 8002d8e:	f000 fcd5 	bl	800373c <_vfiprintf_r>
 8002d92:	b002      	add	sp, #8
 8002d94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d98:	b004      	add	sp, #16
 8002d9a:	4770      	bx	lr
 8002d9c:	2000000c 	.word	0x2000000c

08002da0 <_puts_r>:
 8002da0:	b570      	push	{r4, r5, r6, lr}
 8002da2:	460e      	mov	r6, r1
 8002da4:	4605      	mov	r5, r0
 8002da6:	b118      	cbz	r0, 8002db0 <_puts_r+0x10>
 8002da8:	6983      	ldr	r3, [r0, #24]
 8002daa:	b90b      	cbnz	r3, 8002db0 <_puts_r+0x10>
 8002dac:	f7ff fe1a 	bl	80029e4 <__sinit>
 8002db0:	69ab      	ldr	r3, [r5, #24]
 8002db2:	68ac      	ldr	r4, [r5, #8]
 8002db4:	b913      	cbnz	r3, 8002dbc <_puts_r+0x1c>
 8002db6:	4628      	mov	r0, r5
 8002db8:	f7ff fe14 	bl	80029e4 <__sinit>
 8002dbc:	4b2c      	ldr	r3, [pc, #176]	; (8002e70 <_puts_r+0xd0>)
 8002dbe:	429c      	cmp	r4, r3
 8002dc0:	d120      	bne.n	8002e04 <_puts_r+0x64>
 8002dc2:	686c      	ldr	r4, [r5, #4]
 8002dc4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002dc6:	07db      	lsls	r3, r3, #31
 8002dc8:	d405      	bmi.n	8002dd6 <_puts_r+0x36>
 8002dca:	89a3      	ldrh	r3, [r4, #12]
 8002dcc:	0598      	lsls	r0, r3, #22
 8002dce:	d402      	bmi.n	8002dd6 <_puts_r+0x36>
 8002dd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002dd2:	f7ff fee6 	bl	8002ba2 <__retarget_lock_acquire_recursive>
 8002dd6:	89a3      	ldrh	r3, [r4, #12]
 8002dd8:	0719      	lsls	r1, r3, #28
 8002dda:	d51d      	bpl.n	8002e18 <_puts_r+0x78>
 8002ddc:	6923      	ldr	r3, [r4, #16]
 8002dde:	b1db      	cbz	r3, 8002e18 <_puts_r+0x78>
 8002de0:	3e01      	subs	r6, #1
 8002de2:	68a3      	ldr	r3, [r4, #8]
 8002de4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002de8:	3b01      	subs	r3, #1
 8002dea:	60a3      	str	r3, [r4, #8]
 8002dec:	bb39      	cbnz	r1, 8002e3e <_puts_r+0x9e>
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	da38      	bge.n	8002e64 <_puts_r+0xc4>
 8002df2:	4622      	mov	r2, r4
 8002df4:	210a      	movs	r1, #10
 8002df6:	4628      	mov	r0, r5
 8002df8:	f000 f9ae 	bl	8003158 <__swbuf_r>
 8002dfc:	3001      	adds	r0, #1
 8002dfe:	d011      	beq.n	8002e24 <_puts_r+0x84>
 8002e00:	250a      	movs	r5, #10
 8002e02:	e011      	b.n	8002e28 <_puts_r+0x88>
 8002e04:	4b1b      	ldr	r3, [pc, #108]	; (8002e74 <_puts_r+0xd4>)
 8002e06:	429c      	cmp	r4, r3
 8002e08:	d101      	bne.n	8002e0e <_puts_r+0x6e>
 8002e0a:	68ac      	ldr	r4, [r5, #8]
 8002e0c:	e7da      	b.n	8002dc4 <_puts_r+0x24>
 8002e0e:	4b1a      	ldr	r3, [pc, #104]	; (8002e78 <_puts_r+0xd8>)
 8002e10:	429c      	cmp	r4, r3
 8002e12:	bf08      	it	eq
 8002e14:	68ec      	ldreq	r4, [r5, #12]
 8002e16:	e7d5      	b.n	8002dc4 <_puts_r+0x24>
 8002e18:	4621      	mov	r1, r4
 8002e1a:	4628      	mov	r0, r5
 8002e1c:	f000 fa00 	bl	8003220 <__swsetup_r>
 8002e20:	2800      	cmp	r0, #0
 8002e22:	d0dd      	beq.n	8002de0 <_puts_r+0x40>
 8002e24:	f04f 35ff 	mov.w	r5, #4294967295
 8002e28:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002e2a:	07da      	lsls	r2, r3, #31
 8002e2c:	d405      	bmi.n	8002e3a <_puts_r+0x9a>
 8002e2e:	89a3      	ldrh	r3, [r4, #12]
 8002e30:	059b      	lsls	r3, r3, #22
 8002e32:	d402      	bmi.n	8002e3a <_puts_r+0x9a>
 8002e34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002e36:	f7ff feb5 	bl	8002ba4 <__retarget_lock_release_recursive>
 8002e3a:	4628      	mov	r0, r5
 8002e3c:	bd70      	pop	{r4, r5, r6, pc}
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	da04      	bge.n	8002e4c <_puts_r+0xac>
 8002e42:	69a2      	ldr	r2, [r4, #24]
 8002e44:	429a      	cmp	r2, r3
 8002e46:	dc06      	bgt.n	8002e56 <_puts_r+0xb6>
 8002e48:	290a      	cmp	r1, #10
 8002e4a:	d004      	beq.n	8002e56 <_puts_r+0xb6>
 8002e4c:	6823      	ldr	r3, [r4, #0]
 8002e4e:	1c5a      	adds	r2, r3, #1
 8002e50:	6022      	str	r2, [r4, #0]
 8002e52:	7019      	strb	r1, [r3, #0]
 8002e54:	e7c5      	b.n	8002de2 <_puts_r+0x42>
 8002e56:	4622      	mov	r2, r4
 8002e58:	4628      	mov	r0, r5
 8002e5a:	f000 f97d 	bl	8003158 <__swbuf_r>
 8002e5e:	3001      	adds	r0, #1
 8002e60:	d1bf      	bne.n	8002de2 <_puts_r+0x42>
 8002e62:	e7df      	b.n	8002e24 <_puts_r+0x84>
 8002e64:	250a      	movs	r5, #10
 8002e66:	6823      	ldr	r3, [r4, #0]
 8002e68:	1c5a      	adds	r2, r3, #1
 8002e6a:	6022      	str	r2, [r4, #0]
 8002e6c:	701d      	strb	r5, [r3, #0]
 8002e6e:	e7db      	b.n	8002e28 <_puts_r+0x88>
 8002e70:	08004c30 	.word	0x08004c30
 8002e74:	08004c50 	.word	0x08004c50
 8002e78:	08004c10 	.word	0x08004c10

08002e7c <puts>:
 8002e7c:	4b02      	ldr	r3, [pc, #8]	; (8002e88 <puts+0xc>)
 8002e7e:	4601      	mov	r1, r0
 8002e80:	6818      	ldr	r0, [r3, #0]
 8002e82:	f7ff bf8d 	b.w	8002da0 <_puts_r>
 8002e86:	bf00      	nop
 8002e88:	2000000c 	.word	0x2000000c

08002e8c <_sbrk_r>:
 8002e8c:	b538      	push	{r3, r4, r5, lr}
 8002e8e:	2300      	movs	r3, #0
 8002e90:	4d05      	ldr	r5, [pc, #20]	; (8002ea8 <_sbrk_r+0x1c>)
 8002e92:	4604      	mov	r4, r0
 8002e94:	4608      	mov	r0, r1
 8002e96:	602b      	str	r3, [r5, #0]
 8002e98:	f7fd fe86 	bl	8000ba8 <_sbrk>
 8002e9c:	1c43      	adds	r3, r0, #1
 8002e9e:	d102      	bne.n	8002ea6 <_sbrk_r+0x1a>
 8002ea0:	682b      	ldr	r3, [r5, #0]
 8002ea2:	b103      	cbz	r3, 8002ea6 <_sbrk_r+0x1a>
 8002ea4:	6023      	str	r3, [r4, #0]
 8002ea6:	bd38      	pop	{r3, r4, r5, pc}
 8002ea8:	20000128 	.word	0x20000128

08002eac <iscanf>:
 8002eac:	b40f      	push	{r0, r1, r2, r3}
 8002eae:	4b0a      	ldr	r3, [pc, #40]	; (8002ed8 <iscanf+0x2c>)
 8002eb0:	b513      	push	{r0, r1, r4, lr}
 8002eb2:	681c      	ldr	r4, [r3, #0]
 8002eb4:	b124      	cbz	r4, 8002ec0 <iscanf+0x14>
 8002eb6:	69a3      	ldr	r3, [r4, #24]
 8002eb8:	b913      	cbnz	r3, 8002ec0 <iscanf+0x14>
 8002eba:	4620      	mov	r0, r4
 8002ebc:	f7ff fd92 	bl	80029e4 <__sinit>
 8002ec0:	ab05      	add	r3, sp, #20
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	9a04      	ldr	r2, [sp, #16]
 8002ec6:	6861      	ldr	r1, [r4, #4]
 8002ec8:	9301      	str	r3, [sp, #4]
 8002eca:	f001 f8a3 	bl	8004014 <_vfiscanf_r>
 8002ece:	b002      	add	sp, #8
 8002ed0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ed4:	b004      	add	sp, #16
 8002ed6:	4770      	bx	lr
 8002ed8:	2000000c 	.word	0x2000000c

08002edc <setvbuf>:
 8002edc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002ee0:	461d      	mov	r5, r3
 8002ee2:	4b5d      	ldr	r3, [pc, #372]	; (8003058 <setvbuf+0x17c>)
 8002ee4:	4604      	mov	r4, r0
 8002ee6:	681f      	ldr	r7, [r3, #0]
 8002ee8:	460e      	mov	r6, r1
 8002eea:	4690      	mov	r8, r2
 8002eec:	b127      	cbz	r7, 8002ef8 <setvbuf+0x1c>
 8002eee:	69bb      	ldr	r3, [r7, #24]
 8002ef0:	b913      	cbnz	r3, 8002ef8 <setvbuf+0x1c>
 8002ef2:	4638      	mov	r0, r7
 8002ef4:	f7ff fd76 	bl	80029e4 <__sinit>
 8002ef8:	4b58      	ldr	r3, [pc, #352]	; (800305c <setvbuf+0x180>)
 8002efa:	429c      	cmp	r4, r3
 8002efc:	d167      	bne.n	8002fce <setvbuf+0xf2>
 8002efe:	687c      	ldr	r4, [r7, #4]
 8002f00:	f1b8 0f02 	cmp.w	r8, #2
 8002f04:	d006      	beq.n	8002f14 <setvbuf+0x38>
 8002f06:	f1b8 0f01 	cmp.w	r8, #1
 8002f0a:	f200 809f 	bhi.w	800304c <setvbuf+0x170>
 8002f0e:	2d00      	cmp	r5, #0
 8002f10:	f2c0 809c 	blt.w	800304c <setvbuf+0x170>
 8002f14:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002f16:	07db      	lsls	r3, r3, #31
 8002f18:	d405      	bmi.n	8002f26 <setvbuf+0x4a>
 8002f1a:	89a3      	ldrh	r3, [r4, #12]
 8002f1c:	0598      	lsls	r0, r3, #22
 8002f1e:	d402      	bmi.n	8002f26 <setvbuf+0x4a>
 8002f20:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002f22:	f7ff fe3e 	bl	8002ba2 <__retarget_lock_acquire_recursive>
 8002f26:	4621      	mov	r1, r4
 8002f28:	4638      	mov	r0, r7
 8002f2a:	f7ff fcb5 	bl	8002898 <_fflush_r>
 8002f2e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002f30:	b141      	cbz	r1, 8002f44 <setvbuf+0x68>
 8002f32:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002f36:	4299      	cmp	r1, r3
 8002f38:	d002      	beq.n	8002f40 <setvbuf+0x64>
 8002f3a:	4638      	mov	r0, r7
 8002f3c:	f7ff fe3c 	bl	8002bb8 <_free_r>
 8002f40:	2300      	movs	r3, #0
 8002f42:	6363      	str	r3, [r4, #52]	; 0x34
 8002f44:	2300      	movs	r3, #0
 8002f46:	61a3      	str	r3, [r4, #24]
 8002f48:	6063      	str	r3, [r4, #4]
 8002f4a:	89a3      	ldrh	r3, [r4, #12]
 8002f4c:	0619      	lsls	r1, r3, #24
 8002f4e:	d503      	bpl.n	8002f58 <setvbuf+0x7c>
 8002f50:	4638      	mov	r0, r7
 8002f52:	6921      	ldr	r1, [r4, #16]
 8002f54:	f7ff fe30 	bl	8002bb8 <_free_r>
 8002f58:	89a3      	ldrh	r3, [r4, #12]
 8002f5a:	f1b8 0f02 	cmp.w	r8, #2
 8002f5e:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 8002f62:	f023 0303 	bic.w	r3, r3, #3
 8002f66:	81a3      	strh	r3, [r4, #12]
 8002f68:	d06c      	beq.n	8003044 <setvbuf+0x168>
 8002f6a:	ab01      	add	r3, sp, #4
 8002f6c:	466a      	mov	r2, sp
 8002f6e:	4621      	mov	r1, r4
 8002f70:	4638      	mov	r0, r7
 8002f72:	f000 f9e5 	bl	8003340 <__swhatbuf_r>
 8002f76:	89a3      	ldrh	r3, [r4, #12]
 8002f78:	4318      	orrs	r0, r3
 8002f7a:	81a0      	strh	r0, [r4, #12]
 8002f7c:	2d00      	cmp	r5, #0
 8002f7e:	d130      	bne.n	8002fe2 <setvbuf+0x106>
 8002f80:	9d00      	ldr	r5, [sp, #0]
 8002f82:	4628      	mov	r0, r5
 8002f84:	f000 fa42 	bl	800340c <malloc>
 8002f88:	4606      	mov	r6, r0
 8002f8a:	2800      	cmp	r0, #0
 8002f8c:	d155      	bne.n	800303a <setvbuf+0x15e>
 8002f8e:	f8dd 9000 	ldr.w	r9, [sp]
 8002f92:	45a9      	cmp	r9, r5
 8002f94:	d14a      	bne.n	800302c <setvbuf+0x150>
 8002f96:	f04f 35ff 	mov.w	r5, #4294967295
 8002f9a:	2200      	movs	r2, #0
 8002f9c:	60a2      	str	r2, [r4, #8]
 8002f9e:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8002fa2:	6022      	str	r2, [r4, #0]
 8002fa4:	6122      	str	r2, [r4, #16]
 8002fa6:	2201      	movs	r2, #1
 8002fa8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002fac:	6162      	str	r2, [r4, #20]
 8002fae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8002fb0:	f043 0302 	orr.w	r3, r3, #2
 8002fb4:	07d2      	lsls	r2, r2, #31
 8002fb6:	81a3      	strh	r3, [r4, #12]
 8002fb8:	d405      	bmi.n	8002fc6 <setvbuf+0xea>
 8002fba:	f413 7f00 	tst.w	r3, #512	; 0x200
 8002fbe:	d102      	bne.n	8002fc6 <setvbuf+0xea>
 8002fc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002fc2:	f7ff fdef 	bl	8002ba4 <__retarget_lock_release_recursive>
 8002fc6:	4628      	mov	r0, r5
 8002fc8:	b003      	add	sp, #12
 8002fca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002fce:	4b24      	ldr	r3, [pc, #144]	; (8003060 <setvbuf+0x184>)
 8002fd0:	429c      	cmp	r4, r3
 8002fd2:	d101      	bne.n	8002fd8 <setvbuf+0xfc>
 8002fd4:	68bc      	ldr	r4, [r7, #8]
 8002fd6:	e793      	b.n	8002f00 <setvbuf+0x24>
 8002fd8:	4b22      	ldr	r3, [pc, #136]	; (8003064 <setvbuf+0x188>)
 8002fda:	429c      	cmp	r4, r3
 8002fdc:	bf08      	it	eq
 8002fde:	68fc      	ldreq	r4, [r7, #12]
 8002fe0:	e78e      	b.n	8002f00 <setvbuf+0x24>
 8002fe2:	2e00      	cmp	r6, #0
 8002fe4:	d0cd      	beq.n	8002f82 <setvbuf+0xa6>
 8002fe6:	69bb      	ldr	r3, [r7, #24]
 8002fe8:	b913      	cbnz	r3, 8002ff0 <setvbuf+0x114>
 8002fea:	4638      	mov	r0, r7
 8002fec:	f7ff fcfa 	bl	80029e4 <__sinit>
 8002ff0:	f1b8 0f01 	cmp.w	r8, #1
 8002ff4:	bf08      	it	eq
 8002ff6:	89a3      	ldrheq	r3, [r4, #12]
 8002ff8:	e9c4 6504 	strd	r6, r5, [r4, #16]
 8002ffc:	bf04      	itt	eq
 8002ffe:	f043 0301 	orreq.w	r3, r3, #1
 8003002:	81a3      	strheq	r3, [r4, #12]
 8003004:	89a2      	ldrh	r2, [r4, #12]
 8003006:	6026      	str	r6, [r4, #0]
 8003008:	f012 0308 	ands.w	r3, r2, #8
 800300c:	d01c      	beq.n	8003048 <setvbuf+0x16c>
 800300e:	07d3      	lsls	r3, r2, #31
 8003010:	bf41      	itttt	mi
 8003012:	2300      	movmi	r3, #0
 8003014:	426d      	negmi	r5, r5
 8003016:	60a3      	strmi	r3, [r4, #8]
 8003018:	61a5      	strmi	r5, [r4, #24]
 800301a:	bf58      	it	pl
 800301c:	60a5      	strpl	r5, [r4, #8]
 800301e:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8003020:	f015 0501 	ands.w	r5, r5, #1
 8003024:	d115      	bne.n	8003052 <setvbuf+0x176>
 8003026:	f412 7f00 	tst.w	r2, #512	; 0x200
 800302a:	e7c8      	b.n	8002fbe <setvbuf+0xe2>
 800302c:	4648      	mov	r0, r9
 800302e:	f000 f9ed 	bl	800340c <malloc>
 8003032:	4606      	mov	r6, r0
 8003034:	2800      	cmp	r0, #0
 8003036:	d0ae      	beq.n	8002f96 <setvbuf+0xba>
 8003038:	464d      	mov	r5, r9
 800303a:	89a3      	ldrh	r3, [r4, #12]
 800303c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003040:	81a3      	strh	r3, [r4, #12]
 8003042:	e7d0      	b.n	8002fe6 <setvbuf+0x10a>
 8003044:	2500      	movs	r5, #0
 8003046:	e7a8      	b.n	8002f9a <setvbuf+0xbe>
 8003048:	60a3      	str	r3, [r4, #8]
 800304a:	e7e8      	b.n	800301e <setvbuf+0x142>
 800304c:	f04f 35ff 	mov.w	r5, #4294967295
 8003050:	e7b9      	b.n	8002fc6 <setvbuf+0xea>
 8003052:	2500      	movs	r5, #0
 8003054:	e7b7      	b.n	8002fc6 <setvbuf+0xea>
 8003056:	bf00      	nop
 8003058:	2000000c 	.word	0x2000000c
 800305c:	08004c30 	.word	0x08004c30
 8003060:	08004c50 	.word	0x08004c50
 8003064:	08004c10 	.word	0x08004c10

08003068 <siprintf>:
 8003068:	b40e      	push	{r1, r2, r3}
 800306a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800306e:	b500      	push	{lr}
 8003070:	b09c      	sub	sp, #112	; 0x70
 8003072:	ab1d      	add	r3, sp, #116	; 0x74
 8003074:	9002      	str	r0, [sp, #8]
 8003076:	9006      	str	r0, [sp, #24]
 8003078:	9107      	str	r1, [sp, #28]
 800307a:	9104      	str	r1, [sp, #16]
 800307c:	4808      	ldr	r0, [pc, #32]	; (80030a0 <siprintf+0x38>)
 800307e:	4909      	ldr	r1, [pc, #36]	; (80030a4 <siprintf+0x3c>)
 8003080:	f853 2b04 	ldr.w	r2, [r3], #4
 8003084:	9105      	str	r1, [sp, #20]
 8003086:	6800      	ldr	r0, [r0, #0]
 8003088:	a902      	add	r1, sp, #8
 800308a:	9301      	str	r3, [sp, #4]
 800308c:	f000 fa2e 	bl	80034ec <_svfiprintf_r>
 8003090:	2200      	movs	r2, #0
 8003092:	9b02      	ldr	r3, [sp, #8]
 8003094:	701a      	strb	r2, [r3, #0]
 8003096:	b01c      	add	sp, #112	; 0x70
 8003098:	f85d eb04 	ldr.w	lr, [sp], #4
 800309c:	b003      	add	sp, #12
 800309e:	4770      	bx	lr
 80030a0:	2000000c 	.word	0x2000000c
 80030a4:	ffff0208 	.word	0xffff0208

080030a8 <__sread>:
 80030a8:	b510      	push	{r4, lr}
 80030aa:	460c      	mov	r4, r1
 80030ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80030b0:	f001 f92a 	bl	8004308 <_read_r>
 80030b4:	2800      	cmp	r0, #0
 80030b6:	bfab      	itete	ge
 80030b8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80030ba:	89a3      	ldrhlt	r3, [r4, #12]
 80030bc:	181b      	addge	r3, r3, r0
 80030be:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80030c2:	bfac      	ite	ge
 80030c4:	6563      	strge	r3, [r4, #84]	; 0x54
 80030c6:	81a3      	strhlt	r3, [r4, #12]
 80030c8:	bd10      	pop	{r4, pc}

080030ca <__swrite>:
 80030ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030ce:	461f      	mov	r7, r3
 80030d0:	898b      	ldrh	r3, [r1, #12]
 80030d2:	4605      	mov	r5, r0
 80030d4:	05db      	lsls	r3, r3, #23
 80030d6:	460c      	mov	r4, r1
 80030d8:	4616      	mov	r6, r2
 80030da:	d505      	bpl.n	80030e8 <__swrite+0x1e>
 80030dc:	2302      	movs	r3, #2
 80030de:	2200      	movs	r2, #0
 80030e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80030e4:	f000 f91a 	bl	800331c <_lseek_r>
 80030e8:	89a3      	ldrh	r3, [r4, #12]
 80030ea:	4632      	mov	r2, r6
 80030ec:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80030f0:	81a3      	strh	r3, [r4, #12]
 80030f2:	4628      	mov	r0, r5
 80030f4:	463b      	mov	r3, r7
 80030f6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80030fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80030fe:	f000 b87d 	b.w	80031fc <_write_r>

08003102 <__sseek>:
 8003102:	b510      	push	{r4, lr}
 8003104:	460c      	mov	r4, r1
 8003106:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800310a:	f000 f907 	bl	800331c <_lseek_r>
 800310e:	1c43      	adds	r3, r0, #1
 8003110:	89a3      	ldrh	r3, [r4, #12]
 8003112:	bf15      	itete	ne
 8003114:	6560      	strne	r0, [r4, #84]	; 0x54
 8003116:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800311a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800311e:	81a3      	strheq	r3, [r4, #12]
 8003120:	bf18      	it	ne
 8003122:	81a3      	strhne	r3, [r4, #12]
 8003124:	bd10      	pop	{r4, pc}

08003126 <__sclose>:
 8003126:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800312a:	f000 b8e7 	b.w	80032fc <_close_r>

0800312e <strncmp>:
 800312e:	4603      	mov	r3, r0
 8003130:	b510      	push	{r4, lr}
 8003132:	b172      	cbz	r2, 8003152 <strncmp+0x24>
 8003134:	3901      	subs	r1, #1
 8003136:	1884      	adds	r4, r0, r2
 8003138:	f813 0b01 	ldrb.w	r0, [r3], #1
 800313c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8003140:	4290      	cmp	r0, r2
 8003142:	d101      	bne.n	8003148 <strncmp+0x1a>
 8003144:	42a3      	cmp	r3, r4
 8003146:	d101      	bne.n	800314c <strncmp+0x1e>
 8003148:	1a80      	subs	r0, r0, r2
 800314a:	bd10      	pop	{r4, pc}
 800314c:	2800      	cmp	r0, #0
 800314e:	d1f3      	bne.n	8003138 <strncmp+0xa>
 8003150:	e7fa      	b.n	8003148 <strncmp+0x1a>
 8003152:	4610      	mov	r0, r2
 8003154:	e7f9      	b.n	800314a <strncmp+0x1c>
	...

08003158 <__swbuf_r>:
 8003158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800315a:	460e      	mov	r6, r1
 800315c:	4614      	mov	r4, r2
 800315e:	4605      	mov	r5, r0
 8003160:	b118      	cbz	r0, 800316a <__swbuf_r+0x12>
 8003162:	6983      	ldr	r3, [r0, #24]
 8003164:	b90b      	cbnz	r3, 800316a <__swbuf_r+0x12>
 8003166:	f7ff fc3d 	bl	80029e4 <__sinit>
 800316a:	4b21      	ldr	r3, [pc, #132]	; (80031f0 <__swbuf_r+0x98>)
 800316c:	429c      	cmp	r4, r3
 800316e:	d12b      	bne.n	80031c8 <__swbuf_r+0x70>
 8003170:	686c      	ldr	r4, [r5, #4]
 8003172:	69a3      	ldr	r3, [r4, #24]
 8003174:	60a3      	str	r3, [r4, #8]
 8003176:	89a3      	ldrh	r3, [r4, #12]
 8003178:	071a      	lsls	r2, r3, #28
 800317a:	d52f      	bpl.n	80031dc <__swbuf_r+0x84>
 800317c:	6923      	ldr	r3, [r4, #16]
 800317e:	b36b      	cbz	r3, 80031dc <__swbuf_r+0x84>
 8003180:	6923      	ldr	r3, [r4, #16]
 8003182:	6820      	ldr	r0, [r4, #0]
 8003184:	b2f6      	uxtb	r6, r6
 8003186:	1ac0      	subs	r0, r0, r3
 8003188:	6963      	ldr	r3, [r4, #20]
 800318a:	4637      	mov	r7, r6
 800318c:	4283      	cmp	r3, r0
 800318e:	dc04      	bgt.n	800319a <__swbuf_r+0x42>
 8003190:	4621      	mov	r1, r4
 8003192:	4628      	mov	r0, r5
 8003194:	f7ff fb80 	bl	8002898 <_fflush_r>
 8003198:	bb30      	cbnz	r0, 80031e8 <__swbuf_r+0x90>
 800319a:	68a3      	ldr	r3, [r4, #8]
 800319c:	3001      	adds	r0, #1
 800319e:	3b01      	subs	r3, #1
 80031a0:	60a3      	str	r3, [r4, #8]
 80031a2:	6823      	ldr	r3, [r4, #0]
 80031a4:	1c5a      	adds	r2, r3, #1
 80031a6:	6022      	str	r2, [r4, #0]
 80031a8:	701e      	strb	r6, [r3, #0]
 80031aa:	6963      	ldr	r3, [r4, #20]
 80031ac:	4283      	cmp	r3, r0
 80031ae:	d004      	beq.n	80031ba <__swbuf_r+0x62>
 80031b0:	89a3      	ldrh	r3, [r4, #12]
 80031b2:	07db      	lsls	r3, r3, #31
 80031b4:	d506      	bpl.n	80031c4 <__swbuf_r+0x6c>
 80031b6:	2e0a      	cmp	r6, #10
 80031b8:	d104      	bne.n	80031c4 <__swbuf_r+0x6c>
 80031ba:	4621      	mov	r1, r4
 80031bc:	4628      	mov	r0, r5
 80031be:	f7ff fb6b 	bl	8002898 <_fflush_r>
 80031c2:	b988      	cbnz	r0, 80031e8 <__swbuf_r+0x90>
 80031c4:	4638      	mov	r0, r7
 80031c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80031c8:	4b0a      	ldr	r3, [pc, #40]	; (80031f4 <__swbuf_r+0x9c>)
 80031ca:	429c      	cmp	r4, r3
 80031cc:	d101      	bne.n	80031d2 <__swbuf_r+0x7a>
 80031ce:	68ac      	ldr	r4, [r5, #8]
 80031d0:	e7cf      	b.n	8003172 <__swbuf_r+0x1a>
 80031d2:	4b09      	ldr	r3, [pc, #36]	; (80031f8 <__swbuf_r+0xa0>)
 80031d4:	429c      	cmp	r4, r3
 80031d6:	bf08      	it	eq
 80031d8:	68ec      	ldreq	r4, [r5, #12]
 80031da:	e7ca      	b.n	8003172 <__swbuf_r+0x1a>
 80031dc:	4621      	mov	r1, r4
 80031de:	4628      	mov	r0, r5
 80031e0:	f000 f81e 	bl	8003220 <__swsetup_r>
 80031e4:	2800      	cmp	r0, #0
 80031e6:	d0cb      	beq.n	8003180 <__swbuf_r+0x28>
 80031e8:	f04f 37ff 	mov.w	r7, #4294967295
 80031ec:	e7ea      	b.n	80031c4 <__swbuf_r+0x6c>
 80031ee:	bf00      	nop
 80031f0:	08004c30 	.word	0x08004c30
 80031f4:	08004c50 	.word	0x08004c50
 80031f8:	08004c10 	.word	0x08004c10

080031fc <_write_r>:
 80031fc:	b538      	push	{r3, r4, r5, lr}
 80031fe:	4604      	mov	r4, r0
 8003200:	4608      	mov	r0, r1
 8003202:	4611      	mov	r1, r2
 8003204:	2200      	movs	r2, #0
 8003206:	4d05      	ldr	r5, [pc, #20]	; (800321c <_write_r+0x20>)
 8003208:	602a      	str	r2, [r5, #0]
 800320a:	461a      	mov	r2, r3
 800320c:	f7fd fc7f 	bl	8000b0e <_write>
 8003210:	1c43      	adds	r3, r0, #1
 8003212:	d102      	bne.n	800321a <_write_r+0x1e>
 8003214:	682b      	ldr	r3, [r5, #0]
 8003216:	b103      	cbz	r3, 800321a <_write_r+0x1e>
 8003218:	6023      	str	r3, [r4, #0]
 800321a:	bd38      	pop	{r3, r4, r5, pc}
 800321c:	20000128 	.word	0x20000128

08003220 <__swsetup_r>:
 8003220:	4b32      	ldr	r3, [pc, #200]	; (80032ec <__swsetup_r+0xcc>)
 8003222:	b570      	push	{r4, r5, r6, lr}
 8003224:	681d      	ldr	r5, [r3, #0]
 8003226:	4606      	mov	r6, r0
 8003228:	460c      	mov	r4, r1
 800322a:	b125      	cbz	r5, 8003236 <__swsetup_r+0x16>
 800322c:	69ab      	ldr	r3, [r5, #24]
 800322e:	b913      	cbnz	r3, 8003236 <__swsetup_r+0x16>
 8003230:	4628      	mov	r0, r5
 8003232:	f7ff fbd7 	bl	80029e4 <__sinit>
 8003236:	4b2e      	ldr	r3, [pc, #184]	; (80032f0 <__swsetup_r+0xd0>)
 8003238:	429c      	cmp	r4, r3
 800323a:	d10f      	bne.n	800325c <__swsetup_r+0x3c>
 800323c:	686c      	ldr	r4, [r5, #4]
 800323e:	89a3      	ldrh	r3, [r4, #12]
 8003240:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003244:	0719      	lsls	r1, r3, #28
 8003246:	d42c      	bmi.n	80032a2 <__swsetup_r+0x82>
 8003248:	06dd      	lsls	r5, r3, #27
 800324a:	d411      	bmi.n	8003270 <__swsetup_r+0x50>
 800324c:	2309      	movs	r3, #9
 800324e:	6033      	str	r3, [r6, #0]
 8003250:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003254:	f04f 30ff 	mov.w	r0, #4294967295
 8003258:	81a3      	strh	r3, [r4, #12]
 800325a:	e03e      	b.n	80032da <__swsetup_r+0xba>
 800325c:	4b25      	ldr	r3, [pc, #148]	; (80032f4 <__swsetup_r+0xd4>)
 800325e:	429c      	cmp	r4, r3
 8003260:	d101      	bne.n	8003266 <__swsetup_r+0x46>
 8003262:	68ac      	ldr	r4, [r5, #8]
 8003264:	e7eb      	b.n	800323e <__swsetup_r+0x1e>
 8003266:	4b24      	ldr	r3, [pc, #144]	; (80032f8 <__swsetup_r+0xd8>)
 8003268:	429c      	cmp	r4, r3
 800326a:	bf08      	it	eq
 800326c:	68ec      	ldreq	r4, [r5, #12]
 800326e:	e7e6      	b.n	800323e <__swsetup_r+0x1e>
 8003270:	0758      	lsls	r0, r3, #29
 8003272:	d512      	bpl.n	800329a <__swsetup_r+0x7a>
 8003274:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003276:	b141      	cbz	r1, 800328a <__swsetup_r+0x6a>
 8003278:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800327c:	4299      	cmp	r1, r3
 800327e:	d002      	beq.n	8003286 <__swsetup_r+0x66>
 8003280:	4630      	mov	r0, r6
 8003282:	f7ff fc99 	bl	8002bb8 <_free_r>
 8003286:	2300      	movs	r3, #0
 8003288:	6363      	str	r3, [r4, #52]	; 0x34
 800328a:	89a3      	ldrh	r3, [r4, #12]
 800328c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003290:	81a3      	strh	r3, [r4, #12]
 8003292:	2300      	movs	r3, #0
 8003294:	6063      	str	r3, [r4, #4]
 8003296:	6923      	ldr	r3, [r4, #16]
 8003298:	6023      	str	r3, [r4, #0]
 800329a:	89a3      	ldrh	r3, [r4, #12]
 800329c:	f043 0308 	orr.w	r3, r3, #8
 80032a0:	81a3      	strh	r3, [r4, #12]
 80032a2:	6923      	ldr	r3, [r4, #16]
 80032a4:	b94b      	cbnz	r3, 80032ba <__swsetup_r+0x9a>
 80032a6:	89a3      	ldrh	r3, [r4, #12]
 80032a8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80032ac:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80032b0:	d003      	beq.n	80032ba <__swsetup_r+0x9a>
 80032b2:	4621      	mov	r1, r4
 80032b4:	4630      	mov	r0, r6
 80032b6:	f000 f869 	bl	800338c <__smakebuf_r>
 80032ba:	89a0      	ldrh	r0, [r4, #12]
 80032bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80032c0:	f010 0301 	ands.w	r3, r0, #1
 80032c4:	d00a      	beq.n	80032dc <__swsetup_r+0xbc>
 80032c6:	2300      	movs	r3, #0
 80032c8:	60a3      	str	r3, [r4, #8]
 80032ca:	6963      	ldr	r3, [r4, #20]
 80032cc:	425b      	negs	r3, r3
 80032ce:	61a3      	str	r3, [r4, #24]
 80032d0:	6923      	ldr	r3, [r4, #16]
 80032d2:	b943      	cbnz	r3, 80032e6 <__swsetup_r+0xc6>
 80032d4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80032d8:	d1ba      	bne.n	8003250 <__swsetup_r+0x30>
 80032da:	bd70      	pop	{r4, r5, r6, pc}
 80032dc:	0781      	lsls	r1, r0, #30
 80032de:	bf58      	it	pl
 80032e0:	6963      	ldrpl	r3, [r4, #20]
 80032e2:	60a3      	str	r3, [r4, #8]
 80032e4:	e7f4      	b.n	80032d0 <__swsetup_r+0xb0>
 80032e6:	2000      	movs	r0, #0
 80032e8:	e7f7      	b.n	80032da <__swsetup_r+0xba>
 80032ea:	bf00      	nop
 80032ec:	2000000c 	.word	0x2000000c
 80032f0:	08004c30 	.word	0x08004c30
 80032f4:	08004c50 	.word	0x08004c50
 80032f8:	08004c10 	.word	0x08004c10

080032fc <_close_r>:
 80032fc:	b538      	push	{r3, r4, r5, lr}
 80032fe:	2300      	movs	r3, #0
 8003300:	4d05      	ldr	r5, [pc, #20]	; (8003318 <_close_r+0x1c>)
 8003302:	4604      	mov	r4, r0
 8003304:	4608      	mov	r0, r1
 8003306:	602b      	str	r3, [r5, #0]
 8003308:	f7fd fc1d 	bl	8000b46 <_close>
 800330c:	1c43      	adds	r3, r0, #1
 800330e:	d102      	bne.n	8003316 <_close_r+0x1a>
 8003310:	682b      	ldr	r3, [r5, #0]
 8003312:	b103      	cbz	r3, 8003316 <_close_r+0x1a>
 8003314:	6023      	str	r3, [r4, #0]
 8003316:	bd38      	pop	{r3, r4, r5, pc}
 8003318:	20000128 	.word	0x20000128

0800331c <_lseek_r>:
 800331c:	b538      	push	{r3, r4, r5, lr}
 800331e:	4604      	mov	r4, r0
 8003320:	4608      	mov	r0, r1
 8003322:	4611      	mov	r1, r2
 8003324:	2200      	movs	r2, #0
 8003326:	4d05      	ldr	r5, [pc, #20]	; (800333c <_lseek_r+0x20>)
 8003328:	602a      	str	r2, [r5, #0]
 800332a:	461a      	mov	r2, r3
 800332c:	f7fd fc2f 	bl	8000b8e <_lseek>
 8003330:	1c43      	adds	r3, r0, #1
 8003332:	d102      	bne.n	800333a <_lseek_r+0x1e>
 8003334:	682b      	ldr	r3, [r5, #0]
 8003336:	b103      	cbz	r3, 800333a <_lseek_r+0x1e>
 8003338:	6023      	str	r3, [r4, #0]
 800333a:	bd38      	pop	{r3, r4, r5, pc}
 800333c:	20000128 	.word	0x20000128

08003340 <__swhatbuf_r>:
 8003340:	b570      	push	{r4, r5, r6, lr}
 8003342:	460e      	mov	r6, r1
 8003344:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003348:	4614      	mov	r4, r2
 800334a:	2900      	cmp	r1, #0
 800334c:	461d      	mov	r5, r3
 800334e:	b096      	sub	sp, #88	; 0x58
 8003350:	da08      	bge.n	8003364 <__swhatbuf_r+0x24>
 8003352:	2200      	movs	r2, #0
 8003354:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003358:	602a      	str	r2, [r5, #0]
 800335a:	061a      	lsls	r2, r3, #24
 800335c:	d410      	bmi.n	8003380 <__swhatbuf_r+0x40>
 800335e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003362:	e00e      	b.n	8003382 <__swhatbuf_r+0x42>
 8003364:	466a      	mov	r2, sp
 8003366:	f001 fa71 	bl	800484c <_fstat_r>
 800336a:	2800      	cmp	r0, #0
 800336c:	dbf1      	blt.n	8003352 <__swhatbuf_r+0x12>
 800336e:	9a01      	ldr	r2, [sp, #4]
 8003370:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003374:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003378:	425a      	negs	r2, r3
 800337a:	415a      	adcs	r2, r3
 800337c:	602a      	str	r2, [r5, #0]
 800337e:	e7ee      	b.n	800335e <__swhatbuf_r+0x1e>
 8003380:	2340      	movs	r3, #64	; 0x40
 8003382:	2000      	movs	r0, #0
 8003384:	6023      	str	r3, [r4, #0]
 8003386:	b016      	add	sp, #88	; 0x58
 8003388:	bd70      	pop	{r4, r5, r6, pc}
	...

0800338c <__smakebuf_r>:
 800338c:	898b      	ldrh	r3, [r1, #12]
 800338e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003390:	079d      	lsls	r5, r3, #30
 8003392:	4606      	mov	r6, r0
 8003394:	460c      	mov	r4, r1
 8003396:	d507      	bpl.n	80033a8 <__smakebuf_r+0x1c>
 8003398:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800339c:	6023      	str	r3, [r4, #0]
 800339e:	6123      	str	r3, [r4, #16]
 80033a0:	2301      	movs	r3, #1
 80033a2:	6163      	str	r3, [r4, #20]
 80033a4:	b002      	add	sp, #8
 80033a6:	bd70      	pop	{r4, r5, r6, pc}
 80033a8:	466a      	mov	r2, sp
 80033aa:	ab01      	add	r3, sp, #4
 80033ac:	f7ff ffc8 	bl	8003340 <__swhatbuf_r>
 80033b0:	9900      	ldr	r1, [sp, #0]
 80033b2:	4605      	mov	r5, r0
 80033b4:	4630      	mov	r0, r6
 80033b6:	f7ff fc67 	bl	8002c88 <_malloc_r>
 80033ba:	b948      	cbnz	r0, 80033d0 <__smakebuf_r+0x44>
 80033bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80033c0:	059a      	lsls	r2, r3, #22
 80033c2:	d4ef      	bmi.n	80033a4 <__smakebuf_r+0x18>
 80033c4:	f023 0303 	bic.w	r3, r3, #3
 80033c8:	f043 0302 	orr.w	r3, r3, #2
 80033cc:	81a3      	strh	r3, [r4, #12]
 80033ce:	e7e3      	b.n	8003398 <__smakebuf_r+0xc>
 80033d0:	4b0d      	ldr	r3, [pc, #52]	; (8003408 <__smakebuf_r+0x7c>)
 80033d2:	62b3      	str	r3, [r6, #40]	; 0x28
 80033d4:	89a3      	ldrh	r3, [r4, #12]
 80033d6:	6020      	str	r0, [r4, #0]
 80033d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80033dc:	81a3      	strh	r3, [r4, #12]
 80033de:	9b00      	ldr	r3, [sp, #0]
 80033e0:	6120      	str	r0, [r4, #16]
 80033e2:	6163      	str	r3, [r4, #20]
 80033e4:	9b01      	ldr	r3, [sp, #4]
 80033e6:	b15b      	cbz	r3, 8003400 <__smakebuf_r+0x74>
 80033e8:	4630      	mov	r0, r6
 80033ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80033ee:	f001 fa3f 	bl	8004870 <_isatty_r>
 80033f2:	b128      	cbz	r0, 8003400 <__smakebuf_r+0x74>
 80033f4:	89a3      	ldrh	r3, [r4, #12]
 80033f6:	f023 0303 	bic.w	r3, r3, #3
 80033fa:	f043 0301 	orr.w	r3, r3, #1
 80033fe:	81a3      	strh	r3, [r4, #12]
 8003400:	89a0      	ldrh	r0, [r4, #12]
 8003402:	4305      	orrs	r5, r0
 8003404:	81a5      	strh	r5, [r4, #12]
 8003406:	e7cd      	b.n	80033a4 <__smakebuf_r+0x18>
 8003408:	0800297d 	.word	0x0800297d

0800340c <malloc>:
 800340c:	4b02      	ldr	r3, [pc, #8]	; (8003418 <malloc+0xc>)
 800340e:	4601      	mov	r1, r0
 8003410:	6818      	ldr	r0, [r3, #0]
 8003412:	f7ff bc39 	b.w	8002c88 <_malloc_r>
 8003416:	bf00      	nop
 8003418:	2000000c 	.word	0x2000000c

0800341c <__malloc_lock>:
 800341c:	4801      	ldr	r0, [pc, #4]	; (8003424 <__malloc_lock+0x8>)
 800341e:	f7ff bbc0 	b.w	8002ba2 <__retarget_lock_acquire_recursive>
 8003422:	bf00      	nop
 8003424:	2000011c 	.word	0x2000011c

08003428 <__malloc_unlock>:
 8003428:	4801      	ldr	r0, [pc, #4]	; (8003430 <__malloc_unlock+0x8>)
 800342a:	f7ff bbbb 	b.w	8002ba4 <__retarget_lock_release_recursive>
 800342e:	bf00      	nop
 8003430:	2000011c 	.word	0x2000011c

08003434 <__ssputs_r>:
 8003434:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003438:	688e      	ldr	r6, [r1, #8]
 800343a:	4682      	mov	sl, r0
 800343c:	429e      	cmp	r6, r3
 800343e:	460c      	mov	r4, r1
 8003440:	4690      	mov	r8, r2
 8003442:	461f      	mov	r7, r3
 8003444:	d838      	bhi.n	80034b8 <__ssputs_r+0x84>
 8003446:	898a      	ldrh	r2, [r1, #12]
 8003448:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800344c:	d032      	beq.n	80034b4 <__ssputs_r+0x80>
 800344e:	6825      	ldr	r5, [r4, #0]
 8003450:	6909      	ldr	r1, [r1, #16]
 8003452:	3301      	adds	r3, #1
 8003454:	eba5 0901 	sub.w	r9, r5, r1
 8003458:	6965      	ldr	r5, [r4, #20]
 800345a:	444b      	add	r3, r9
 800345c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003460:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003464:	106d      	asrs	r5, r5, #1
 8003466:	429d      	cmp	r5, r3
 8003468:	bf38      	it	cc
 800346a:	461d      	movcc	r5, r3
 800346c:	0553      	lsls	r3, r2, #21
 800346e:	d531      	bpl.n	80034d4 <__ssputs_r+0xa0>
 8003470:	4629      	mov	r1, r5
 8003472:	f7ff fc09 	bl	8002c88 <_malloc_r>
 8003476:	4606      	mov	r6, r0
 8003478:	b950      	cbnz	r0, 8003490 <__ssputs_r+0x5c>
 800347a:	230c      	movs	r3, #12
 800347c:	f04f 30ff 	mov.w	r0, #4294967295
 8003480:	f8ca 3000 	str.w	r3, [sl]
 8003484:	89a3      	ldrh	r3, [r4, #12]
 8003486:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800348a:	81a3      	strh	r3, [r4, #12]
 800348c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003490:	464a      	mov	r2, r9
 8003492:	6921      	ldr	r1, [r4, #16]
 8003494:	f001 fa0a 	bl	80048ac <memcpy>
 8003498:	89a3      	ldrh	r3, [r4, #12]
 800349a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800349e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80034a2:	81a3      	strh	r3, [r4, #12]
 80034a4:	6126      	str	r6, [r4, #16]
 80034a6:	444e      	add	r6, r9
 80034a8:	6026      	str	r6, [r4, #0]
 80034aa:	463e      	mov	r6, r7
 80034ac:	6165      	str	r5, [r4, #20]
 80034ae:	eba5 0509 	sub.w	r5, r5, r9
 80034b2:	60a5      	str	r5, [r4, #8]
 80034b4:	42be      	cmp	r6, r7
 80034b6:	d900      	bls.n	80034ba <__ssputs_r+0x86>
 80034b8:	463e      	mov	r6, r7
 80034ba:	4632      	mov	r2, r6
 80034bc:	4641      	mov	r1, r8
 80034be:	6820      	ldr	r0, [r4, #0]
 80034c0:	f001 fa02 	bl	80048c8 <memmove>
 80034c4:	68a3      	ldr	r3, [r4, #8]
 80034c6:	2000      	movs	r0, #0
 80034c8:	1b9b      	subs	r3, r3, r6
 80034ca:	60a3      	str	r3, [r4, #8]
 80034cc:	6823      	ldr	r3, [r4, #0]
 80034ce:	4433      	add	r3, r6
 80034d0:	6023      	str	r3, [r4, #0]
 80034d2:	e7db      	b.n	800348c <__ssputs_r+0x58>
 80034d4:	462a      	mov	r2, r5
 80034d6:	f001 fa11 	bl	80048fc <_realloc_r>
 80034da:	4606      	mov	r6, r0
 80034dc:	2800      	cmp	r0, #0
 80034de:	d1e1      	bne.n	80034a4 <__ssputs_r+0x70>
 80034e0:	4650      	mov	r0, sl
 80034e2:	6921      	ldr	r1, [r4, #16]
 80034e4:	f7ff fb68 	bl	8002bb8 <_free_r>
 80034e8:	e7c7      	b.n	800347a <__ssputs_r+0x46>
	...

080034ec <_svfiprintf_r>:
 80034ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034f0:	4698      	mov	r8, r3
 80034f2:	898b      	ldrh	r3, [r1, #12]
 80034f4:	4607      	mov	r7, r0
 80034f6:	061b      	lsls	r3, r3, #24
 80034f8:	460d      	mov	r5, r1
 80034fa:	4614      	mov	r4, r2
 80034fc:	b09d      	sub	sp, #116	; 0x74
 80034fe:	d50e      	bpl.n	800351e <_svfiprintf_r+0x32>
 8003500:	690b      	ldr	r3, [r1, #16]
 8003502:	b963      	cbnz	r3, 800351e <_svfiprintf_r+0x32>
 8003504:	2140      	movs	r1, #64	; 0x40
 8003506:	f7ff fbbf 	bl	8002c88 <_malloc_r>
 800350a:	6028      	str	r0, [r5, #0]
 800350c:	6128      	str	r0, [r5, #16]
 800350e:	b920      	cbnz	r0, 800351a <_svfiprintf_r+0x2e>
 8003510:	230c      	movs	r3, #12
 8003512:	603b      	str	r3, [r7, #0]
 8003514:	f04f 30ff 	mov.w	r0, #4294967295
 8003518:	e0d1      	b.n	80036be <_svfiprintf_r+0x1d2>
 800351a:	2340      	movs	r3, #64	; 0x40
 800351c:	616b      	str	r3, [r5, #20]
 800351e:	2300      	movs	r3, #0
 8003520:	9309      	str	r3, [sp, #36]	; 0x24
 8003522:	2320      	movs	r3, #32
 8003524:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003528:	2330      	movs	r3, #48	; 0x30
 800352a:	f04f 0901 	mov.w	r9, #1
 800352e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003532:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80036d8 <_svfiprintf_r+0x1ec>
 8003536:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800353a:	4623      	mov	r3, r4
 800353c:	469a      	mov	sl, r3
 800353e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003542:	b10a      	cbz	r2, 8003548 <_svfiprintf_r+0x5c>
 8003544:	2a25      	cmp	r2, #37	; 0x25
 8003546:	d1f9      	bne.n	800353c <_svfiprintf_r+0x50>
 8003548:	ebba 0b04 	subs.w	fp, sl, r4
 800354c:	d00b      	beq.n	8003566 <_svfiprintf_r+0x7a>
 800354e:	465b      	mov	r3, fp
 8003550:	4622      	mov	r2, r4
 8003552:	4629      	mov	r1, r5
 8003554:	4638      	mov	r0, r7
 8003556:	f7ff ff6d 	bl	8003434 <__ssputs_r>
 800355a:	3001      	adds	r0, #1
 800355c:	f000 80aa 	beq.w	80036b4 <_svfiprintf_r+0x1c8>
 8003560:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003562:	445a      	add	r2, fp
 8003564:	9209      	str	r2, [sp, #36]	; 0x24
 8003566:	f89a 3000 	ldrb.w	r3, [sl]
 800356a:	2b00      	cmp	r3, #0
 800356c:	f000 80a2 	beq.w	80036b4 <_svfiprintf_r+0x1c8>
 8003570:	2300      	movs	r3, #0
 8003572:	f04f 32ff 	mov.w	r2, #4294967295
 8003576:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800357a:	f10a 0a01 	add.w	sl, sl, #1
 800357e:	9304      	str	r3, [sp, #16]
 8003580:	9307      	str	r3, [sp, #28]
 8003582:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003586:	931a      	str	r3, [sp, #104]	; 0x68
 8003588:	4654      	mov	r4, sl
 800358a:	2205      	movs	r2, #5
 800358c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003590:	4851      	ldr	r0, [pc, #324]	; (80036d8 <_svfiprintf_r+0x1ec>)
 8003592:	f001 f97d 	bl	8004890 <memchr>
 8003596:	9a04      	ldr	r2, [sp, #16]
 8003598:	b9d8      	cbnz	r0, 80035d2 <_svfiprintf_r+0xe6>
 800359a:	06d0      	lsls	r0, r2, #27
 800359c:	bf44      	itt	mi
 800359e:	2320      	movmi	r3, #32
 80035a0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80035a4:	0711      	lsls	r1, r2, #28
 80035a6:	bf44      	itt	mi
 80035a8:	232b      	movmi	r3, #43	; 0x2b
 80035aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80035ae:	f89a 3000 	ldrb.w	r3, [sl]
 80035b2:	2b2a      	cmp	r3, #42	; 0x2a
 80035b4:	d015      	beq.n	80035e2 <_svfiprintf_r+0xf6>
 80035b6:	4654      	mov	r4, sl
 80035b8:	2000      	movs	r0, #0
 80035ba:	f04f 0c0a 	mov.w	ip, #10
 80035be:	9a07      	ldr	r2, [sp, #28]
 80035c0:	4621      	mov	r1, r4
 80035c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80035c6:	3b30      	subs	r3, #48	; 0x30
 80035c8:	2b09      	cmp	r3, #9
 80035ca:	d94e      	bls.n	800366a <_svfiprintf_r+0x17e>
 80035cc:	b1b0      	cbz	r0, 80035fc <_svfiprintf_r+0x110>
 80035ce:	9207      	str	r2, [sp, #28]
 80035d0:	e014      	b.n	80035fc <_svfiprintf_r+0x110>
 80035d2:	eba0 0308 	sub.w	r3, r0, r8
 80035d6:	fa09 f303 	lsl.w	r3, r9, r3
 80035da:	4313      	orrs	r3, r2
 80035dc:	46a2      	mov	sl, r4
 80035de:	9304      	str	r3, [sp, #16]
 80035e0:	e7d2      	b.n	8003588 <_svfiprintf_r+0x9c>
 80035e2:	9b03      	ldr	r3, [sp, #12]
 80035e4:	1d19      	adds	r1, r3, #4
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	9103      	str	r1, [sp, #12]
 80035ea:	2b00      	cmp	r3, #0
 80035ec:	bfbb      	ittet	lt
 80035ee:	425b      	neglt	r3, r3
 80035f0:	f042 0202 	orrlt.w	r2, r2, #2
 80035f4:	9307      	strge	r3, [sp, #28]
 80035f6:	9307      	strlt	r3, [sp, #28]
 80035f8:	bfb8      	it	lt
 80035fa:	9204      	strlt	r2, [sp, #16]
 80035fc:	7823      	ldrb	r3, [r4, #0]
 80035fe:	2b2e      	cmp	r3, #46	; 0x2e
 8003600:	d10c      	bne.n	800361c <_svfiprintf_r+0x130>
 8003602:	7863      	ldrb	r3, [r4, #1]
 8003604:	2b2a      	cmp	r3, #42	; 0x2a
 8003606:	d135      	bne.n	8003674 <_svfiprintf_r+0x188>
 8003608:	9b03      	ldr	r3, [sp, #12]
 800360a:	3402      	adds	r4, #2
 800360c:	1d1a      	adds	r2, r3, #4
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	9203      	str	r2, [sp, #12]
 8003612:	2b00      	cmp	r3, #0
 8003614:	bfb8      	it	lt
 8003616:	f04f 33ff 	movlt.w	r3, #4294967295
 800361a:	9305      	str	r3, [sp, #20]
 800361c:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 80036dc <_svfiprintf_r+0x1f0>
 8003620:	2203      	movs	r2, #3
 8003622:	4650      	mov	r0, sl
 8003624:	7821      	ldrb	r1, [r4, #0]
 8003626:	f001 f933 	bl	8004890 <memchr>
 800362a:	b140      	cbz	r0, 800363e <_svfiprintf_r+0x152>
 800362c:	2340      	movs	r3, #64	; 0x40
 800362e:	eba0 000a 	sub.w	r0, r0, sl
 8003632:	fa03 f000 	lsl.w	r0, r3, r0
 8003636:	9b04      	ldr	r3, [sp, #16]
 8003638:	3401      	adds	r4, #1
 800363a:	4303      	orrs	r3, r0
 800363c:	9304      	str	r3, [sp, #16]
 800363e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003642:	2206      	movs	r2, #6
 8003644:	4826      	ldr	r0, [pc, #152]	; (80036e0 <_svfiprintf_r+0x1f4>)
 8003646:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800364a:	f001 f921 	bl	8004890 <memchr>
 800364e:	2800      	cmp	r0, #0
 8003650:	d038      	beq.n	80036c4 <_svfiprintf_r+0x1d8>
 8003652:	4b24      	ldr	r3, [pc, #144]	; (80036e4 <_svfiprintf_r+0x1f8>)
 8003654:	bb1b      	cbnz	r3, 800369e <_svfiprintf_r+0x1b2>
 8003656:	9b03      	ldr	r3, [sp, #12]
 8003658:	3307      	adds	r3, #7
 800365a:	f023 0307 	bic.w	r3, r3, #7
 800365e:	3308      	adds	r3, #8
 8003660:	9303      	str	r3, [sp, #12]
 8003662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003664:	4433      	add	r3, r6
 8003666:	9309      	str	r3, [sp, #36]	; 0x24
 8003668:	e767      	b.n	800353a <_svfiprintf_r+0x4e>
 800366a:	460c      	mov	r4, r1
 800366c:	2001      	movs	r0, #1
 800366e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003672:	e7a5      	b.n	80035c0 <_svfiprintf_r+0xd4>
 8003674:	2300      	movs	r3, #0
 8003676:	f04f 0c0a 	mov.w	ip, #10
 800367a:	4619      	mov	r1, r3
 800367c:	3401      	adds	r4, #1
 800367e:	9305      	str	r3, [sp, #20]
 8003680:	4620      	mov	r0, r4
 8003682:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003686:	3a30      	subs	r2, #48	; 0x30
 8003688:	2a09      	cmp	r2, #9
 800368a:	d903      	bls.n	8003694 <_svfiprintf_r+0x1a8>
 800368c:	2b00      	cmp	r3, #0
 800368e:	d0c5      	beq.n	800361c <_svfiprintf_r+0x130>
 8003690:	9105      	str	r1, [sp, #20]
 8003692:	e7c3      	b.n	800361c <_svfiprintf_r+0x130>
 8003694:	4604      	mov	r4, r0
 8003696:	2301      	movs	r3, #1
 8003698:	fb0c 2101 	mla	r1, ip, r1, r2
 800369c:	e7f0      	b.n	8003680 <_svfiprintf_r+0x194>
 800369e:	ab03      	add	r3, sp, #12
 80036a0:	9300      	str	r3, [sp, #0]
 80036a2:	462a      	mov	r2, r5
 80036a4:	4638      	mov	r0, r7
 80036a6:	4b10      	ldr	r3, [pc, #64]	; (80036e8 <_svfiprintf_r+0x1fc>)
 80036a8:	a904      	add	r1, sp, #16
 80036aa:	f3af 8000 	nop.w
 80036ae:	1c42      	adds	r2, r0, #1
 80036b0:	4606      	mov	r6, r0
 80036b2:	d1d6      	bne.n	8003662 <_svfiprintf_r+0x176>
 80036b4:	89ab      	ldrh	r3, [r5, #12]
 80036b6:	065b      	lsls	r3, r3, #25
 80036b8:	f53f af2c 	bmi.w	8003514 <_svfiprintf_r+0x28>
 80036bc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80036be:	b01d      	add	sp, #116	; 0x74
 80036c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036c4:	ab03      	add	r3, sp, #12
 80036c6:	9300      	str	r3, [sp, #0]
 80036c8:	462a      	mov	r2, r5
 80036ca:	4638      	mov	r0, r7
 80036cc:	4b06      	ldr	r3, [pc, #24]	; (80036e8 <_svfiprintf_r+0x1fc>)
 80036ce:	a904      	add	r1, sp, #16
 80036d0:	f000 f9d4 	bl	8003a7c <_printf_i>
 80036d4:	e7eb      	b.n	80036ae <_svfiprintf_r+0x1c2>
 80036d6:	bf00      	nop
 80036d8:	08004c74 	.word	0x08004c74
 80036dc:	08004c7a 	.word	0x08004c7a
 80036e0:	08004c7e 	.word	0x08004c7e
 80036e4:	00000000 	.word	0x00000000
 80036e8:	08003435 	.word	0x08003435

080036ec <__sfputc_r>:
 80036ec:	6893      	ldr	r3, [r2, #8]
 80036ee:	b410      	push	{r4}
 80036f0:	3b01      	subs	r3, #1
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	6093      	str	r3, [r2, #8]
 80036f6:	da07      	bge.n	8003708 <__sfputc_r+0x1c>
 80036f8:	6994      	ldr	r4, [r2, #24]
 80036fa:	42a3      	cmp	r3, r4
 80036fc:	db01      	blt.n	8003702 <__sfputc_r+0x16>
 80036fe:	290a      	cmp	r1, #10
 8003700:	d102      	bne.n	8003708 <__sfputc_r+0x1c>
 8003702:	bc10      	pop	{r4}
 8003704:	f7ff bd28 	b.w	8003158 <__swbuf_r>
 8003708:	6813      	ldr	r3, [r2, #0]
 800370a:	1c58      	adds	r0, r3, #1
 800370c:	6010      	str	r0, [r2, #0]
 800370e:	7019      	strb	r1, [r3, #0]
 8003710:	4608      	mov	r0, r1
 8003712:	bc10      	pop	{r4}
 8003714:	4770      	bx	lr

08003716 <__sfputs_r>:
 8003716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003718:	4606      	mov	r6, r0
 800371a:	460f      	mov	r7, r1
 800371c:	4614      	mov	r4, r2
 800371e:	18d5      	adds	r5, r2, r3
 8003720:	42ac      	cmp	r4, r5
 8003722:	d101      	bne.n	8003728 <__sfputs_r+0x12>
 8003724:	2000      	movs	r0, #0
 8003726:	e007      	b.n	8003738 <__sfputs_r+0x22>
 8003728:	463a      	mov	r2, r7
 800372a:	4630      	mov	r0, r6
 800372c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003730:	f7ff ffdc 	bl	80036ec <__sfputc_r>
 8003734:	1c43      	adds	r3, r0, #1
 8003736:	d1f3      	bne.n	8003720 <__sfputs_r+0xa>
 8003738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800373c <_vfiprintf_r>:
 800373c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003740:	460d      	mov	r5, r1
 8003742:	4614      	mov	r4, r2
 8003744:	4698      	mov	r8, r3
 8003746:	4606      	mov	r6, r0
 8003748:	b09d      	sub	sp, #116	; 0x74
 800374a:	b118      	cbz	r0, 8003754 <_vfiprintf_r+0x18>
 800374c:	6983      	ldr	r3, [r0, #24]
 800374e:	b90b      	cbnz	r3, 8003754 <_vfiprintf_r+0x18>
 8003750:	f7ff f948 	bl	80029e4 <__sinit>
 8003754:	4b89      	ldr	r3, [pc, #548]	; (800397c <_vfiprintf_r+0x240>)
 8003756:	429d      	cmp	r5, r3
 8003758:	d11b      	bne.n	8003792 <_vfiprintf_r+0x56>
 800375a:	6875      	ldr	r5, [r6, #4]
 800375c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800375e:	07d9      	lsls	r1, r3, #31
 8003760:	d405      	bmi.n	800376e <_vfiprintf_r+0x32>
 8003762:	89ab      	ldrh	r3, [r5, #12]
 8003764:	059a      	lsls	r2, r3, #22
 8003766:	d402      	bmi.n	800376e <_vfiprintf_r+0x32>
 8003768:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800376a:	f7ff fa1a 	bl	8002ba2 <__retarget_lock_acquire_recursive>
 800376e:	89ab      	ldrh	r3, [r5, #12]
 8003770:	071b      	lsls	r3, r3, #28
 8003772:	d501      	bpl.n	8003778 <_vfiprintf_r+0x3c>
 8003774:	692b      	ldr	r3, [r5, #16]
 8003776:	b9eb      	cbnz	r3, 80037b4 <_vfiprintf_r+0x78>
 8003778:	4629      	mov	r1, r5
 800377a:	4630      	mov	r0, r6
 800377c:	f7ff fd50 	bl	8003220 <__swsetup_r>
 8003780:	b1c0      	cbz	r0, 80037b4 <_vfiprintf_r+0x78>
 8003782:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003784:	07dc      	lsls	r4, r3, #31
 8003786:	d50e      	bpl.n	80037a6 <_vfiprintf_r+0x6a>
 8003788:	f04f 30ff 	mov.w	r0, #4294967295
 800378c:	b01d      	add	sp, #116	; 0x74
 800378e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003792:	4b7b      	ldr	r3, [pc, #492]	; (8003980 <_vfiprintf_r+0x244>)
 8003794:	429d      	cmp	r5, r3
 8003796:	d101      	bne.n	800379c <_vfiprintf_r+0x60>
 8003798:	68b5      	ldr	r5, [r6, #8]
 800379a:	e7df      	b.n	800375c <_vfiprintf_r+0x20>
 800379c:	4b79      	ldr	r3, [pc, #484]	; (8003984 <_vfiprintf_r+0x248>)
 800379e:	429d      	cmp	r5, r3
 80037a0:	bf08      	it	eq
 80037a2:	68f5      	ldreq	r5, [r6, #12]
 80037a4:	e7da      	b.n	800375c <_vfiprintf_r+0x20>
 80037a6:	89ab      	ldrh	r3, [r5, #12]
 80037a8:	0598      	lsls	r0, r3, #22
 80037aa:	d4ed      	bmi.n	8003788 <_vfiprintf_r+0x4c>
 80037ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80037ae:	f7ff f9f9 	bl	8002ba4 <__retarget_lock_release_recursive>
 80037b2:	e7e9      	b.n	8003788 <_vfiprintf_r+0x4c>
 80037b4:	2300      	movs	r3, #0
 80037b6:	9309      	str	r3, [sp, #36]	; 0x24
 80037b8:	2320      	movs	r3, #32
 80037ba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80037be:	2330      	movs	r3, #48	; 0x30
 80037c0:	f04f 0901 	mov.w	r9, #1
 80037c4:	f8cd 800c 	str.w	r8, [sp, #12]
 80037c8:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8003988 <_vfiprintf_r+0x24c>
 80037cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80037d0:	4623      	mov	r3, r4
 80037d2:	469a      	mov	sl, r3
 80037d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80037d8:	b10a      	cbz	r2, 80037de <_vfiprintf_r+0xa2>
 80037da:	2a25      	cmp	r2, #37	; 0x25
 80037dc:	d1f9      	bne.n	80037d2 <_vfiprintf_r+0x96>
 80037de:	ebba 0b04 	subs.w	fp, sl, r4
 80037e2:	d00b      	beq.n	80037fc <_vfiprintf_r+0xc0>
 80037e4:	465b      	mov	r3, fp
 80037e6:	4622      	mov	r2, r4
 80037e8:	4629      	mov	r1, r5
 80037ea:	4630      	mov	r0, r6
 80037ec:	f7ff ff93 	bl	8003716 <__sfputs_r>
 80037f0:	3001      	adds	r0, #1
 80037f2:	f000 80aa 	beq.w	800394a <_vfiprintf_r+0x20e>
 80037f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80037f8:	445a      	add	r2, fp
 80037fa:	9209      	str	r2, [sp, #36]	; 0x24
 80037fc:	f89a 3000 	ldrb.w	r3, [sl]
 8003800:	2b00      	cmp	r3, #0
 8003802:	f000 80a2 	beq.w	800394a <_vfiprintf_r+0x20e>
 8003806:	2300      	movs	r3, #0
 8003808:	f04f 32ff 	mov.w	r2, #4294967295
 800380c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003810:	f10a 0a01 	add.w	sl, sl, #1
 8003814:	9304      	str	r3, [sp, #16]
 8003816:	9307      	str	r3, [sp, #28]
 8003818:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800381c:	931a      	str	r3, [sp, #104]	; 0x68
 800381e:	4654      	mov	r4, sl
 8003820:	2205      	movs	r2, #5
 8003822:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003826:	4858      	ldr	r0, [pc, #352]	; (8003988 <_vfiprintf_r+0x24c>)
 8003828:	f001 f832 	bl	8004890 <memchr>
 800382c:	9a04      	ldr	r2, [sp, #16]
 800382e:	b9d8      	cbnz	r0, 8003868 <_vfiprintf_r+0x12c>
 8003830:	06d1      	lsls	r1, r2, #27
 8003832:	bf44      	itt	mi
 8003834:	2320      	movmi	r3, #32
 8003836:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800383a:	0713      	lsls	r3, r2, #28
 800383c:	bf44      	itt	mi
 800383e:	232b      	movmi	r3, #43	; 0x2b
 8003840:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003844:	f89a 3000 	ldrb.w	r3, [sl]
 8003848:	2b2a      	cmp	r3, #42	; 0x2a
 800384a:	d015      	beq.n	8003878 <_vfiprintf_r+0x13c>
 800384c:	4654      	mov	r4, sl
 800384e:	2000      	movs	r0, #0
 8003850:	f04f 0c0a 	mov.w	ip, #10
 8003854:	9a07      	ldr	r2, [sp, #28]
 8003856:	4621      	mov	r1, r4
 8003858:	f811 3b01 	ldrb.w	r3, [r1], #1
 800385c:	3b30      	subs	r3, #48	; 0x30
 800385e:	2b09      	cmp	r3, #9
 8003860:	d94e      	bls.n	8003900 <_vfiprintf_r+0x1c4>
 8003862:	b1b0      	cbz	r0, 8003892 <_vfiprintf_r+0x156>
 8003864:	9207      	str	r2, [sp, #28]
 8003866:	e014      	b.n	8003892 <_vfiprintf_r+0x156>
 8003868:	eba0 0308 	sub.w	r3, r0, r8
 800386c:	fa09 f303 	lsl.w	r3, r9, r3
 8003870:	4313      	orrs	r3, r2
 8003872:	46a2      	mov	sl, r4
 8003874:	9304      	str	r3, [sp, #16]
 8003876:	e7d2      	b.n	800381e <_vfiprintf_r+0xe2>
 8003878:	9b03      	ldr	r3, [sp, #12]
 800387a:	1d19      	adds	r1, r3, #4
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	9103      	str	r1, [sp, #12]
 8003880:	2b00      	cmp	r3, #0
 8003882:	bfbb      	ittet	lt
 8003884:	425b      	neglt	r3, r3
 8003886:	f042 0202 	orrlt.w	r2, r2, #2
 800388a:	9307      	strge	r3, [sp, #28]
 800388c:	9307      	strlt	r3, [sp, #28]
 800388e:	bfb8      	it	lt
 8003890:	9204      	strlt	r2, [sp, #16]
 8003892:	7823      	ldrb	r3, [r4, #0]
 8003894:	2b2e      	cmp	r3, #46	; 0x2e
 8003896:	d10c      	bne.n	80038b2 <_vfiprintf_r+0x176>
 8003898:	7863      	ldrb	r3, [r4, #1]
 800389a:	2b2a      	cmp	r3, #42	; 0x2a
 800389c:	d135      	bne.n	800390a <_vfiprintf_r+0x1ce>
 800389e:	9b03      	ldr	r3, [sp, #12]
 80038a0:	3402      	adds	r4, #2
 80038a2:	1d1a      	adds	r2, r3, #4
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	9203      	str	r2, [sp, #12]
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	bfb8      	it	lt
 80038ac:	f04f 33ff 	movlt.w	r3, #4294967295
 80038b0:	9305      	str	r3, [sp, #20]
 80038b2:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800398c <_vfiprintf_r+0x250>
 80038b6:	2203      	movs	r2, #3
 80038b8:	4650      	mov	r0, sl
 80038ba:	7821      	ldrb	r1, [r4, #0]
 80038bc:	f000 ffe8 	bl	8004890 <memchr>
 80038c0:	b140      	cbz	r0, 80038d4 <_vfiprintf_r+0x198>
 80038c2:	2340      	movs	r3, #64	; 0x40
 80038c4:	eba0 000a 	sub.w	r0, r0, sl
 80038c8:	fa03 f000 	lsl.w	r0, r3, r0
 80038cc:	9b04      	ldr	r3, [sp, #16]
 80038ce:	3401      	adds	r4, #1
 80038d0:	4303      	orrs	r3, r0
 80038d2:	9304      	str	r3, [sp, #16]
 80038d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038d8:	2206      	movs	r2, #6
 80038da:	482d      	ldr	r0, [pc, #180]	; (8003990 <_vfiprintf_r+0x254>)
 80038dc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80038e0:	f000 ffd6 	bl	8004890 <memchr>
 80038e4:	2800      	cmp	r0, #0
 80038e6:	d03f      	beq.n	8003968 <_vfiprintf_r+0x22c>
 80038e8:	4b2a      	ldr	r3, [pc, #168]	; (8003994 <_vfiprintf_r+0x258>)
 80038ea:	bb1b      	cbnz	r3, 8003934 <_vfiprintf_r+0x1f8>
 80038ec:	9b03      	ldr	r3, [sp, #12]
 80038ee:	3307      	adds	r3, #7
 80038f0:	f023 0307 	bic.w	r3, r3, #7
 80038f4:	3308      	adds	r3, #8
 80038f6:	9303      	str	r3, [sp, #12]
 80038f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80038fa:	443b      	add	r3, r7
 80038fc:	9309      	str	r3, [sp, #36]	; 0x24
 80038fe:	e767      	b.n	80037d0 <_vfiprintf_r+0x94>
 8003900:	460c      	mov	r4, r1
 8003902:	2001      	movs	r0, #1
 8003904:	fb0c 3202 	mla	r2, ip, r2, r3
 8003908:	e7a5      	b.n	8003856 <_vfiprintf_r+0x11a>
 800390a:	2300      	movs	r3, #0
 800390c:	f04f 0c0a 	mov.w	ip, #10
 8003910:	4619      	mov	r1, r3
 8003912:	3401      	adds	r4, #1
 8003914:	9305      	str	r3, [sp, #20]
 8003916:	4620      	mov	r0, r4
 8003918:	f810 2b01 	ldrb.w	r2, [r0], #1
 800391c:	3a30      	subs	r2, #48	; 0x30
 800391e:	2a09      	cmp	r2, #9
 8003920:	d903      	bls.n	800392a <_vfiprintf_r+0x1ee>
 8003922:	2b00      	cmp	r3, #0
 8003924:	d0c5      	beq.n	80038b2 <_vfiprintf_r+0x176>
 8003926:	9105      	str	r1, [sp, #20]
 8003928:	e7c3      	b.n	80038b2 <_vfiprintf_r+0x176>
 800392a:	4604      	mov	r4, r0
 800392c:	2301      	movs	r3, #1
 800392e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003932:	e7f0      	b.n	8003916 <_vfiprintf_r+0x1da>
 8003934:	ab03      	add	r3, sp, #12
 8003936:	9300      	str	r3, [sp, #0]
 8003938:	462a      	mov	r2, r5
 800393a:	4630      	mov	r0, r6
 800393c:	4b16      	ldr	r3, [pc, #88]	; (8003998 <_vfiprintf_r+0x25c>)
 800393e:	a904      	add	r1, sp, #16
 8003940:	f3af 8000 	nop.w
 8003944:	4607      	mov	r7, r0
 8003946:	1c78      	adds	r0, r7, #1
 8003948:	d1d6      	bne.n	80038f8 <_vfiprintf_r+0x1bc>
 800394a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800394c:	07d9      	lsls	r1, r3, #31
 800394e:	d405      	bmi.n	800395c <_vfiprintf_r+0x220>
 8003950:	89ab      	ldrh	r3, [r5, #12]
 8003952:	059a      	lsls	r2, r3, #22
 8003954:	d402      	bmi.n	800395c <_vfiprintf_r+0x220>
 8003956:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003958:	f7ff f924 	bl	8002ba4 <__retarget_lock_release_recursive>
 800395c:	89ab      	ldrh	r3, [r5, #12]
 800395e:	065b      	lsls	r3, r3, #25
 8003960:	f53f af12 	bmi.w	8003788 <_vfiprintf_r+0x4c>
 8003964:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003966:	e711      	b.n	800378c <_vfiprintf_r+0x50>
 8003968:	ab03      	add	r3, sp, #12
 800396a:	9300      	str	r3, [sp, #0]
 800396c:	462a      	mov	r2, r5
 800396e:	4630      	mov	r0, r6
 8003970:	4b09      	ldr	r3, [pc, #36]	; (8003998 <_vfiprintf_r+0x25c>)
 8003972:	a904      	add	r1, sp, #16
 8003974:	f000 f882 	bl	8003a7c <_printf_i>
 8003978:	e7e4      	b.n	8003944 <_vfiprintf_r+0x208>
 800397a:	bf00      	nop
 800397c:	08004c30 	.word	0x08004c30
 8003980:	08004c50 	.word	0x08004c50
 8003984:	08004c10 	.word	0x08004c10
 8003988:	08004c74 	.word	0x08004c74
 800398c:	08004c7a 	.word	0x08004c7a
 8003990:	08004c7e 	.word	0x08004c7e
 8003994:	00000000 	.word	0x00000000
 8003998:	08003717 	.word	0x08003717

0800399c <_printf_common>:
 800399c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039a0:	4616      	mov	r6, r2
 80039a2:	4699      	mov	r9, r3
 80039a4:	688a      	ldr	r2, [r1, #8]
 80039a6:	690b      	ldr	r3, [r1, #16]
 80039a8:	4607      	mov	r7, r0
 80039aa:	4293      	cmp	r3, r2
 80039ac:	bfb8      	it	lt
 80039ae:	4613      	movlt	r3, r2
 80039b0:	6033      	str	r3, [r6, #0]
 80039b2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80039b6:	460c      	mov	r4, r1
 80039b8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80039bc:	b10a      	cbz	r2, 80039c2 <_printf_common+0x26>
 80039be:	3301      	adds	r3, #1
 80039c0:	6033      	str	r3, [r6, #0]
 80039c2:	6823      	ldr	r3, [r4, #0]
 80039c4:	0699      	lsls	r1, r3, #26
 80039c6:	bf42      	ittt	mi
 80039c8:	6833      	ldrmi	r3, [r6, #0]
 80039ca:	3302      	addmi	r3, #2
 80039cc:	6033      	strmi	r3, [r6, #0]
 80039ce:	6825      	ldr	r5, [r4, #0]
 80039d0:	f015 0506 	ands.w	r5, r5, #6
 80039d4:	d106      	bne.n	80039e4 <_printf_common+0x48>
 80039d6:	f104 0a19 	add.w	sl, r4, #25
 80039da:	68e3      	ldr	r3, [r4, #12]
 80039dc:	6832      	ldr	r2, [r6, #0]
 80039de:	1a9b      	subs	r3, r3, r2
 80039e0:	42ab      	cmp	r3, r5
 80039e2:	dc28      	bgt.n	8003a36 <_printf_common+0x9a>
 80039e4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80039e8:	1e13      	subs	r3, r2, #0
 80039ea:	6822      	ldr	r2, [r4, #0]
 80039ec:	bf18      	it	ne
 80039ee:	2301      	movne	r3, #1
 80039f0:	0692      	lsls	r2, r2, #26
 80039f2:	d42d      	bmi.n	8003a50 <_printf_common+0xb4>
 80039f4:	4649      	mov	r1, r9
 80039f6:	4638      	mov	r0, r7
 80039f8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80039fc:	47c0      	blx	r8
 80039fe:	3001      	adds	r0, #1
 8003a00:	d020      	beq.n	8003a44 <_printf_common+0xa8>
 8003a02:	6823      	ldr	r3, [r4, #0]
 8003a04:	68e5      	ldr	r5, [r4, #12]
 8003a06:	f003 0306 	and.w	r3, r3, #6
 8003a0a:	2b04      	cmp	r3, #4
 8003a0c:	bf18      	it	ne
 8003a0e:	2500      	movne	r5, #0
 8003a10:	6832      	ldr	r2, [r6, #0]
 8003a12:	f04f 0600 	mov.w	r6, #0
 8003a16:	68a3      	ldr	r3, [r4, #8]
 8003a18:	bf08      	it	eq
 8003a1a:	1aad      	subeq	r5, r5, r2
 8003a1c:	6922      	ldr	r2, [r4, #16]
 8003a1e:	bf08      	it	eq
 8003a20:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003a24:	4293      	cmp	r3, r2
 8003a26:	bfc4      	itt	gt
 8003a28:	1a9b      	subgt	r3, r3, r2
 8003a2a:	18ed      	addgt	r5, r5, r3
 8003a2c:	341a      	adds	r4, #26
 8003a2e:	42b5      	cmp	r5, r6
 8003a30:	d11a      	bne.n	8003a68 <_printf_common+0xcc>
 8003a32:	2000      	movs	r0, #0
 8003a34:	e008      	b.n	8003a48 <_printf_common+0xac>
 8003a36:	2301      	movs	r3, #1
 8003a38:	4652      	mov	r2, sl
 8003a3a:	4649      	mov	r1, r9
 8003a3c:	4638      	mov	r0, r7
 8003a3e:	47c0      	blx	r8
 8003a40:	3001      	adds	r0, #1
 8003a42:	d103      	bne.n	8003a4c <_printf_common+0xb0>
 8003a44:	f04f 30ff 	mov.w	r0, #4294967295
 8003a48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a4c:	3501      	adds	r5, #1
 8003a4e:	e7c4      	b.n	80039da <_printf_common+0x3e>
 8003a50:	2030      	movs	r0, #48	; 0x30
 8003a52:	18e1      	adds	r1, r4, r3
 8003a54:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003a58:	1c5a      	adds	r2, r3, #1
 8003a5a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003a5e:	4422      	add	r2, r4
 8003a60:	3302      	adds	r3, #2
 8003a62:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003a66:	e7c5      	b.n	80039f4 <_printf_common+0x58>
 8003a68:	2301      	movs	r3, #1
 8003a6a:	4622      	mov	r2, r4
 8003a6c:	4649      	mov	r1, r9
 8003a6e:	4638      	mov	r0, r7
 8003a70:	47c0      	blx	r8
 8003a72:	3001      	adds	r0, #1
 8003a74:	d0e6      	beq.n	8003a44 <_printf_common+0xa8>
 8003a76:	3601      	adds	r6, #1
 8003a78:	e7d9      	b.n	8003a2e <_printf_common+0x92>
	...

08003a7c <_printf_i>:
 8003a7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003a80:	7e0f      	ldrb	r7, [r1, #24]
 8003a82:	4691      	mov	r9, r2
 8003a84:	2f78      	cmp	r7, #120	; 0x78
 8003a86:	4680      	mov	r8, r0
 8003a88:	460c      	mov	r4, r1
 8003a8a:	469a      	mov	sl, r3
 8003a8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003a8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003a92:	d807      	bhi.n	8003aa4 <_printf_i+0x28>
 8003a94:	2f62      	cmp	r7, #98	; 0x62
 8003a96:	d80a      	bhi.n	8003aae <_printf_i+0x32>
 8003a98:	2f00      	cmp	r7, #0
 8003a9a:	f000 80d9 	beq.w	8003c50 <_printf_i+0x1d4>
 8003a9e:	2f58      	cmp	r7, #88	; 0x58
 8003aa0:	f000 80a4 	beq.w	8003bec <_printf_i+0x170>
 8003aa4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003aa8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003aac:	e03a      	b.n	8003b24 <_printf_i+0xa8>
 8003aae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003ab2:	2b15      	cmp	r3, #21
 8003ab4:	d8f6      	bhi.n	8003aa4 <_printf_i+0x28>
 8003ab6:	a101      	add	r1, pc, #4	; (adr r1, 8003abc <_printf_i+0x40>)
 8003ab8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003abc:	08003b15 	.word	0x08003b15
 8003ac0:	08003b29 	.word	0x08003b29
 8003ac4:	08003aa5 	.word	0x08003aa5
 8003ac8:	08003aa5 	.word	0x08003aa5
 8003acc:	08003aa5 	.word	0x08003aa5
 8003ad0:	08003aa5 	.word	0x08003aa5
 8003ad4:	08003b29 	.word	0x08003b29
 8003ad8:	08003aa5 	.word	0x08003aa5
 8003adc:	08003aa5 	.word	0x08003aa5
 8003ae0:	08003aa5 	.word	0x08003aa5
 8003ae4:	08003aa5 	.word	0x08003aa5
 8003ae8:	08003c37 	.word	0x08003c37
 8003aec:	08003b59 	.word	0x08003b59
 8003af0:	08003c19 	.word	0x08003c19
 8003af4:	08003aa5 	.word	0x08003aa5
 8003af8:	08003aa5 	.word	0x08003aa5
 8003afc:	08003c59 	.word	0x08003c59
 8003b00:	08003aa5 	.word	0x08003aa5
 8003b04:	08003b59 	.word	0x08003b59
 8003b08:	08003aa5 	.word	0x08003aa5
 8003b0c:	08003aa5 	.word	0x08003aa5
 8003b10:	08003c21 	.word	0x08003c21
 8003b14:	682b      	ldr	r3, [r5, #0]
 8003b16:	1d1a      	adds	r2, r3, #4
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	602a      	str	r2, [r5, #0]
 8003b1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003b20:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003b24:	2301      	movs	r3, #1
 8003b26:	e0a4      	b.n	8003c72 <_printf_i+0x1f6>
 8003b28:	6820      	ldr	r0, [r4, #0]
 8003b2a:	6829      	ldr	r1, [r5, #0]
 8003b2c:	0606      	lsls	r6, r0, #24
 8003b2e:	f101 0304 	add.w	r3, r1, #4
 8003b32:	d50a      	bpl.n	8003b4a <_printf_i+0xce>
 8003b34:	680e      	ldr	r6, [r1, #0]
 8003b36:	602b      	str	r3, [r5, #0]
 8003b38:	2e00      	cmp	r6, #0
 8003b3a:	da03      	bge.n	8003b44 <_printf_i+0xc8>
 8003b3c:	232d      	movs	r3, #45	; 0x2d
 8003b3e:	4276      	negs	r6, r6
 8003b40:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003b44:	230a      	movs	r3, #10
 8003b46:	485e      	ldr	r0, [pc, #376]	; (8003cc0 <_printf_i+0x244>)
 8003b48:	e019      	b.n	8003b7e <_printf_i+0x102>
 8003b4a:	680e      	ldr	r6, [r1, #0]
 8003b4c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003b50:	602b      	str	r3, [r5, #0]
 8003b52:	bf18      	it	ne
 8003b54:	b236      	sxthne	r6, r6
 8003b56:	e7ef      	b.n	8003b38 <_printf_i+0xbc>
 8003b58:	682b      	ldr	r3, [r5, #0]
 8003b5a:	6820      	ldr	r0, [r4, #0]
 8003b5c:	1d19      	adds	r1, r3, #4
 8003b5e:	6029      	str	r1, [r5, #0]
 8003b60:	0601      	lsls	r1, r0, #24
 8003b62:	d501      	bpl.n	8003b68 <_printf_i+0xec>
 8003b64:	681e      	ldr	r6, [r3, #0]
 8003b66:	e002      	b.n	8003b6e <_printf_i+0xf2>
 8003b68:	0646      	lsls	r6, r0, #25
 8003b6a:	d5fb      	bpl.n	8003b64 <_printf_i+0xe8>
 8003b6c:	881e      	ldrh	r6, [r3, #0]
 8003b6e:	2f6f      	cmp	r7, #111	; 0x6f
 8003b70:	bf0c      	ite	eq
 8003b72:	2308      	moveq	r3, #8
 8003b74:	230a      	movne	r3, #10
 8003b76:	4852      	ldr	r0, [pc, #328]	; (8003cc0 <_printf_i+0x244>)
 8003b78:	2100      	movs	r1, #0
 8003b7a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003b7e:	6865      	ldr	r5, [r4, #4]
 8003b80:	2d00      	cmp	r5, #0
 8003b82:	bfa8      	it	ge
 8003b84:	6821      	ldrge	r1, [r4, #0]
 8003b86:	60a5      	str	r5, [r4, #8]
 8003b88:	bfa4      	itt	ge
 8003b8a:	f021 0104 	bicge.w	r1, r1, #4
 8003b8e:	6021      	strge	r1, [r4, #0]
 8003b90:	b90e      	cbnz	r6, 8003b96 <_printf_i+0x11a>
 8003b92:	2d00      	cmp	r5, #0
 8003b94:	d04d      	beq.n	8003c32 <_printf_i+0x1b6>
 8003b96:	4615      	mov	r5, r2
 8003b98:	fbb6 f1f3 	udiv	r1, r6, r3
 8003b9c:	fb03 6711 	mls	r7, r3, r1, r6
 8003ba0:	5dc7      	ldrb	r7, [r0, r7]
 8003ba2:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003ba6:	4637      	mov	r7, r6
 8003ba8:	42bb      	cmp	r3, r7
 8003baa:	460e      	mov	r6, r1
 8003bac:	d9f4      	bls.n	8003b98 <_printf_i+0x11c>
 8003bae:	2b08      	cmp	r3, #8
 8003bb0:	d10b      	bne.n	8003bca <_printf_i+0x14e>
 8003bb2:	6823      	ldr	r3, [r4, #0]
 8003bb4:	07de      	lsls	r6, r3, #31
 8003bb6:	d508      	bpl.n	8003bca <_printf_i+0x14e>
 8003bb8:	6923      	ldr	r3, [r4, #16]
 8003bba:	6861      	ldr	r1, [r4, #4]
 8003bbc:	4299      	cmp	r1, r3
 8003bbe:	bfde      	ittt	le
 8003bc0:	2330      	movle	r3, #48	; 0x30
 8003bc2:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003bc6:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003bca:	1b52      	subs	r2, r2, r5
 8003bcc:	6122      	str	r2, [r4, #16]
 8003bce:	464b      	mov	r3, r9
 8003bd0:	4621      	mov	r1, r4
 8003bd2:	4640      	mov	r0, r8
 8003bd4:	f8cd a000 	str.w	sl, [sp]
 8003bd8:	aa03      	add	r2, sp, #12
 8003bda:	f7ff fedf 	bl	800399c <_printf_common>
 8003bde:	3001      	adds	r0, #1
 8003be0:	d14c      	bne.n	8003c7c <_printf_i+0x200>
 8003be2:	f04f 30ff 	mov.w	r0, #4294967295
 8003be6:	b004      	add	sp, #16
 8003be8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003bec:	4834      	ldr	r0, [pc, #208]	; (8003cc0 <_printf_i+0x244>)
 8003bee:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003bf2:	6829      	ldr	r1, [r5, #0]
 8003bf4:	6823      	ldr	r3, [r4, #0]
 8003bf6:	f851 6b04 	ldr.w	r6, [r1], #4
 8003bfa:	6029      	str	r1, [r5, #0]
 8003bfc:	061d      	lsls	r5, r3, #24
 8003bfe:	d514      	bpl.n	8003c2a <_printf_i+0x1ae>
 8003c00:	07df      	lsls	r7, r3, #31
 8003c02:	bf44      	itt	mi
 8003c04:	f043 0320 	orrmi.w	r3, r3, #32
 8003c08:	6023      	strmi	r3, [r4, #0]
 8003c0a:	b91e      	cbnz	r6, 8003c14 <_printf_i+0x198>
 8003c0c:	6823      	ldr	r3, [r4, #0]
 8003c0e:	f023 0320 	bic.w	r3, r3, #32
 8003c12:	6023      	str	r3, [r4, #0]
 8003c14:	2310      	movs	r3, #16
 8003c16:	e7af      	b.n	8003b78 <_printf_i+0xfc>
 8003c18:	6823      	ldr	r3, [r4, #0]
 8003c1a:	f043 0320 	orr.w	r3, r3, #32
 8003c1e:	6023      	str	r3, [r4, #0]
 8003c20:	2378      	movs	r3, #120	; 0x78
 8003c22:	4828      	ldr	r0, [pc, #160]	; (8003cc4 <_printf_i+0x248>)
 8003c24:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003c28:	e7e3      	b.n	8003bf2 <_printf_i+0x176>
 8003c2a:	0659      	lsls	r1, r3, #25
 8003c2c:	bf48      	it	mi
 8003c2e:	b2b6      	uxthmi	r6, r6
 8003c30:	e7e6      	b.n	8003c00 <_printf_i+0x184>
 8003c32:	4615      	mov	r5, r2
 8003c34:	e7bb      	b.n	8003bae <_printf_i+0x132>
 8003c36:	682b      	ldr	r3, [r5, #0]
 8003c38:	6826      	ldr	r6, [r4, #0]
 8003c3a:	1d18      	adds	r0, r3, #4
 8003c3c:	6961      	ldr	r1, [r4, #20]
 8003c3e:	6028      	str	r0, [r5, #0]
 8003c40:	0635      	lsls	r5, r6, #24
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	d501      	bpl.n	8003c4a <_printf_i+0x1ce>
 8003c46:	6019      	str	r1, [r3, #0]
 8003c48:	e002      	b.n	8003c50 <_printf_i+0x1d4>
 8003c4a:	0670      	lsls	r0, r6, #25
 8003c4c:	d5fb      	bpl.n	8003c46 <_printf_i+0x1ca>
 8003c4e:	8019      	strh	r1, [r3, #0]
 8003c50:	2300      	movs	r3, #0
 8003c52:	4615      	mov	r5, r2
 8003c54:	6123      	str	r3, [r4, #16]
 8003c56:	e7ba      	b.n	8003bce <_printf_i+0x152>
 8003c58:	682b      	ldr	r3, [r5, #0]
 8003c5a:	2100      	movs	r1, #0
 8003c5c:	1d1a      	adds	r2, r3, #4
 8003c5e:	602a      	str	r2, [r5, #0]
 8003c60:	681d      	ldr	r5, [r3, #0]
 8003c62:	6862      	ldr	r2, [r4, #4]
 8003c64:	4628      	mov	r0, r5
 8003c66:	f000 fe13 	bl	8004890 <memchr>
 8003c6a:	b108      	cbz	r0, 8003c70 <_printf_i+0x1f4>
 8003c6c:	1b40      	subs	r0, r0, r5
 8003c6e:	6060      	str	r0, [r4, #4]
 8003c70:	6863      	ldr	r3, [r4, #4]
 8003c72:	6123      	str	r3, [r4, #16]
 8003c74:	2300      	movs	r3, #0
 8003c76:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003c7a:	e7a8      	b.n	8003bce <_printf_i+0x152>
 8003c7c:	462a      	mov	r2, r5
 8003c7e:	4649      	mov	r1, r9
 8003c80:	4640      	mov	r0, r8
 8003c82:	6923      	ldr	r3, [r4, #16]
 8003c84:	47d0      	blx	sl
 8003c86:	3001      	adds	r0, #1
 8003c88:	d0ab      	beq.n	8003be2 <_printf_i+0x166>
 8003c8a:	6823      	ldr	r3, [r4, #0]
 8003c8c:	079b      	lsls	r3, r3, #30
 8003c8e:	d413      	bmi.n	8003cb8 <_printf_i+0x23c>
 8003c90:	68e0      	ldr	r0, [r4, #12]
 8003c92:	9b03      	ldr	r3, [sp, #12]
 8003c94:	4298      	cmp	r0, r3
 8003c96:	bfb8      	it	lt
 8003c98:	4618      	movlt	r0, r3
 8003c9a:	e7a4      	b.n	8003be6 <_printf_i+0x16a>
 8003c9c:	2301      	movs	r3, #1
 8003c9e:	4632      	mov	r2, r6
 8003ca0:	4649      	mov	r1, r9
 8003ca2:	4640      	mov	r0, r8
 8003ca4:	47d0      	blx	sl
 8003ca6:	3001      	adds	r0, #1
 8003ca8:	d09b      	beq.n	8003be2 <_printf_i+0x166>
 8003caa:	3501      	adds	r5, #1
 8003cac:	68e3      	ldr	r3, [r4, #12]
 8003cae:	9903      	ldr	r1, [sp, #12]
 8003cb0:	1a5b      	subs	r3, r3, r1
 8003cb2:	42ab      	cmp	r3, r5
 8003cb4:	dcf2      	bgt.n	8003c9c <_printf_i+0x220>
 8003cb6:	e7eb      	b.n	8003c90 <_printf_i+0x214>
 8003cb8:	2500      	movs	r5, #0
 8003cba:	f104 0619 	add.w	r6, r4, #25
 8003cbe:	e7f5      	b.n	8003cac <_printf_i+0x230>
 8003cc0:	08004c85 	.word	0x08004c85
 8003cc4:	08004c96 	.word	0x08004c96

08003cc8 <__svfiscanf_r>:
 8003cc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ccc:	461d      	mov	r5, r3
 8003cce:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8003cd0:	4606      	mov	r6, r0
 8003cd2:	07df      	lsls	r7, r3, #31
 8003cd4:	460c      	mov	r4, r1
 8003cd6:	4692      	mov	sl, r2
 8003cd8:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 8003cdc:	d405      	bmi.n	8003cea <__svfiscanf_r+0x22>
 8003cde:	898b      	ldrh	r3, [r1, #12]
 8003ce0:	0598      	lsls	r0, r3, #22
 8003ce2:	d402      	bmi.n	8003cea <__svfiscanf_r+0x22>
 8003ce4:	6d88      	ldr	r0, [r1, #88]	; 0x58
 8003ce6:	f7fe ff5c 	bl	8002ba2 <__retarget_lock_acquire_recursive>
 8003cea:	2300      	movs	r3, #0
 8003cec:	e9cd 3344 	strd	r3, r3, [sp, #272]	; 0x110
 8003cf0:	4ba6      	ldr	r3, [pc, #664]	; (8003f8c <__svfiscanf_r+0x2c4>)
 8003cf2:	f10d 0804 	add.w	r8, sp, #4
 8003cf6:	93a0      	str	r3, [sp, #640]	; 0x280
 8003cf8:	4ba5      	ldr	r3, [pc, #660]	; (8003f90 <__svfiscanf_r+0x2c8>)
 8003cfa:	4fa6      	ldr	r7, [pc, #664]	; (8003f94 <__svfiscanf_r+0x2cc>)
 8003cfc:	f8df 9298 	ldr.w	r9, [pc, #664]	; 8003f98 <__svfiscanf_r+0x2d0>
 8003d00:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8003d04:	93a1      	str	r3, [sp, #644]	; 0x284
 8003d06:	9500      	str	r5, [sp, #0]
 8003d08:	f89a 3000 	ldrb.w	r3, [sl]
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	f000 8173 	beq.w	8003ff8 <__svfiscanf_r+0x330>
 8003d12:	5dd9      	ldrb	r1, [r3, r7]
 8003d14:	f10a 0501 	add.w	r5, sl, #1
 8003d18:	f011 0108 	ands.w	r1, r1, #8
 8003d1c:	d019      	beq.n	8003d52 <__svfiscanf_r+0x8a>
 8003d1e:	6863      	ldr	r3, [r4, #4]
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	dd0f      	ble.n	8003d44 <__svfiscanf_r+0x7c>
 8003d24:	6823      	ldr	r3, [r4, #0]
 8003d26:	781a      	ldrb	r2, [r3, #0]
 8003d28:	5cba      	ldrb	r2, [r7, r2]
 8003d2a:	0711      	lsls	r1, r2, #28
 8003d2c:	d401      	bmi.n	8003d32 <__svfiscanf_r+0x6a>
 8003d2e:	46aa      	mov	sl, r5
 8003d30:	e7ea      	b.n	8003d08 <__svfiscanf_r+0x40>
 8003d32:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8003d34:	3301      	adds	r3, #1
 8003d36:	3201      	adds	r2, #1
 8003d38:	9245      	str	r2, [sp, #276]	; 0x114
 8003d3a:	6862      	ldr	r2, [r4, #4]
 8003d3c:	6023      	str	r3, [r4, #0]
 8003d3e:	3a01      	subs	r2, #1
 8003d40:	6062      	str	r2, [r4, #4]
 8003d42:	e7ec      	b.n	8003d1e <__svfiscanf_r+0x56>
 8003d44:	4621      	mov	r1, r4
 8003d46:	4630      	mov	r0, r6
 8003d48:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8003d4a:	4798      	blx	r3
 8003d4c:	2800      	cmp	r0, #0
 8003d4e:	d0e9      	beq.n	8003d24 <__svfiscanf_r+0x5c>
 8003d50:	e7ed      	b.n	8003d2e <__svfiscanf_r+0x66>
 8003d52:	2b25      	cmp	r3, #37	; 0x25
 8003d54:	d012      	beq.n	8003d7c <__svfiscanf_r+0xb4>
 8003d56:	469a      	mov	sl, r3
 8003d58:	6863      	ldr	r3, [r4, #4]
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	f340 8095 	ble.w	8003e8a <__svfiscanf_r+0x1c2>
 8003d60:	6822      	ldr	r2, [r4, #0]
 8003d62:	7813      	ldrb	r3, [r2, #0]
 8003d64:	4553      	cmp	r3, sl
 8003d66:	f040 8147 	bne.w	8003ff8 <__svfiscanf_r+0x330>
 8003d6a:	6863      	ldr	r3, [r4, #4]
 8003d6c:	3201      	adds	r2, #1
 8003d6e:	3b01      	subs	r3, #1
 8003d70:	6063      	str	r3, [r4, #4]
 8003d72:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8003d74:	6022      	str	r2, [r4, #0]
 8003d76:	3301      	adds	r3, #1
 8003d78:	9345      	str	r3, [sp, #276]	; 0x114
 8003d7a:	e7d8      	b.n	8003d2e <__svfiscanf_r+0x66>
 8003d7c:	9141      	str	r1, [sp, #260]	; 0x104
 8003d7e:	9143      	str	r1, [sp, #268]	; 0x10c
 8003d80:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8003d84:	220a      	movs	r2, #10
 8003d86:	2b2a      	cmp	r3, #42	; 0x2a
 8003d88:	bf02      	ittt	eq
 8003d8a:	2310      	moveq	r3, #16
 8003d8c:	f10a 0502 	addeq.w	r5, sl, #2
 8003d90:	9341      	streq	r3, [sp, #260]	; 0x104
 8003d92:	46aa      	mov	sl, r5
 8003d94:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8003d98:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8003d9c:	2b09      	cmp	r3, #9
 8003d9e:	d91e      	bls.n	8003dde <__svfiscanf_r+0x116>
 8003da0:	2203      	movs	r2, #3
 8003da2:	487d      	ldr	r0, [pc, #500]	; (8003f98 <__svfiscanf_r+0x2d0>)
 8003da4:	f000 fd74 	bl	8004890 <memchr>
 8003da8:	b140      	cbz	r0, 8003dbc <__svfiscanf_r+0xf4>
 8003daa:	2301      	movs	r3, #1
 8003dac:	4655      	mov	r5, sl
 8003dae:	eba0 0009 	sub.w	r0, r0, r9
 8003db2:	fa03 f000 	lsl.w	r0, r3, r0
 8003db6:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8003db8:	4318      	orrs	r0, r3
 8003dba:	9041      	str	r0, [sp, #260]	; 0x104
 8003dbc:	f815 3b01 	ldrb.w	r3, [r5], #1
 8003dc0:	2b78      	cmp	r3, #120	; 0x78
 8003dc2:	d807      	bhi.n	8003dd4 <__svfiscanf_r+0x10c>
 8003dc4:	2b57      	cmp	r3, #87	; 0x57
 8003dc6:	d811      	bhi.n	8003dec <__svfiscanf_r+0x124>
 8003dc8:	2b25      	cmp	r3, #37	; 0x25
 8003dca:	d0c4      	beq.n	8003d56 <__svfiscanf_r+0x8e>
 8003dcc:	d858      	bhi.n	8003e80 <__svfiscanf_r+0x1b8>
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	f000 80c8 	beq.w	8003f64 <__svfiscanf_r+0x29c>
 8003dd4:	2303      	movs	r3, #3
 8003dd6:	9347      	str	r3, [sp, #284]	; 0x11c
 8003dd8:	230a      	movs	r3, #10
 8003dda:	9342      	str	r3, [sp, #264]	; 0x108
 8003ddc:	e07c      	b.n	8003ed8 <__svfiscanf_r+0x210>
 8003dde:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8003de0:	4655      	mov	r5, sl
 8003de2:	fb02 1103 	mla	r1, r2, r3, r1
 8003de6:	3930      	subs	r1, #48	; 0x30
 8003de8:	9143      	str	r1, [sp, #268]	; 0x10c
 8003dea:	e7d2      	b.n	8003d92 <__svfiscanf_r+0xca>
 8003dec:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8003df0:	2a20      	cmp	r2, #32
 8003df2:	d8ef      	bhi.n	8003dd4 <__svfiscanf_r+0x10c>
 8003df4:	a101      	add	r1, pc, #4	; (adr r1, 8003dfc <__svfiscanf_r+0x134>)
 8003df6:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003dfa:	bf00      	nop
 8003dfc:	08003ec3 	.word	0x08003ec3
 8003e00:	08003dd5 	.word	0x08003dd5
 8003e04:	08003dd5 	.word	0x08003dd5
 8003e08:	08003f21 	.word	0x08003f21
 8003e0c:	08003dd5 	.word	0x08003dd5
 8003e10:	08003dd5 	.word	0x08003dd5
 8003e14:	08003dd5 	.word	0x08003dd5
 8003e18:	08003dd5 	.word	0x08003dd5
 8003e1c:	08003dd5 	.word	0x08003dd5
 8003e20:	08003dd5 	.word	0x08003dd5
 8003e24:	08003dd5 	.word	0x08003dd5
 8003e28:	08003f37 	.word	0x08003f37
 8003e2c:	08003f0d 	.word	0x08003f0d
 8003e30:	08003e87 	.word	0x08003e87
 8003e34:	08003e87 	.word	0x08003e87
 8003e38:	08003e87 	.word	0x08003e87
 8003e3c:	08003dd5 	.word	0x08003dd5
 8003e40:	08003f11 	.word	0x08003f11
 8003e44:	08003dd5 	.word	0x08003dd5
 8003e48:	08003dd5 	.word	0x08003dd5
 8003e4c:	08003dd5 	.word	0x08003dd5
 8003e50:	08003dd5 	.word	0x08003dd5
 8003e54:	08003f47 	.word	0x08003f47
 8003e58:	08003f19 	.word	0x08003f19
 8003e5c:	08003ebb 	.word	0x08003ebb
 8003e60:	08003dd5 	.word	0x08003dd5
 8003e64:	08003dd5 	.word	0x08003dd5
 8003e68:	08003f43 	.word	0x08003f43
 8003e6c:	08003dd5 	.word	0x08003dd5
 8003e70:	08003f0d 	.word	0x08003f0d
 8003e74:	08003dd5 	.word	0x08003dd5
 8003e78:	08003dd5 	.word	0x08003dd5
 8003e7c:	08003ec3 	.word	0x08003ec3
 8003e80:	3b45      	subs	r3, #69	; 0x45
 8003e82:	2b02      	cmp	r3, #2
 8003e84:	d8a6      	bhi.n	8003dd4 <__svfiscanf_r+0x10c>
 8003e86:	2305      	movs	r3, #5
 8003e88:	e025      	b.n	8003ed6 <__svfiscanf_r+0x20e>
 8003e8a:	4621      	mov	r1, r4
 8003e8c:	4630      	mov	r0, r6
 8003e8e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8003e90:	4798      	blx	r3
 8003e92:	2800      	cmp	r0, #0
 8003e94:	f43f af64 	beq.w	8003d60 <__svfiscanf_r+0x98>
 8003e98:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003e9a:	07da      	lsls	r2, r3, #31
 8003e9c:	f140 80a4 	bpl.w	8003fe8 <__svfiscanf_r+0x320>
 8003ea0:	9844      	ldr	r0, [sp, #272]	; 0x110
 8003ea2:	2800      	cmp	r0, #0
 8003ea4:	d067      	beq.n	8003f76 <__svfiscanf_r+0x2ae>
 8003ea6:	89a3      	ldrh	r3, [r4, #12]
 8003ea8:	f013 0f40 	tst.w	r3, #64	; 0x40
 8003eac:	bf18      	it	ne
 8003eae:	f04f 30ff 	movne.w	r0, #4294967295
 8003eb2:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 8003eb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003eba:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8003ebc:	f042 0220 	orr.w	r2, r2, #32
 8003ec0:	9241      	str	r2, [sp, #260]	; 0x104
 8003ec2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8003ec4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003ec8:	9241      	str	r2, [sp, #260]	; 0x104
 8003eca:	2210      	movs	r2, #16
 8003ecc:	2b6f      	cmp	r3, #111	; 0x6f
 8003ece:	bf34      	ite	cc
 8003ed0:	2303      	movcc	r3, #3
 8003ed2:	2304      	movcs	r3, #4
 8003ed4:	9242      	str	r2, [sp, #264]	; 0x108
 8003ed6:	9347      	str	r3, [sp, #284]	; 0x11c
 8003ed8:	6863      	ldr	r3, [r4, #4]
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	dd4e      	ble.n	8003f7c <__svfiscanf_r+0x2b4>
 8003ede:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8003ee0:	065b      	lsls	r3, r3, #25
 8003ee2:	d404      	bmi.n	8003eee <__svfiscanf_r+0x226>
 8003ee4:	6823      	ldr	r3, [r4, #0]
 8003ee6:	781a      	ldrb	r2, [r3, #0]
 8003ee8:	5cba      	ldrb	r2, [r7, r2]
 8003eea:	0710      	lsls	r0, r2, #28
 8003eec:	d456      	bmi.n	8003f9c <__svfiscanf_r+0x2d4>
 8003eee:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8003ef0:	2b02      	cmp	r3, #2
 8003ef2:	dc65      	bgt.n	8003fc0 <__svfiscanf_r+0x2f8>
 8003ef4:	466b      	mov	r3, sp
 8003ef6:	4622      	mov	r2, r4
 8003ef8:	4630      	mov	r0, r6
 8003efa:	a941      	add	r1, sp, #260	; 0x104
 8003efc:	f000 f8b2 	bl	8004064 <_scanf_chars>
 8003f00:	2801      	cmp	r0, #1
 8003f02:	d079      	beq.n	8003ff8 <__svfiscanf_r+0x330>
 8003f04:	2802      	cmp	r0, #2
 8003f06:	f47f af12 	bne.w	8003d2e <__svfiscanf_r+0x66>
 8003f0a:	e7c5      	b.n	8003e98 <__svfiscanf_r+0x1d0>
 8003f0c:	220a      	movs	r2, #10
 8003f0e:	e7dd      	b.n	8003ecc <__svfiscanf_r+0x204>
 8003f10:	2300      	movs	r3, #0
 8003f12:	9342      	str	r3, [sp, #264]	; 0x108
 8003f14:	2303      	movs	r3, #3
 8003f16:	e7de      	b.n	8003ed6 <__svfiscanf_r+0x20e>
 8003f18:	2308      	movs	r3, #8
 8003f1a:	9342      	str	r3, [sp, #264]	; 0x108
 8003f1c:	2304      	movs	r3, #4
 8003f1e:	e7da      	b.n	8003ed6 <__svfiscanf_r+0x20e>
 8003f20:	4629      	mov	r1, r5
 8003f22:	4640      	mov	r0, r8
 8003f24:	f000 fa98 	bl	8004458 <__sccl>
 8003f28:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8003f2a:	4605      	mov	r5, r0
 8003f2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003f30:	9341      	str	r3, [sp, #260]	; 0x104
 8003f32:	2301      	movs	r3, #1
 8003f34:	e7cf      	b.n	8003ed6 <__svfiscanf_r+0x20e>
 8003f36:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8003f38:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003f3c:	9341      	str	r3, [sp, #260]	; 0x104
 8003f3e:	2300      	movs	r3, #0
 8003f40:	e7c9      	b.n	8003ed6 <__svfiscanf_r+0x20e>
 8003f42:	2302      	movs	r3, #2
 8003f44:	e7c7      	b.n	8003ed6 <__svfiscanf_r+0x20e>
 8003f46:	9841      	ldr	r0, [sp, #260]	; 0x104
 8003f48:	06c3      	lsls	r3, r0, #27
 8003f4a:	f53f aef0 	bmi.w	8003d2e <__svfiscanf_r+0x66>
 8003f4e:	9b00      	ldr	r3, [sp, #0]
 8003f50:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8003f52:	1d19      	adds	r1, r3, #4
 8003f54:	9100      	str	r1, [sp, #0]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	f010 0f01 	tst.w	r0, #1
 8003f5c:	bf14      	ite	ne
 8003f5e:	801a      	strhne	r2, [r3, #0]
 8003f60:	601a      	streq	r2, [r3, #0]
 8003f62:	e6e4      	b.n	8003d2e <__svfiscanf_r+0x66>
 8003f64:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003f66:	07d8      	lsls	r0, r3, #31
 8003f68:	d405      	bmi.n	8003f76 <__svfiscanf_r+0x2ae>
 8003f6a:	89a3      	ldrh	r3, [r4, #12]
 8003f6c:	0599      	lsls	r1, r3, #22
 8003f6e:	d402      	bmi.n	8003f76 <__svfiscanf_r+0x2ae>
 8003f70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003f72:	f7fe fe17 	bl	8002ba4 <__retarget_lock_release_recursive>
 8003f76:	f04f 30ff 	mov.w	r0, #4294967295
 8003f7a:	e79a      	b.n	8003eb2 <__svfiscanf_r+0x1ea>
 8003f7c:	4621      	mov	r1, r4
 8003f7e:	4630      	mov	r0, r6
 8003f80:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8003f82:	4798      	blx	r3
 8003f84:	2800      	cmp	r0, #0
 8003f86:	d0aa      	beq.n	8003ede <__svfiscanf_r+0x216>
 8003f88:	e786      	b.n	8003e98 <__svfiscanf_r+0x1d0>
 8003f8a:	bf00      	nop
 8003f8c:	0800471d 	.word	0x0800471d
 8003f90:	08004341 	.word	0x08004341
 8003f94:	08004cc3 	.word	0x08004cc3
 8003f98:	08004c7a 	.word	0x08004c7a
 8003f9c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8003f9e:	3201      	adds	r2, #1
 8003fa0:	9245      	str	r2, [sp, #276]	; 0x114
 8003fa2:	6862      	ldr	r2, [r4, #4]
 8003fa4:	3a01      	subs	r2, #1
 8003fa6:	2a00      	cmp	r2, #0
 8003fa8:	6062      	str	r2, [r4, #4]
 8003faa:	dd02      	ble.n	8003fb2 <__svfiscanf_r+0x2ea>
 8003fac:	3301      	adds	r3, #1
 8003fae:	6023      	str	r3, [r4, #0]
 8003fb0:	e798      	b.n	8003ee4 <__svfiscanf_r+0x21c>
 8003fb2:	4621      	mov	r1, r4
 8003fb4:	4630      	mov	r0, r6
 8003fb6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8003fb8:	4798      	blx	r3
 8003fba:	2800      	cmp	r0, #0
 8003fbc:	d092      	beq.n	8003ee4 <__svfiscanf_r+0x21c>
 8003fbe:	e76b      	b.n	8003e98 <__svfiscanf_r+0x1d0>
 8003fc0:	2b04      	cmp	r3, #4
 8003fc2:	dc06      	bgt.n	8003fd2 <__svfiscanf_r+0x30a>
 8003fc4:	466b      	mov	r3, sp
 8003fc6:	4622      	mov	r2, r4
 8003fc8:	4630      	mov	r0, r6
 8003fca:	a941      	add	r1, sp, #260	; 0x104
 8003fcc:	f000 f8a4 	bl	8004118 <_scanf_i>
 8003fd0:	e796      	b.n	8003f00 <__svfiscanf_r+0x238>
 8003fd2:	4b0f      	ldr	r3, [pc, #60]	; (8004010 <__svfiscanf_r+0x348>)
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	f43f aeaa 	beq.w	8003d2e <__svfiscanf_r+0x66>
 8003fda:	466b      	mov	r3, sp
 8003fdc:	4622      	mov	r2, r4
 8003fde:	4630      	mov	r0, r6
 8003fe0:	a941      	add	r1, sp, #260	; 0x104
 8003fe2:	f3af 8000 	nop.w
 8003fe6:	e78b      	b.n	8003f00 <__svfiscanf_r+0x238>
 8003fe8:	89a3      	ldrh	r3, [r4, #12]
 8003fea:	0599      	lsls	r1, r3, #22
 8003fec:	f53f af58 	bmi.w	8003ea0 <__svfiscanf_r+0x1d8>
 8003ff0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003ff2:	f7fe fdd7 	bl	8002ba4 <__retarget_lock_release_recursive>
 8003ff6:	e753      	b.n	8003ea0 <__svfiscanf_r+0x1d8>
 8003ff8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003ffa:	07da      	lsls	r2, r3, #31
 8003ffc:	d405      	bmi.n	800400a <__svfiscanf_r+0x342>
 8003ffe:	89a3      	ldrh	r3, [r4, #12]
 8004000:	059b      	lsls	r3, r3, #22
 8004002:	d402      	bmi.n	800400a <__svfiscanf_r+0x342>
 8004004:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004006:	f7fe fdcd 	bl	8002ba4 <__retarget_lock_release_recursive>
 800400a:	9844      	ldr	r0, [sp, #272]	; 0x110
 800400c:	e751      	b.n	8003eb2 <__svfiscanf_r+0x1ea>
 800400e:	bf00      	nop
 8004010:	00000000 	.word	0x00000000

08004014 <_vfiscanf_r>:
 8004014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004018:	460c      	mov	r4, r1
 800401a:	4616      	mov	r6, r2
 800401c:	461f      	mov	r7, r3
 800401e:	4605      	mov	r5, r0
 8004020:	b118      	cbz	r0, 800402a <_vfiscanf_r+0x16>
 8004022:	6983      	ldr	r3, [r0, #24]
 8004024:	b90b      	cbnz	r3, 800402a <_vfiscanf_r+0x16>
 8004026:	f7fe fcdd 	bl	80029e4 <__sinit>
 800402a:	4b0b      	ldr	r3, [pc, #44]	; (8004058 <_vfiscanf_r+0x44>)
 800402c:	429c      	cmp	r4, r3
 800402e:	d108      	bne.n	8004042 <_vfiscanf_r+0x2e>
 8004030:	686c      	ldr	r4, [r5, #4]
 8004032:	463b      	mov	r3, r7
 8004034:	4632      	mov	r2, r6
 8004036:	4621      	mov	r1, r4
 8004038:	4628      	mov	r0, r5
 800403a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800403e:	f7ff be43 	b.w	8003cc8 <__svfiscanf_r>
 8004042:	4b06      	ldr	r3, [pc, #24]	; (800405c <_vfiscanf_r+0x48>)
 8004044:	429c      	cmp	r4, r3
 8004046:	d101      	bne.n	800404c <_vfiscanf_r+0x38>
 8004048:	68ac      	ldr	r4, [r5, #8]
 800404a:	e7f2      	b.n	8004032 <_vfiscanf_r+0x1e>
 800404c:	4b04      	ldr	r3, [pc, #16]	; (8004060 <_vfiscanf_r+0x4c>)
 800404e:	429c      	cmp	r4, r3
 8004050:	bf08      	it	eq
 8004052:	68ec      	ldreq	r4, [r5, #12]
 8004054:	e7ed      	b.n	8004032 <_vfiscanf_r+0x1e>
 8004056:	bf00      	nop
 8004058:	08004c30 	.word	0x08004c30
 800405c:	08004c50 	.word	0x08004c50
 8004060:	08004c10 	.word	0x08004c10

08004064 <_scanf_chars>:
 8004064:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004068:	4615      	mov	r5, r2
 800406a:	688a      	ldr	r2, [r1, #8]
 800406c:	4680      	mov	r8, r0
 800406e:	460c      	mov	r4, r1
 8004070:	b932      	cbnz	r2, 8004080 <_scanf_chars+0x1c>
 8004072:	698a      	ldr	r2, [r1, #24]
 8004074:	2a00      	cmp	r2, #0
 8004076:	bf0c      	ite	eq
 8004078:	2201      	moveq	r2, #1
 800407a:	f04f 32ff 	movne.w	r2, #4294967295
 800407e:	608a      	str	r2, [r1, #8]
 8004080:	2700      	movs	r7, #0
 8004082:	6822      	ldr	r2, [r4, #0]
 8004084:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8004114 <_scanf_chars+0xb0>
 8004088:	06d1      	lsls	r1, r2, #27
 800408a:	bf5f      	itttt	pl
 800408c:	681a      	ldrpl	r2, [r3, #0]
 800408e:	1d11      	addpl	r1, r2, #4
 8004090:	6019      	strpl	r1, [r3, #0]
 8004092:	6816      	ldrpl	r6, [r2, #0]
 8004094:	69a0      	ldr	r0, [r4, #24]
 8004096:	b188      	cbz	r0, 80040bc <_scanf_chars+0x58>
 8004098:	2801      	cmp	r0, #1
 800409a:	d107      	bne.n	80040ac <_scanf_chars+0x48>
 800409c:	682b      	ldr	r3, [r5, #0]
 800409e:	781a      	ldrb	r2, [r3, #0]
 80040a0:	6963      	ldr	r3, [r4, #20]
 80040a2:	5c9b      	ldrb	r3, [r3, r2]
 80040a4:	b953      	cbnz	r3, 80040bc <_scanf_chars+0x58>
 80040a6:	2f00      	cmp	r7, #0
 80040a8:	d031      	beq.n	800410e <_scanf_chars+0xaa>
 80040aa:	e022      	b.n	80040f2 <_scanf_chars+0x8e>
 80040ac:	2802      	cmp	r0, #2
 80040ae:	d120      	bne.n	80040f2 <_scanf_chars+0x8e>
 80040b0:	682b      	ldr	r3, [r5, #0]
 80040b2:	781b      	ldrb	r3, [r3, #0]
 80040b4:	f813 3009 	ldrb.w	r3, [r3, r9]
 80040b8:	071b      	lsls	r3, r3, #28
 80040ba:	d41a      	bmi.n	80040f2 <_scanf_chars+0x8e>
 80040bc:	6823      	ldr	r3, [r4, #0]
 80040be:	3701      	adds	r7, #1
 80040c0:	06da      	lsls	r2, r3, #27
 80040c2:	bf5e      	ittt	pl
 80040c4:	682b      	ldrpl	r3, [r5, #0]
 80040c6:	781b      	ldrbpl	r3, [r3, #0]
 80040c8:	f806 3b01 	strbpl.w	r3, [r6], #1
 80040cc:	682a      	ldr	r2, [r5, #0]
 80040ce:	686b      	ldr	r3, [r5, #4]
 80040d0:	3201      	adds	r2, #1
 80040d2:	602a      	str	r2, [r5, #0]
 80040d4:	68a2      	ldr	r2, [r4, #8]
 80040d6:	3b01      	subs	r3, #1
 80040d8:	3a01      	subs	r2, #1
 80040da:	606b      	str	r3, [r5, #4]
 80040dc:	60a2      	str	r2, [r4, #8]
 80040de:	b142      	cbz	r2, 80040f2 <_scanf_chars+0x8e>
 80040e0:	2b00      	cmp	r3, #0
 80040e2:	dcd7      	bgt.n	8004094 <_scanf_chars+0x30>
 80040e4:	4629      	mov	r1, r5
 80040e6:	4640      	mov	r0, r8
 80040e8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80040ec:	4798      	blx	r3
 80040ee:	2800      	cmp	r0, #0
 80040f0:	d0d0      	beq.n	8004094 <_scanf_chars+0x30>
 80040f2:	6823      	ldr	r3, [r4, #0]
 80040f4:	f013 0310 	ands.w	r3, r3, #16
 80040f8:	d105      	bne.n	8004106 <_scanf_chars+0xa2>
 80040fa:	68e2      	ldr	r2, [r4, #12]
 80040fc:	3201      	adds	r2, #1
 80040fe:	60e2      	str	r2, [r4, #12]
 8004100:	69a2      	ldr	r2, [r4, #24]
 8004102:	b102      	cbz	r2, 8004106 <_scanf_chars+0xa2>
 8004104:	7033      	strb	r3, [r6, #0]
 8004106:	2000      	movs	r0, #0
 8004108:	6923      	ldr	r3, [r4, #16]
 800410a:	443b      	add	r3, r7
 800410c:	6123      	str	r3, [r4, #16]
 800410e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004112:	bf00      	nop
 8004114:	08004cc3 	.word	0x08004cc3

08004118 <_scanf_i>:
 8004118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800411c:	460c      	mov	r4, r1
 800411e:	4698      	mov	r8, r3
 8004120:	4b75      	ldr	r3, [pc, #468]	; (80042f8 <_scanf_i+0x1e0>)
 8004122:	b087      	sub	sp, #28
 8004124:	4682      	mov	sl, r0
 8004126:	4616      	mov	r6, r2
 8004128:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800412c:	ab03      	add	r3, sp, #12
 800412e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004132:	4b72      	ldr	r3, [pc, #456]	; (80042fc <_scanf_i+0x1e4>)
 8004134:	69a1      	ldr	r1, [r4, #24]
 8004136:	4a72      	ldr	r2, [pc, #456]	; (8004300 <_scanf_i+0x1e8>)
 8004138:	4627      	mov	r7, r4
 800413a:	2903      	cmp	r1, #3
 800413c:	bf18      	it	ne
 800413e:	461a      	movne	r2, r3
 8004140:	68a3      	ldr	r3, [r4, #8]
 8004142:	9201      	str	r2, [sp, #4]
 8004144:	1e5a      	subs	r2, r3, #1
 8004146:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800414a:	bf81      	itttt	hi
 800414c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8004150:	eb03 0905 	addhi.w	r9, r3, r5
 8004154:	f240 135d 	movwhi	r3, #349	; 0x15d
 8004158:	60a3      	strhi	r3, [r4, #8]
 800415a:	f857 3b1c 	ldr.w	r3, [r7], #28
 800415e:	bf98      	it	ls
 8004160:	f04f 0900 	movls.w	r9, #0
 8004164:	463d      	mov	r5, r7
 8004166:	f04f 0b00 	mov.w	fp, #0
 800416a:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800416e:	6023      	str	r3, [r4, #0]
 8004170:	6831      	ldr	r1, [r6, #0]
 8004172:	ab03      	add	r3, sp, #12
 8004174:	2202      	movs	r2, #2
 8004176:	7809      	ldrb	r1, [r1, #0]
 8004178:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800417c:	f000 fb88 	bl	8004890 <memchr>
 8004180:	b328      	cbz	r0, 80041ce <_scanf_i+0xb6>
 8004182:	f1bb 0f01 	cmp.w	fp, #1
 8004186:	d159      	bne.n	800423c <_scanf_i+0x124>
 8004188:	6862      	ldr	r2, [r4, #4]
 800418a:	b92a      	cbnz	r2, 8004198 <_scanf_i+0x80>
 800418c:	2308      	movs	r3, #8
 800418e:	6822      	ldr	r2, [r4, #0]
 8004190:	6063      	str	r3, [r4, #4]
 8004192:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004196:	6022      	str	r2, [r4, #0]
 8004198:	6822      	ldr	r2, [r4, #0]
 800419a:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800419e:	6022      	str	r2, [r4, #0]
 80041a0:	68a2      	ldr	r2, [r4, #8]
 80041a2:	1e51      	subs	r1, r2, #1
 80041a4:	60a1      	str	r1, [r4, #8]
 80041a6:	b192      	cbz	r2, 80041ce <_scanf_i+0xb6>
 80041a8:	6832      	ldr	r2, [r6, #0]
 80041aa:	1c51      	adds	r1, r2, #1
 80041ac:	6031      	str	r1, [r6, #0]
 80041ae:	7812      	ldrb	r2, [r2, #0]
 80041b0:	f805 2b01 	strb.w	r2, [r5], #1
 80041b4:	6872      	ldr	r2, [r6, #4]
 80041b6:	3a01      	subs	r2, #1
 80041b8:	2a00      	cmp	r2, #0
 80041ba:	6072      	str	r2, [r6, #4]
 80041bc:	dc07      	bgt.n	80041ce <_scanf_i+0xb6>
 80041be:	4631      	mov	r1, r6
 80041c0:	4650      	mov	r0, sl
 80041c2:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 80041c6:	4790      	blx	r2
 80041c8:	2800      	cmp	r0, #0
 80041ca:	f040 8085 	bne.w	80042d8 <_scanf_i+0x1c0>
 80041ce:	f10b 0b01 	add.w	fp, fp, #1
 80041d2:	f1bb 0f03 	cmp.w	fp, #3
 80041d6:	d1cb      	bne.n	8004170 <_scanf_i+0x58>
 80041d8:	6863      	ldr	r3, [r4, #4]
 80041da:	b90b      	cbnz	r3, 80041e0 <_scanf_i+0xc8>
 80041dc:	230a      	movs	r3, #10
 80041de:	6063      	str	r3, [r4, #4]
 80041e0:	6863      	ldr	r3, [r4, #4]
 80041e2:	4948      	ldr	r1, [pc, #288]	; (8004304 <_scanf_i+0x1ec>)
 80041e4:	6960      	ldr	r0, [r4, #20]
 80041e6:	1ac9      	subs	r1, r1, r3
 80041e8:	f000 f936 	bl	8004458 <__sccl>
 80041ec:	f04f 0b00 	mov.w	fp, #0
 80041f0:	68a3      	ldr	r3, [r4, #8]
 80041f2:	6822      	ldr	r2, [r4, #0]
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d03d      	beq.n	8004274 <_scanf_i+0x15c>
 80041f8:	6831      	ldr	r1, [r6, #0]
 80041fa:	6960      	ldr	r0, [r4, #20]
 80041fc:	f891 c000 	ldrb.w	ip, [r1]
 8004200:	f810 000c 	ldrb.w	r0, [r0, ip]
 8004204:	2800      	cmp	r0, #0
 8004206:	d035      	beq.n	8004274 <_scanf_i+0x15c>
 8004208:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800420c:	d124      	bne.n	8004258 <_scanf_i+0x140>
 800420e:	0510      	lsls	r0, r2, #20
 8004210:	d522      	bpl.n	8004258 <_scanf_i+0x140>
 8004212:	f10b 0b01 	add.w	fp, fp, #1
 8004216:	f1b9 0f00 	cmp.w	r9, #0
 800421a:	d003      	beq.n	8004224 <_scanf_i+0x10c>
 800421c:	3301      	adds	r3, #1
 800421e:	f109 39ff 	add.w	r9, r9, #4294967295
 8004222:	60a3      	str	r3, [r4, #8]
 8004224:	6873      	ldr	r3, [r6, #4]
 8004226:	3b01      	subs	r3, #1
 8004228:	2b00      	cmp	r3, #0
 800422a:	6073      	str	r3, [r6, #4]
 800422c:	dd1b      	ble.n	8004266 <_scanf_i+0x14e>
 800422e:	6833      	ldr	r3, [r6, #0]
 8004230:	3301      	adds	r3, #1
 8004232:	6033      	str	r3, [r6, #0]
 8004234:	68a3      	ldr	r3, [r4, #8]
 8004236:	3b01      	subs	r3, #1
 8004238:	60a3      	str	r3, [r4, #8]
 800423a:	e7d9      	b.n	80041f0 <_scanf_i+0xd8>
 800423c:	f1bb 0f02 	cmp.w	fp, #2
 8004240:	d1ae      	bne.n	80041a0 <_scanf_i+0x88>
 8004242:	6822      	ldr	r2, [r4, #0]
 8004244:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8004248:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800424c:	d1bf      	bne.n	80041ce <_scanf_i+0xb6>
 800424e:	2310      	movs	r3, #16
 8004250:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004254:	6063      	str	r3, [r4, #4]
 8004256:	e7a2      	b.n	800419e <_scanf_i+0x86>
 8004258:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800425c:	6022      	str	r2, [r4, #0]
 800425e:	780b      	ldrb	r3, [r1, #0]
 8004260:	f805 3b01 	strb.w	r3, [r5], #1
 8004264:	e7de      	b.n	8004224 <_scanf_i+0x10c>
 8004266:	4631      	mov	r1, r6
 8004268:	4650      	mov	r0, sl
 800426a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800426e:	4798      	blx	r3
 8004270:	2800      	cmp	r0, #0
 8004272:	d0df      	beq.n	8004234 <_scanf_i+0x11c>
 8004274:	6823      	ldr	r3, [r4, #0]
 8004276:	05db      	lsls	r3, r3, #23
 8004278:	d50d      	bpl.n	8004296 <_scanf_i+0x17e>
 800427a:	42bd      	cmp	r5, r7
 800427c:	d909      	bls.n	8004292 <_scanf_i+0x17a>
 800427e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8004282:	4632      	mov	r2, r6
 8004284:	4650      	mov	r0, sl
 8004286:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800428a:	f105 39ff 	add.w	r9, r5, #4294967295
 800428e:	4798      	blx	r3
 8004290:	464d      	mov	r5, r9
 8004292:	42bd      	cmp	r5, r7
 8004294:	d02d      	beq.n	80042f2 <_scanf_i+0x1da>
 8004296:	6822      	ldr	r2, [r4, #0]
 8004298:	f012 0210 	ands.w	r2, r2, #16
 800429c:	d113      	bne.n	80042c6 <_scanf_i+0x1ae>
 800429e:	702a      	strb	r2, [r5, #0]
 80042a0:	4639      	mov	r1, r7
 80042a2:	6863      	ldr	r3, [r4, #4]
 80042a4:	4650      	mov	r0, sl
 80042a6:	9e01      	ldr	r6, [sp, #4]
 80042a8:	47b0      	blx	r6
 80042aa:	6821      	ldr	r1, [r4, #0]
 80042ac:	f8d8 3000 	ldr.w	r3, [r8]
 80042b0:	f011 0f20 	tst.w	r1, #32
 80042b4:	d013      	beq.n	80042de <_scanf_i+0x1c6>
 80042b6:	1d1a      	adds	r2, r3, #4
 80042b8:	f8c8 2000 	str.w	r2, [r8]
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	6018      	str	r0, [r3, #0]
 80042c0:	68e3      	ldr	r3, [r4, #12]
 80042c2:	3301      	adds	r3, #1
 80042c4:	60e3      	str	r3, [r4, #12]
 80042c6:	2000      	movs	r0, #0
 80042c8:	1bed      	subs	r5, r5, r7
 80042ca:	44ab      	add	fp, r5
 80042cc:	6925      	ldr	r5, [r4, #16]
 80042ce:	445d      	add	r5, fp
 80042d0:	6125      	str	r5, [r4, #16]
 80042d2:	b007      	add	sp, #28
 80042d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042d8:	f04f 0b00 	mov.w	fp, #0
 80042dc:	e7ca      	b.n	8004274 <_scanf_i+0x15c>
 80042de:	1d1a      	adds	r2, r3, #4
 80042e0:	f8c8 2000 	str.w	r2, [r8]
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	f011 0f01 	tst.w	r1, #1
 80042ea:	bf14      	ite	ne
 80042ec:	8018      	strhne	r0, [r3, #0]
 80042ee:	6018      	streq	r0, [r3, #0]
 80042f0:	e7e6      	b.n	80042c0 <_scanf_i+0x1a8>
 80042f2:	2001      	movs	r0, #1
 80042f4:	e7ed      	b.n	80042d2 <_scanf_i+0x1ba>
 80042f6:	bf00      	nop
 80042f8:	08004bec 	.word	0x08004bec
 80042fc:	080046a9 	.word	0x080046a9
 8004300:	080045c1 	.word	0x080045c1
 8004304:	08004cc0 	.word	0x08004cc0

08004308 <_read_r>:
 8004308:	b538      	push	{r3, r4, r5, lr}
 800430a:	4604      	mov	r4, r0
 800430c:	4608      	mov	r0, r1
 800430e:	4611      	mov	r1, r2
 8004310:	2200      	movs	r2, #0
 8004312:	4d05      	ldr	r5, [pc, #20]	; (8004328 <_read_r+0x20>)
 8004314:	602a      	str	r2, [r5, #0]
 8004316:	461a      	mov	r2, r3
 8004318:	f7fc fbdc 	bl	8000ad4 <_read>
 800431c:	1c43      	adds	r3, r0, #1
 800431e:	d102      	bne.n	8004326 <_read_r+0x1e>
 8004320:	682b      	ldr	r3, [r5, #0]
 8004322:	b103      	cbz	r3, 8004326 <_read_r+0x1e>
 8004324:	6023      	str	r3, [r4, #0]
 8004326:	bd38      	pop	{r3, r4, r5, pc}
 8004328:	20000128 	.word	0x20000128

0800432c <lflush>:
 800432c:	8983      	ldrh	r3, [r0, #12]
 800432e:	f003 0309 	and.w	r3, r3, #9
 8004332:	2b09      	cmp	r3, #9
 8004334:	d101      	bne.n	800433a <lflush+0xe>
 8004336:	f7fe baeb 	b.w	8002910 <fflush>
 800433a:	2000      	movs	r0, #0
 800433c:	4770      	bx	lr
	...

08004340 <__srefill_r>:
 8004340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004342:	460c      	mov	r4, r1
 8004344:	4605      	mov	r5, r0
 8004346:	b118      	cbz	r0, 8004350 <__srefill_r+0x10>
 8004348:	6983      	ldr	r3, [r0, #24]
 800434a:	b90b      	cbnz	r3, 8004350 <__srefill_r+0x10>
 800434c:	f7fe fb4a 	bl	80029e4 <__sinit>
 8004350:	4b3c      	ldr	r3, [pc, #240]	; (8004444 <__srefill_r+0x104>)
 8004352:	429c      	cmp	r4, r3
 8004354:	d10a      	bne.n	800436c <__srefill_r+0x2c>
 8004356:	686c      	ldr	r4, [r5, #4]
 8004358:	2300      	movs	r3, #0
 800435a:	6063      	str	r3, [r4, #4]
 800435c:	89a3      	ldrh	r3, [r4, #12]
 800435e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004362:	069e      	lsls	r6, r3, #26
 8004364:	d50c      	bpl.n	8004380 <__srefill_r+0x40>
 8004366:	f04f 30ff 	mov.w	r0, #4294967295
 800436a:	e067      	b.n	800443c <__srefill_r+0xfc>
 800436c:	4b36      	ldr	r3, [pc, #216]	; (8004448 <__srefill_r+0x108>)
 800436e:	429c      	cmp	r4, r3
 8004370:	d101      	bne.n	8004376 <__srefill_r+0x36>
 8004372:	68ac      	ldr	r4, [r5, #8]
 8004374:	e7f0      	b.n	8004358 <__srefill_r+0x18>
 8004376:	4b35      	ldr	r3, [pc, #212]	; (800444c <__srefill_r+0x10c>)
 8004378:	429c      	cmp	r4, r3
 800437a:	bf08      	it	eq
 800437c:	68ec      	ldreq	r4, [r5, #12]
 800437e:	e7eb      	b.n	8004358 <__srefill_r+0x18>
 8004380:	0758      	lsls	r0, r3, #29
 8004382:	d449      	bmi.n	8004418 <__srefill_r+0xd8>
 8004384:	06d9      	lsls	r1, r3, #27
 8004386:	d405      	bmi.n	8004394 <__srefill_r+0x54>
 8004388:	2309      	movs	r3, #9
 800438a:	602b      	str	r3, [r5, #0]
 800438c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004390:	81a3      	strh	r3, [r4, #12]
 8004392:	e7e8      	b.n	8004366 <__srefill_r+0x26>
 8004394:	071a      	lsls	r2, r3, #28
 8004396:	d50b      	bpl.n	80043b0 <__srefill_r+0x70>
 8004398:	4621      	mov	r1, r4
 800439a:	4628      	mov	r0, r5
 800439c:	f7fe fa7c 	bl	8002898 <_fflush_r>
 80043a0:	2800      	cmp	r0, #0
 80043a2:	d1e0      	bne.n	8004366 <__srefill_r+0x26>
 80043a4:	89a3      	ldrh	r3, [r4, #12]
 80043a6:	60a0      	str	r0, [r4, #8]
 80043a8:	f023 0308 	bic.w	r3, r3, #8
 80043ac:	81a3      	strh	r3, [r4, #12]
 80043ae:	61a0      	str	r0, [r4, #24]
 80043b0:	89a3      	ldrh	r3, [r4, #12]
 80043b2:	f043 0304 	orr.w	r3, r3, #4
 80043b6:	81a3      	strh	r3, [r4, #12]
 80043b8:	6923      	ldr	r3, [r4, #16]
 80043ba:	b91b      	cbnz	r3, 80043c4 <__srefill_r+0x84>
 80043bc:	4621      	mov	r1, r4
 80043be:	4628      	mov	r0, r5
 80043c0:	f7fe ffe4 	bl	800338c <__smakebuf_r>
 80043c4:	89a6      	ldrh	r6, [r4, #12]
 80043c6:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 80043ca:	07b3      	lsls	r3, r6, #30
 80043cc:	d00f      	beq.n	80043ee <__srefill_r+0xae>
 80043ce:	2301      	movs	r3, #1
 80043d0:	81a3      	strh	r3, [r4, #12]
 80043d2:	4b1f      	ldr	r3, [pc, #124]	; (8004450 <__srefill_r+0x110>)
 80043d4:	491f      	ldr	r1, [pc, #124]	; (8004454 <__srefill_r+0x114>)
 80043d6:	6818      	ldr	r0, [r3, #0]
 80043d8:	f006 0609 	and.w	r6, r6, #9
 80043dc:	f7fe fb80 	bl	8002ae0 <_fwalk>
 80043e0:	2e09      	cmp	r6, #9
 80043e2:	81a7      	strh	r7, [r4, #12]
 80043e4:	d103      	bne.n	80043ee <__srefill_r+0xae>
 80043e6:	4621      	mov	r1, r4
 80043e8:	4628      	mov	r0, r5
 80043ea:	f7fe f9d3 	bl	8002794 <__sflush_r>
 80043ee:	6922      	ldr	r2, [r4, #16]
 80043f0:	4628      	mov	r0, r5
 80043f2:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80043f4:	6963      	ldr	r3, [r4, #20]
 80043f6:	6a21      	ldr	r1, [r4, #32]
 80043f8:	6022      	str	r2, [r4, #0]
 80043fa:	47b0      	blx	r6
 80043fc:	2800      	cmp	r0, #0
 80043fe:	6060      	str	r0, [r4, #4]
 8004400:	dc1d      	bgt.n	800443e <__srefill_r+0xfe>
 8004402:	bf18      	it	ne
 8004404:	2200      	movne	r2, #0
 8004406:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800440a:	bf16      	itet	ne
 800440c:	6062      	strne	r2, [r4, #4]
 800440e:	f043 0320 	orreq.w	r3, r3, #32
 8004412:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 8004416:	e7bb      	b.n	8004390 <__srefill_r+0x50>
 8004418:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800441a:	2900      	cmp	r1, #0
 800441c:	d0cc      	beq.n	80043b8 <__srefill_r+0x78>
 800441e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004422:	4299      	cmp	r1, r3
 8004424:	d002      	beq.n	800442c <__srefill_r+0xec>
 8004426:	4628      	mov	r0, r5
 8004428:	f7fe fbc6 	bl	8002bb8 <_free_r>
 800442c:	2000      	movs	r0, #0
 800442e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004430:	6360      	str	r0, [r4, #52]	; 0x34
 8004432:	6063      	str	r3, [r4, #4]
 8004434:	2b00      	cmp	r3, #0
 8004436:	d0bf      	beq.n	80043b8 <__srefill_r+0x78>
 8004438:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800443a:	6023      	str	r3, [r4, #0]
 800443c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800443e:	2000      	movs	r0, #0
 8004440:	e7fc      	b.n	800443c <__srefill_r+0xfc>
 8004442:	bf00      	nop
 8004444:	08004c30 	.word	0x08004c30
 8004448:	08004c50 	.word	0x08004c50
 800444c:	08004c10 	.word	0x08004c10
 8004450:	08004c70 	.word	0x08004c70
 8004454:	0800432d 	.word	0x0800432d

08004458 <__sccl>:
 8004458:	b570      	push	{r4, r5, r6, lr}
 800445a:	780b      	ldrb	r3, [r1, #0]
 800445c:	4604      	mov	r4, r0
 800445e:	2b5e      	cmp	r3, #94	; 0x5e
 8004460:	bf13      	iteet	ne
 8004462:	2200      	movne	r2, #0
 8004464:	2201      	moveq	r2, #1
 8004466:	784b      	ldrbeq	r3, [r1, #1]
 8004468:	1c48      	addne	r0, r1, #1
 800446a:	bf08      	it	eq
 800446c:	1c88      	addeq	r0, r1, #2
 800446e:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8004472:	1e61      	subs	r1, r4, #1
 8004474:	f801 2f01 	strb.w	r2, [r1, #1]!
 8004478:	42a9      	cmp	r1, r5
 800447a:	d1fb      	bne.n	8004474 <__sccl+0x1c>
 800447c:	b90b      	cbnz	r3, 8004482 <__sccl+0x2a>
 800447e:	3801      	subs	r0, #1
 8004480:	bd70      	pop	{r4, r5, r6, pc}
 8004482:	f082 0201 	eor.w	r2, r2, #1
 8004486:	4605      	mov	r5, r0
 8004488:	54e2      	strb	r2, [r4, r3]
 800448a:	4628      	mov	r0, r5
 800448c:	f810 1b01 	ldrb.w	r1, [r0], #1
 8004490:	292d      	cmp	r1, #45	; 0x2d
 8004492:	d006      	beq.n	80044a2 <__sccl+0x4a>
 8004494:	295d      	cmp	r1, #93	; 0x5d
 8004496:	d0f3      	beq.n	8004480 <__sccl+0x28>
 8004498:	b909      	cbnz	r1, 800449e <__sccl+0x46>
 800449a:	4628      	mov	r0, r5
 800449c:	e7f0      	b.n	8004480 <__sccl+0x28>
 800449e:	460b      	mov	r3, r1
 80044a0:	e7f1      	b.n	8004486 <__sccl+0x2e>
 80044a2:	786e      	ldrb	r6, [r5, #1]
 80044a4:	2e5d      	cmp	r6, #93	; 0x5d
 80044a6:	d0fa      	beq.n	800449e <__sccl+0x46>
 80044a8:	42b3      	cmp	r3, r6
 80044aa:	dcf8      	bgt.n	800449e <__sccl+0x46>
 80044ac:	4619      	mov	r1, r3
 80044ae:	3502      	adds	r5, #2
 80044b0:	3101      	adds	r1, #1
 80044b2:	428e      	cmp	r6, r1
 80044b4:	5462      	strb	r2, [r4, r1]
 80044b6:	dcfb      	bgt.n	80044b0 <__sccl+0x58>
 80044b8:	1af1      	subs	r1, r6, r3
 80044ba:	3901      	subs	r1, #1
 80044bc:	42b3      	cmp	r3, r6
 80044be:	bfa8      	it	ge
 80044c0:	2100      	movge	r1, #0
 80044c2:	1c58      	adds	r0, r3, #1
 80044c4:	1843      	adds	r3, r0, r1
 80044c6:	e7e0      	b.n	800448a <__sccl+0x32>

080044c8 <_strtol_l.constprop.0>:
 80044c8:	2b01      	cmp	r3, #1
 80044ca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044ce:	4680      	mov	r8, r0
 80044d0:	d001      	beq.n	80044d6 <_strtol_l.constprop.0+0xe>
 80044d2:	2b24      	cmp	r3, #36	; 0x24
 80044d4:	d906      	bls.n	80044e4 <_strtol_l.constprop.0+0x1c>
 80044d6:	f7fe f957 	bl	8002788 <__errno>
 80044da:	2316      	movs	r3, #22
 80044dc:	6003      	str	r3, [r0, #0]
 80044de:	2000      	movs	r0, #0
 80044e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80044e4:	460d      	mov	r5, r1
 80044e6:	4f35      	ldr	r7, [pc, #212]	; (80045bc <_strtol_l.constprop.0+0xf4>)
 80044e8:	4628      	mov	r0, r5
 80044ea:	f815 4b01 	ldrb.w	r4, [r5], #1
 80044ee:	5de6      	ldrb	r6, [r4, r7]
 80044f0:	f016 0608 	ands.w	r6, r6, #8
 80044f4:	d1f8      	bne.n	80044e8 <_strtol_l.constprop.0+0x20>
 80044f6:	2c2d      	cmp	r4, #45	; 0x2d
 80044f8:	d12f      	bne.n	800455a <_strtol_l.constprop.0+0x92>
 80044fa:	2601      	movs	r6, #1
 80044fc:	782c      	ldrb	r4, [r5, #0]
 80044fe:	1c85      	adds	r5, r0, #2
 8004500:	2b00      	cmp	r3, #0
 8004502:	d057      	beq.n	80045b4 <_strtol_l.constprop.0+0xec>
 8004504:	2b10      	cmp	r3, #16
 8004506:	d109      	bne.n	800451c <_strtol_l.constprop.0+0x54>
 8004508:	2c30      	cmp	r4, #48	; 0x30
 800450a:	d107      	bne.n	800451c <_strtol_l.constprop.0+0x54>
 800450c:	7828      	ldrb	r0, [r5, #0]
 800450e:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8004512:	2858      	cmp	r0, #88	; 0x58
 8004514:	d149      	bne.n	80045aa <_strtol_l.constprop.0+0xe2>
 8004516:	2310      	movs	r3, #16
 8004518:	786c      	ldrb	r4, [r5, #1]
 800451a:	3502      	adds	r5, #2
 800451c:	2700      	movs	r7, #0
 800451e:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 8004522:	f10e 3eff 	add.w	lr, lr, #4294967295
 8004526:	fbbe f9f3 	udiv	r9, lr, r3
 800452a:	4638      	mov	r0, r7
 800452c:	fb03 ea19 	mls	sl, r3, r9, lr
 8004530:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8004534:	f1bc 0f09 	cmp.w	ip, #9
 8004538:	d814      	bhi.n	8004564 <_strtol_l.constprop.0+0x9c>
 800453a:	4664      	mov	r4, ip
 800453c:	42a3      	cmp	r3, r4
 800453e:	dd22      	ble.n	8004586 <_strtol_l.constprop.0+0xbe>
 8004540:	2f00      	cmp	r7, #0
 8004542:	db1d      	blt.n	8004580 <_strtol_l.constprop.0+0xb8>
 8004544:	4581      	cmp	r9, r0
 8004546:	d31b      	bcc.n	8004580 <_strtol_l.constprop.0+0xb8>
 8004548:	d101      	bne.n	800454e <_strtol_l.constprop.0+0x86>
 800454a:	45a2      	cmp	sl, r4
 800454c:	db18      	blt.n	8004580 <_strtol_l.constprop.0+0xb8>
 800454e:	2701      	movs	r7, #1
 8004550:	fb00 4003 	mla	r0, r0, r3, r4
 8004554:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004558:	e7ea      	b.n	8004530 <_strtol_l.constprop.0+0x68>
 800455a:	2c2b      	cmp	r4, #43	; 0x2b
 800455c:	bf04      	itt	eq
 800455e:	782c      	ldrbeq	r4, [r5, #0]
 8004560:	1c85      	addeq	r5, r0, #2
 8004562:	e7cd      	b.n	8004500 <_strtol_l.constprop.0+0x38>
 8004564:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8004568:	f1bc 0f19 	cmp.w	ip, #25
 800456c:	d801      	bhi.n	8004572 <_strtol_l.constprop.0+0xaa>
 800456e:	3c37      	subs	r4, #55	; 0x37
 8004570:	e7e4      	b.n	800453c <_strtol_l.constprop.0+0x74>
 8004572:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8004576:	f1bc 0f19 	cmp.w	ip, #25
 800457a:	d804      	bhi.n	8004586 <_strtol_l.constprop.0+0xbe>
 800457c:	3c57      	subs	r4, #87	; 0x57
 800457e:	e7dd      	b.n	800453c <_strtol_l.constprop.0+0x74>
 8004580:	f04f 37ff 	mov.w	r7, #4294967295
 8004584:	e7e6      	b.n	8004554 <_strtol_l.constprop.0+0x8c>
 8004586:	2f00      	cmp	r7, #0
 8004588:	da07      	bge.n	800459a <_strtol_l.constprop.0+0xd2>
 800458a:	2322      	movs	r3, #34	; 0x22
 800458c:	4670      	mov	r0, lr
 800458e:	f8c8 3000 	str.w	r3, [r8]
 8004592:	2a00      	cmp	r2, #0
 8004594:	d0a4      	beq.n	80044e0 <_strtol_l.constprop.0+0x18>
 8004596:	1e69      	subs	r1, r5, #1
 8004598:	e005      	b.n	80045a6 <_strtol_l.constprop.0+0xde>
 800459a:	b106      	cbz	r6, 800459e <_strtol_l.constprop.0+0xd6>
 800459c:	4240      	negs	r0, r0
 800459e:	2a00      	cmp	r2, #0
 80045a0:	d09e      	beq.n	80044e0 <_strtol_l.constprop.0+0x18>
 80045a2:	2f00      	cmp	r7, #0
 80045a4:	d1f7      	bne.n	8004596 <_strtol_l.constprop.0+0xce>
 80045a6:	6011      	str	r1, [r2, #0]
 80045a8:	e79a      	b.n	80044e0 <_strtol_l.constprop.0+0x18>
 80045aa:	2430      	movs	r4, #48	; 0x30
 80045ac:	2b00      	cmp	r3, #0
 80045ae:	d1b5      	bne.n	800451c <_strtol_l.constprop.0+0x54>
 80045b0:	2308      	movs	r3, #8
 80045b2:	e7b3      	b.n	800451c <_strtol_l.constprop.0+0x54>
 80045b4:	2c30      	cmp	r4, #48	; 0x30
 80045b6:	d0a9      	beq.n	800450c <_strtol_l.constprop.0+0x44>
 80045b8:	230a      	movs	r3, #10
 80045ba:	e7af      	b.n	800451c <_strtol_l.constprop.0+0x54>
 80045bc:	08004cc3 	.word	0x08004cc3

080045c0 <_strtol_r>:
 80045c0:	f7ff bf82 	b.w	80044c8 <_strtol_l.constprop.0>

080045c4 <_strtoul_l.constprop.0>:
 80045c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80045c8:	4686      	mov	lr, r0
 80045ca:	460d      	mov	r5, r1
 80045cc:	4f35      	ldr	r7, [pc, #212]	; (80046a4 <_strtoul_l.constprop.0+0xe0>)
 80045ce:	4628      	mov	r0, r5
 80045d0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80045d4:	5de6      	ldrb	r6, [r4, r7]
 80045d6:	f016 0608 	ands.w	r6, r6, #8
 80045da:	d1f8      	bne.n	80045ce <_strtoul_l.constprop.0+0xa>
 80045dc:	2c2d      	cmp	r4, #45	; 0x2d
 80045de:	d12f      	bne.n	8004640 <_strtoul_l.constprop.0+0x7c>
 80045e0:	2601      	movs	r6, #1
 80045e2:	782c      	ldrb	r4, [r5, #0]
 80045e4:	1c85      	adds	r5, r0, #2
 80045e6:	2b00      	cmp	r3, #0
 80045e8:	d057      	beq.n	800469a <_strtoul_l.constprop.0+0xd6>
 80045ea:	2b10      	cmp	r3, #16
 80045ec:	d109      	bne.n	8004602 <_strtoul_l.constprop.0+0x3e>
 80045ee:	2c30      	cmp	r4, #48	; 0x30
 80045f0:	d107      	bne.n	8004602 <_strtoul_l.constprop.0+0x3e>
 80045f2:	7828      	ldrb	r0, [r5, #0]
 80045f4:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80045f8:	2858      	cmp	r0, #88	; 0x58
 80045fa:	d149      	bne.n	8004690 <_strtoul_l.constprop.0+0xcc>
 80045fc:	2310      	movs	r3, #16
 80045fe:	786c      	ldrb	r4, [r5, #1]
 8004600:	3502      	adds	r5, #2
 8004602:	f04f 38ff 	mov.w	r8, #4294967295
 8004606:	fbb8 f8f3 	udiv	r8, r8, r3
 800460a:	2700      	movs	r7, #0
 800460c:	fb03 f908 	mul.w	r9, r3, r8
 8004610:	4638      	mov	r0, r7
 8004612:	ea6f 0909 	mvn.w	r9, r9
 8004616:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800461a:	f1bc 0f09 	cmp.w	ip, #9
 800461e:	d814      	bhi.n	800464a <_strtoul_l.constprop.0+0x86>
 8004620:	4664      	mov	r4, ip
 8004622:	42a3      	cmp	r3, r4
 8004624:	dd22      	ble.n	800466c <_strtoul_l.constprop.0+0xa8>
 8004626:	2f00      	cmp	r7, #0
 8004628:	db1d      	blt.n	8004666 <_strtoul_l.constprop.0+0xa2>
 800462a:	4580      	cmp	r8, r0
 800462c:	d31b      	bcc.n	8004666 <_strtoul_l.constprop.0+0xa2>
 800462e:	d101      	bne.n	8004634 <_strtoul_l.constprop.0+0x70>
 8004630:	45a1      	cmp	r9, r4
 8004632:	db18      	blt.n	8004666 <_strtoul_l.constprop.0+0xa2>
 8004634:	2701      	movs	r7, #1
 8004636:	fb00 4003 	mla	r0, r0, r3, r4
 800463a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800463e:	e7ea      	b.n	8004616 <_strtoul_l.constprop.0+0x52>
 8004640:	2c2b      	cmp	r4, #43	; 0x2b
 8004642:	bf04      	itt	eq
 8004644:	782c      	ldrbeq	r4, [r5, #0]
 8004646:	1c85      	addeq	r5, r0, #2
 8004648:	e7cd      	b.n	80045e6 <_strtoul_l.constprop.0+0x22>
 800464a:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800464e:	f1bc 0f19 	cmp.w	ip, #25
 8004652:	d801      	bhi.n	8004658 <_strtoul_l.constprop.0+0x94>
 8004654:	3c37      	subs	r4, #55	; 0x37
 8004656:	e7e4      	b.n	8004622 <_strtoul_l.constprop.0+0x5e>
 8004658:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800465c:	f1bc 0f19 	cmp.w	ip, #25
 8004660:	d804      	bhi.n	800466c <_strtoul_l.constprop.0+0xa8>
 8004662:	3c57      	subs	r4, #87	; 0x57
 8004664:	e7dd      	b.n	8004622 <_strtoul_l.constprop.0+0x5e>
 8004666:	f04f 37ff 	mov.w	r7, #4294967295
 800466a:	e7e6      	b.n	800463a <_strtoul_l.constprop.0+0x76>
 800466c:	2f00      	cmp	r7, #0
 800466e:	da07      	bge.n	8004680 <_strtoul_l.constprop.0+0xbc>
 8004670:	2322      	movs	r3, #34	; 0x22
 8004672:	f04f 30ff 	mov.w	r0, #4294967295
 8004676:	f8ce 3000 	str.w	r3, [lr]
 800467a:	b932      	cbnz	r2, 800468a <_strtoul_l.constprop.0+0xc6>
 800467c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004680:	b106      	cbz	r6, 8004684 <_strtoul_l.constprop.0+0xc0>
 8004682:	4240      	negs	r0, r0
 8004684:	2a00      	cmp	r2, #0
 8004686:	d0f9      	beq.n	800467c <_strtoul_l.constprop.0+0xb8>
 8004688:	b107      	cbz	r7, 800468c <_strtoul_l.constprop.0+0xc8>
 800468a:	1e69      	subs	r1, r5, #1
 800468c:	6011      	str	r1, [r2, #0]
 800468e:	e7f5      	b.n	800467c <_strtoul_l.constprop.0+0xb8>
 8004690:	2430      	movs	r4, #48	; 0x30
 8004692:	2b00      	cmp	r3, #0
 8004694:	d1b5      	bne.n	8004602 <_strtoul_l.constprop.0+0x3e>
 8004696:	2308      	movs	r3, #8
 8004698:	e7b3      	b.n	8004602 <_strtoul_l.constprop.0+0x3e>
 800469a:	2c30      	cmp	r4, #48	; 0x30
 800469c:	d0a9      	beq.n	80045f2 <_strtoul_l.constprop.0+0x2e>
 800469e:	230a      	movs	r3, #10
 80046a0:	e7af      	b.n	8004602 <_strtoul_l.constprop.0+0x3e>
 80046a2:	bf00      	nop
 80046a4:	08004cc3 	.word	0x08004cc3

080046a8 <_strtoul_r>:
 80046a8:	f7ff bf8c 	b.w	80045c4 <_strtoul_l.constprop.0>

080046ac <__submore>:
 80046ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046b0:	460c      	mov	r4, r1
 80046b2:	6b49      	ldr	r1, [r1, #52]	; 0x34
 80046b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80046b8:	4299      	cmp	r1, r3
 80046ba:	d11b      	bne.n	80046f4 <__submore+0x48>
 80046bc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80046c0:	f7fe fae2 	bl	8002c88 <_malloc_r>
 80046c4:	b918      	cbnz	r0, 80046ce <__submore+0x22>
 80046c6:	f04f 30ff 	mov.w	r0, #4294967295
 80046ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80046d2:	63a3      	str	r3, [r4, #56]	; 0x38
 80046d4:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80046d8:	6360      	str	r0, [r4, #52]	; 0x34
 80046da:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 80046de:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80046e2:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 80046e6:	7043      	strb	r3, [r0, #1]
 80046e8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80046ec:	7003      	strb	r3, [r0, #0]
 80046ee:	6020      	str	r0, [r4, #0]
 80046f0:	2000      	movs	r0, #0
 80046f2:	e7ea      	b.n	80046ca <__submore+0x1e>
 80046f4:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 80046f6:	0077      	lsls	r7, r6, #1
 80046f8:	463a      	mov	r2, r7
 80046fa:	f000 f8ff 	bl	80048fc <_realloc_r>
 80046fe:	4605      	mov	r5, r0
 8004700:	2800      	cmp	r0, #0
 8004702:	d0e0      	beq.n	80046c6 <__submore+0x1a>
 8004704:	eb00 0806 	add.w	r8, r0, r6
 8004708:	4601      	mov	r1, r0
 800470a:	4632      	mov	r2, r6
 800470c:	4640      	mov	r0, r8
 800470e:	f000 f8cd 	bl	80048ac <memcpy>
 8004712:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8004716:	f8c4 8000 	str.w	r8, [r4]
 800471a:	e7e9      	b.n	80046f0 <__submore+0x44>

0800471c <_ungetc_r>:
 800471c:	b570      	push	{r4, r5, r6, lr}
 800471e:	4614      	mov	r4, r2
 8004720:	1c4a      	adds	r2, r1, #1
 8004722:	4606      	mov	r6, r0
 8004724:	460d      	mov	r5, r1
 8004726:	d103      	bne.n	8004730 <_ungetc_r+0x14>
 8004728:	f04f 35ff 	mov.w	r5, #4294967295
 800472c:	4628      	mov	r0, r5
 800472e:	bd70      	pop	{r4, r5, r6, pc}
 8004730:	b118      	cbz	r0, 800473a <_ungetc_r+0x1e>
 8004732:	6983      	ldr	r3, [r0, #24]
 8004734:	b90b      	cbnz	r3, 800473a <_ungetc_r+0x1e>
 8004736:	f7fe f955 	bl	80029e4 <__sinit>
 800473a:	4b41      	ldr	r3, [pc, #260]	; (8004840 <_ungetc_r+0x124>)
 800473c:	429c      	cmp	r4, r3
 800473e:	d11d      	bne.n	800477c <_ungetc_r+0x60>
 8004740:	6874      	ldr	r4, [r6, #4]
 8004742:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004744:	07db      	lsls	r3, r3, #31
 8004746:	d405      	bmi.n	8004754 <_ungetc_r+0x38>
 8004748:	89a3      	ldrh	r3, [r4, #12]
 800474a:	0598      	lsls	r0, r3, #22
 800474c:	d402      	bmi.n	8004754 <_ungetc_r+0x38>
 800474e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004750:	f7fe fa27 	bl	8002ba2 <__retarget_lock_acquire_recursive>
 8004754:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004758:	f023 0320 	bic.w	r3, r3, #32
 800475c:	0759      	lsls	r1, r3, #29
 800475e:	81a3      	strh	r3, [r4, #12]
 8004760:	b29a      	uxth	r2, r3
 8004762:	d42d      	bmi.n	80047c0 <_ungetc_r+0xa4>
 8004764:	06d3      	lsls	r3, r2, #27
 8004766:	d413      	bmi.n	8004790 <_ungetc_r+0x74>
 8004768:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800476a:	07dd      	lsls	r5, r3, #31
 800476c:	d4dc      	bmi.n	8004728 <_ungetc_r+0xc>
 800476e:	f412 7f00 	tst.w	r2, #512	; 0x200
 8004772:	d1d9      	bne.n	8004728 <_ungetc_r+0xc>
 8004774:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004776:	f7fe fa15 	bl	8002ba4 <__retarget_lock_release_recursive>
 800477a:	e7d5      	b.n	8004728 <_ungetc_r+0xc>
 800477c:	4b31      	ldr	r3, [pc, #196]	; (8004844 <_ungetc_r+0x128>)
 800477e:	429c      	cmp	r4, r3
 8004780:	d101      	bne.n	8004786 <_ungetc_r+0x6a>
 8004782:	68b4      	ldr	r4, [r6, #8]
 8004784:	e7dd      	b.n	8004742 <_ungetc_r+0x26>
 8004786:	4b30      	ldr	r3, [pc, #192]	; (8004848 <_ungetc_r+0x12c>)
 8004788:	429c      	cmp	r4, r3
 800478a:	bf08      	it	eq
 800478c:	68f4      	ldreq	r4, [r6, #12]
 800478e:	e7d8      	b.n	8004742 <_ungetc_r+0x26>
 8004790:	0710      	lsls	r0, r2, #28
 8004792:	d511      	bpl.n	80047b8 <_ungetc_r+0x9c>
 8004794:	4621      	mov	r1, r4
 8004796:	4630      	mov	r0, r6
 8004798:	f7fe f87e 	bl	8002898 <_fflush_r>
 800479c:	b130      	cbz	r0, 80047ac <_ungetc_r+0x90>
 800479e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80047a0:	07d9      	lsls	r1, r3, #31
 80047a2:	d4c1      	bmi.n	8004728 <_ungetc_r+0xc>
 80047a4:	89a3      	ldrh	r3, [r4, #12]
 80047a6:	f413 7f00 	tst.w	r3, #512	; 0x200
 80047aa:	e7e2      	b.n	8004772 <_ungetc_r+0x56>
 80047ac:	89a3      	ldrh	r3, [r4, #12]
 80047ae:	60a0      	str	r0, [r4, #8]
 80047b0:	f023 0308 	bic.w	r3, r3, #8
 80047b4:	81a3      	strh	r3, [r4, #12]
 80047b6:	61a0      	str	r0, [r4, #24]
 80047b8:	89a3      	ldrh	r3, [r4, #12]
 80047ba:	f043 0304 	orr.w	r3, r3, #4
 80047be:	81a3      	strh	r3, [r4, #12]
 80047c0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047c2:	6862      	ldr	r2, [r4, #4]
 80047c4:	b2ed      	uxtb	r5, r5
 80047c6:	b1d3      	cbz	r3, 80047fe <_ungetc_r+0xe2>
 80047c8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80047ca:	4293      	cmp	r3, r2
 80047cc:	dc05      	bgt.n	80047da <_ungetc_r+0xbe>
 80047ce:	4621      	mov	r1, r4
 80047d0:	4630      	mov	r0, r6
 80047d2:	f7ff ff6b 	bl	80046ac <__submore>
 80047d6:	2800      	cmp	r0, #0
 80047d8:	d1e1      	bne.n	800479e <_ungetc_r+0x82>
 80047da:	6823      	ldr	r3, [r4, #0]
 80047dc:	1e5a      	subs	r2, r3, #1
 80047de:	6022      	str	r2, [r4, #0]
 80047e0:	f803 5c01 	strb.w	r5, [r3, #-1]
 80047e4:	6863      	ldr	r3, [r4, #4]
 80047e6:	3301      	adds	r3, #1
 80047e8:	6063      	str	r3, [r4, #4]
 80047ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80047ec:	07da      	lsls	r2, r3, #31
 80047ee:	d49d      	bmi.n	800472c <_ungetc_r+0x10>
 80047f0:	89a3      	ldrh	r3, [r4, #12]
 80047f2:	059b      	lsls	r3, r3, #22
 80047f4:	d49a      	bmi.n	800472c <_ungetc_r+0x10>
 80047f6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80047f8:	f7fe f9d4 	bl	8002ba4 <__retarget_lock_release_recursive>
 80047fc:	e796      	b.n	800472c <_ungetc_r+0x10>
 80047fe:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8004800:	6920      	ldr	r0, [r4, #16]
 8004802:	6823      	ldr	r3, [r4, #0]
 8004804:	f001 0101 	and.w	r1, r1, #1
 8004808:	b160      	cbz	r0, 8004824 <_ungetc_r+0x108>
 800480a:	4298      	cmp	r0, r3
 800480c:	d20a      	bcs.n	8004824 <_ungetc_r+0x108>
 800480e:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8004812:	42a8      	cmp	r0, r5
 8004814:	d106      	bne.n	8004824 <_ungetc_r+0x108>
 8004816:	3b01      	subs	r3, #1
 8004818:	3201      	adds	r2, #1
 800481a:	6023      	str	r3, [r4, #0]
 800481c:	6062      	str	r2, [r4, #4]
 800481e:	2900      	cmp	r1, #0
 8004820:	d184      	bne.n	800472c <_ungetc_r+0x10>
 8004822:	e7e5      	b.n	80047f0 <_ungetc_r+0xd4>
 8004824:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8004828:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800482c:	6363      	str	r3, [r4, #52]	; 0x34
 800482e:	2303      	movs	r3, #3
 8004830:	63a3      	str	r3, [r4, #56]	; 0x38
 8004832:	4623      	mov	r3, r4
 8004834:	f803 5f46 	strb.w	r5, [r3, #70]!
 8004838:	6023      	str	r3, [r4, #0]
 800483a:	2301      	movs	r3, #1
 800483c:	6063      	str	r3, [r4, #4]
 800483e:	e7ee      	b.n	800481e <_ungetc_r+0x102>
 8004840:	08004c30 	.word	0x08004c30
 8004844:	08004c50 	.word	0x08004c50
 8004848:	08004c10 	.word	0x08004c10

0800484c <_fstat_r>:
 800484c:	b538      	push	{r3, r4, r5, lr}
 800484e:	2300      	movs	r3, #0
 8004850:	4d06      	ldr	r5, [pc, #24]	; (800486c <_fstat_r+0x20>)
 8004852:	4604      	mov	r4, r0
 8004854:	4608      	mov	r0, r1
 8004856:	4611      	mov	r1, r2
 8004858:	602b      	str	r3, [r5, #0]
 800485a:	f7fc f97f 	bl	8000b5c <_fstat>
 800485e:	1c43      	adds	r3, r0, #1
 8004860:	d102      	bne.n	8004868 <_fstat_r+0x1c>
 8004862:	682b      	ldr	r3, [r5, #0]
 8004864:	b103      	cbz	r3, 8004868 <_fstat_r+0x1c>
 8004866:	6023      	str	r3, [r4, #0]
 8004868:	bd38      	pop	{r3, r4, r5, pc}
 800486a:	bf00      	nop
 800486c:	20000128 	.word	0x20000128

08004870 <_isatty_r>:
 8004870:	b538      	push	{r3, r4, r5, lr}
 8004872:	2300      	movs	r3, #0
 8004874:	4d05      	ldr	r5, [pc, #20]	; (800488c <_isatty_r+0x1c>)
 8004876:	4604      	mov	r4, r0
 8004878:	4608      	mov	r0, r1
 800487a:	602b      	str	r3, [r5, #0]
 800487c:	f7fc f97d 	bl	8000b7a <_isatty>
 8004880:	1c43      	adds	r3, r0, #1
 8004882:	d102      	bne.n	800488a <_isatty_r+0x1a>
 8004884:	682b      	ldr	r3, [r5, #0]
 8004886:	b103      	cbz	r3, 800488a <_isatty_r+0x1a>
 8004888:	6023      	str	r3, [r4, #0]
 800488a:	bd38      	pop	{r3, r4, r5, pc}
 800488c:	20000128 	.word	0x20000128

08004890 <memchr>:
 8004890:	4603      	mov	r3, r0
 8004892:	b510      	push	{r4, lr}
 8004894:	b2c9      	uxtb	r1, r1
 8004896:	4402      	add	r2, r0
 8004898:	4293      	cmp	r3, r2
 800489a:	4618      	mov	r0, r3
 800489c:	d101      	bne.n	80048a2 <memchr+0x12>
 800489e:	2000      	movs	r0, #0
 80048a0:	e003      	b.n	80048aa <memchr+0x1a>
 80048a2:	7804      	ldrb	r4, [r0, #0]
 80048a4:	3301      	adds	r3, #1
 80048a6:	428c      	cmp	r4, r1
 80048a8:	d1f6      	bne.n	8004898 <memchr+0x8>
 80048aa:	bd10      	pop	{r4, pc}

080048ac <memcpy>:
 80048ac:	440a      	add	r2, r1
 80048ae:	4291      	cmp	r1, r2
 80048b0:	f100 33ff 	add.w	r3, r0, #4294967295
 80048b4:	d100      	bne.n	80048b8 <memcpy+0xc>
 80048b6:	4770      	bx	lr
 80048b8:	b510      	push	{r4, lr}
 80048ba:	f811 4b01 	ldrb.w	r4, [r1], #1
 80048be:	4291      	cmp	r1, r2
 80048c0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80048c4:	d1f9      	bne.n	80048ba <memcpy+0xe>
 80048c6:	bd10      	pop	{r4, pc}

080048c8 <memmove>:
 80048c8:	4288      	cmp	r0, r1
 80048ca:	b510      	push	{r4, lr}
 80048cc:	eb01 0402 	add.w	r4, r1, r2
 80048d0:	d902      	bls.n	80048d8 <memmove+0x10>
 80048d2:	4284      	cmp	r4, r0
 80048d4:	4623      	mov	r3, r4
 80048d6:	d807      	bhi.n	80048e8 <memmove+0x20>
 80048d8:	1e43      	subs	r3, r0, #1
 80048da:	42a1      	cmp	r1, r4
 80048dc:	d008      	beq.n	80048f0 <memmove+0x28>
 80048de:	f811 2b01 	ldrb.w	r2, [r1], #1
 80048e2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80048e6:	e7f8      	b.n	80048da <memmove+0x12>
 80048e8:	4601      	mov	r1, r0
 80048ea:	4402      	add	r2, r0
 80048ec:	428a      	cmp	r2, r1
 80048ee:	d100      	bne.n	80048f2 <memmove+0x2a>
 80048f0:	bd10      	pop	{r4, pc}
 80048f2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80048f6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80048fa:	e7f7      	b.n	80048ec <memmove+0x24>

080048fc <_realloc_r>:
 80048fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004900:	4680      	mov	r8, r0
 8004902:	4614      	mov	r4, r2
 8004904:	460e      	mov	r6, r1
 8004906:	b921      	cbnz	r1, 8004912 <_realloc_r+0x16>
 8004908:	4611      	mov	r1, r2
 800490a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800490e:	f7fe b9bb 	b.w	8002c88 <_malloc_r>
 8004912:	b92a      	cbnz	r2, 8004920 <_realloc_r+0x24>
 8004914:	f7fe f950 	bl	8002bb8 <_free_r>
 8004918:	4625      	mov	r5, r4
 800491a:	4628      	mov	r0, r5
 800491c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004920:	f000 f81b 	bl	800495a <_malloc_usable_size_r>
 8004924:	4284      	cmp	r4, r0
 8004926:	4607      	mov	r7, r0
 8004928:	d802      	bhi.n	8004930 <_realloc_r+0x34>
 800492a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800492e:	d812      	bhi.n	8004956 <_realloc_r+0x5a>
 8004930:	4621      	mov	r1, r4
 8004932:	4640      	mov	r0, r8
 8004934:	f7fe f9a8 	bl	8002c88 <_malloc_r>
 8004938:	4605      	mov	r5, r0
 800493a:	2800      	cmp	r0, #0
 800493c:	d0ed      	beq.n	800491a <_realloc_r+0x1e>
 800493e:	42bc      	cmp	r4, r7
 8004940:	4622      	mov	r2, r4
 8004942:	4631      	mov	r1, r6
 8004944:	bf28      	it	cs
 8004946:	463a      	movcs	r2, r7
 8004948:	f7ff ffb0 	bl	80048ac <memcpy>
 800494c:	4631      	mov	r1, r6
 800494e:	4640      	mov	r0, r8
 8004950:	f7fe f932 	bl	8002bb8 <_free_r>
 8004954:	e7e1      	b.n	800491a <_realloc_r+0x1e>
 8004956:	4635      	mov	r5, r6
 8004958:	e7df      	b.n	800491a <_realloc_r+0x1e>

0800495a <_malloc_usable_size_r>:
 800495a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800495e:	1f18      	subs	r0, r3, #4
 8004960:	2b00      	cmp	r3, #0
 8004962:	bfbc      	itt	lt
 8004964:	580b      	ldrlt	r3, [r1, r0]
 8004966:	18c0      	addlt	r0, r0, r3
 8004968:	4770      	bx	lr
	...

0800496c <_init>:
 800496c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800496e:	bf00      	nop
 8004970:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004972:	bc08      	pop	{r3}
 8004974:	469e      	mov	lr, r3
 8004976:	4770      	bx	lr

08004978 <_fini>:
 8004978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800497a:	bf00      	nop
 800497c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800497e:	bc08      	pop	{r3}
 8004980:	469e      	mov	lr, r3
 8004982:	4770      	bx	lr
