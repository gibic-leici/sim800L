
sim800L.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004e80  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000834  08004f8c  08004f8c  00014f8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080057c0  080057c0  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  080057c0  080057c0  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  080057c0  080057c0  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080057c0  080057c0  000157c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080057c4  080057c4  000157c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080057c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000bc  20000070  08005838  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000012c  08005838  0002012c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   000081d4  00000000  00000000  00020099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001a7a  00000000  00000000  0002826d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000828  00000000  00000000  00029ce8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000780  00000000  00000000  0002a510  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017c2b  00000000  00000000  0002ac90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00008a79  00000000  00000000  000428bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083d1e  00000000  00000000  0004b334  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000cf052  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002de8  00000000  00000000  000cf0a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000070 	.word	0x20000070
 8000128:	00000000 	.word	0x00000000
 800012c:	08004f74 	.word	0x08004f74

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000074 	.word	0x20000074
 8000148:	08004f74 	.word	0x08004f74

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <__io_putchar>:
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#define GETCHAR_PROTOTYPE int fgetc(FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 800015c:	b580      	push	{r7, lr}
 800015e:	b082      	sub	sp, #8
 8000160:	af00      	add	r7, sp, #0
 8000162:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8000164:	1d39      	adds	r1, r7, #4
 8000166:	f04f 33ff 	mov.w	r3, #4294967295
 800016a:	2201      	movs	r2, #1
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <__io_putchar+0x20>)
 800016e:	f002 f864 	bl	800223a <HAL_UART_Transmit>
  return ch;
 8000172:	687b      	ldr	r3, [r7, #4]
}
 8000174:	4618      	mov	r0, r3
 8000176:	3708      	adds	r7, #8
 8000178:	46bd      	mov	sp, r7
 800017a:	bd80      	pop	{r7, pc}
 800017c:	2000008c 	.word	0x2000008c

08000180 <__io_getchar>:

GETCHAR_PROTOTYPE
{
 8000180:	b580      	push	{r7, lr}
 8000182:	b082      	sub	sp, #8
 8000184:	af00      	add	r7, sp, #0
  uint8_t ch = 0;
 8000186:	2300      	movs	r3, #0
 8000188:	71fb      	strb	r3, [r7, #7]

  /* Clear the Overrun flag just before receiving the first character */
  __HAL_UART_CLEAR_OREFLAG(&huart1);
 800018a:	2300      	movs	r3, #0
 800018c:	603b      	str	r3, [r7, #0]
 800018e:	4b0e      	ldr	r3, [pc, #56]	; (80001c8 <__io_getchar+0x48>)
 8000190:	681b      	ldr	r3, [r3, #0]
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	603b      	str	r3, [r7, #0]
 8000196:	4b0c      	ldr	r3, [pc, #48]	; (80001c8 <__io_getchar+0x48>)
 8000198:	681b      	ldr	r3, [r3, #0]
 800019a:	685b      	ldr	r3, [r3, #4]
 800019c:	603b      	str	r3, [r7, #0]
 800019e:	683b      	ldr	r3, [r7, #0]

  /* Wait for reception of a character on the USART RX line and echo this
   * character on console */
  HAL_UART_Receive(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80001a0:	1df9      	adds	r1, r7, #7
 80001a2:	f04f 33ff 	mov.w	r3, #4294967295
 80001a6:	2201      	movs	r2, #1
 80001a8:	4807      	ldr	r0, [pc, #28]	; (80001c8 <__io_getchar+0x48>)
 80001aa:	f002 f8d8 	bl	800235e <HAL_UART_Receive>
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80001ae:	1df9      	adds	r1, r7, #7
 80001b0:	f04f 33ff 	mov.w	r3, #4294967295
 80001b4:	2201      	movs	r2, #1
 80001b6:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__io_getchar+0x48>)
 80001b8:	f002 f83f 	bl	800223a <HAL_UART_Transmit>

  return ch;
 80001bc:	79fb      	ldrb	r3, [r7, #7]
}
 80001be:	4618      	mov	r0, r3
 80001c0:	3708      	adds	r7, #8
 80001c2:	46bd      	mov	sp, r7
 80001c4:	bd80      	pop	{r7, pc}
 80001c6:	bf00      	nop
 80001c8:	2000008c 	.word	0x2000008c

080001cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80001cc:	b5b0      	push	{r4, r5, r7, lr}
 80001ce:	f5ad 6d28 	sub.w	sp, sp, #2688	; 0xa80
 80001d2:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80001d4:	f000 ffd0 	bl	8001178 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80001d8:	f000 f9d6 	bl	8000588 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */

  setvbuf(stdin, NULL, _IONBF, 0);	// Esto es necesario para que scanf ande bien
 80001dc:	4bc9      	ldr	r3, [pc, #804]	; (8000504 <main+0x338>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	6858      	ldr	r0, [r3, #4]
 80001e2:	2300      	movs	r3, #0
 80001e4:	2202      	movs	r2, #2
 80001e6:	2100      	movs	r1, #0
 80001e8:	f003 f910 	bl	800340c <setvbuf>
  	  	  	  	  	  	  	  	    // con esto y lo de arriba ya anda el scanf :)

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80001ec:	f000 fa5c 	bl	80006a8 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80001f0:	f000 fa06 	bl	8000600 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80001f4:	f000 fa2e 	bl	8000654 <MX_USART2_UART_Init>

  /* USER CODE BEGIN 2 */

  printf("Test de comandos AT... \r\n");
 80001f8:	48c3      	ldr	r0, [pc, #780]	; (8000508 <main+0x33c>)
 80001fa:	f003 f8d7 	bl	80033ac <puts>

  // Inicializacion de la clase con la que manejo el sim800L

  SIM800 sim800;
  InitSIM(&sim800,&huart2,1);
 80001fe:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000202:	2201      	movs	r2, #1
 8000204:	49c1      	ldr	r1, [pc, #772]	; (800050c <main+0x340>)
 8000206:	4618      	mov	r0, r3
 8000208:	f000 faa8 	bl	800075c <InitSIM>

  EnviarAT(&sim800);
 800020c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000210:	4618      	mov	r0, r3
 8000212:	f000 fb93 	bl	800093c <EnviarAT>
  ConsultarEstadoSIM(&sim800);
 8000216:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800021a:	4618      	mov	r0, r3
 800021c:	f000 fcd8 	bl	8000bd0 <ConsultarEstadoSIM>


  int bypass_conection = 0;
 8000220:	2300      	movs	r3, #0
 8000222:	f8c7 3a74 	str.w	r3, [r7, #2676]	; 0xa74

  printf("Conectando a la red...(Presione alguna tecla para diagnosticar)\r\n");
 8000226:	48ba      	ldr	r0, [pc, #744]	; (8000510 <main+0x344>)
 8000228:	f003 f8c0 	bl	80033ac <puts>


  while( ( isConnected(&sim800,0) != 1 ) && (bypass_conection == 0) )
 800022c:	e061      	b.n	80002f2 <main+0x126>
  {
	  if (getchar() != EOF)
 800022e:	f002 ff19 	bl	8003064 <getchar>
 8000232:	4603      	mov	r3, r0
 8000234:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000238:	d05b      	beq.n	80002f2 <main+0x126>
	  {
		  {
			  printf("Todavia no se ha podido establecer la conexion.\r\n");
 800023a:	48b6      	ldr	r0, [pc, #728]	; (8000514 <main+0x348>)
 800023c:	f003 f8b6 	bl	80033ac <puts>
		  	  printf("1) Reintentar\r\n");
 8000240:	48b5      	ldr	r0, [pc, #724]	; (8000518 <main+0x34c>)
 8000242:	f003 f8b3 	bl	80033ac <puts>
		  	  printf("2) Diagnosticar\r\n");
 8000246:	48b5      	ldr	r0, [pc, #724]	; (800051c <main+0x350>)
 8000248:	f003 f8b0 	bl	80033ac <puts>
		  	  printf("3) Ingresar comandos AT manualmente\r\n");
 800024c:	48b4      	ldr	r0, [pc, #720]	; (8000520 <main+0x354>)
 800024e:	f003 f8ad 	bl	80033ac <puts>
		  	  printf("4) Continuar sin conexion");
 8000252:	48b4      	ldr	r0, [pc, #720]	; (8000524 <main+0x358>)
 8000254:	f003 f824 	bl	80032a0 <iprintf>

		  	  int opcion;
		  	  char opcion2;
		  	  scanf("%d",&opcion);
 8000258:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800025c:	4619      	mov	r1, r3
 800025e:	48b2      	ldr	r0, [pc, #712]	; (8000528 <main+0x35c>)
 8000260:	f003 f8bc 	bl	80033dc <iscanf>
		  	  switch(opcion)
 8000264:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 8000268:	f6a3 2308 	subw	r3, r3, #2568	; 0xa08
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	3b01      	subs	r3, #1
 8000270:	2b03      	cmp	r3, #3
 8000272:	d83e      	bhi.n	80002f2 <main+0x126>
 8000274:	a201      	add	r2, pc, #4	; (adr r2, 800027c <main+0xb0>)
 8000276:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800027a:	bf00      	nop
 800027c:	080002f3 	.word	0x080002f3
 8000280:	0800028d 	.word	0x0800028d
 8000284:	080002ad 	.word	0x080002ad
 8000288:	080002eb 	.word	0x080002eb
		  	  {
		  	  case 1:
		  		  break;
		  	  case 2:
		  		  ConsultarSignal(&sim800);
 800028c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000290:	4618      	mov	r0, r3
 8000292:	f000 fc8d 	bl	8000bb0 <ConsultarSignal>
		  		  HAL_Delay(1000);
 8000296:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800029a:	f000 ffcf 	bl	800123c <HAL_Delay>
		  		  ListarRedesDisponibles(&sim800);
 800029e:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80002a2:	4618      	mov	r0, r3
 80002a4:	f000 fca4 	bl	8000bf0 <ListarRedesDisponibles>
		  		  break;
 80002a8:	e023      	b.n	80002f2 <main+0x126>
		  	  case 3:
 80002aa:	bf00      	nop
		  		  do{
		  			  printf("Ingrese el comando AT que desea enviar al modulo \r\n:");
 80002ac:	489f      	ldr	r0, [pc, #636]	; (800052c <main+0x360>)
 80002ae:	f002 fff7 	bl	80032a0 <iprintf>
		  			  EnviarPuertoSerie(&sim800);
 80002b2:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80002b6:	4618      	mov	r0, r3
 80002b8:	f000 fc3c 	bl	8000b34 <EnviarPuertoSerie>
		  			  printf("Desea ingresar otro comando? (s/n) \r\n");
 80002bc:	489c      	ldr	r0, [pc, #624]	; (8000530 <main+0x364>)
 80002be:	f003 f875 	bl	80033ac <puts>
		  			  fflush(stdin);
 80002c2:	4b90      	ldr	r3, [pc, #576]	; (8000504 <main+0x338>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	685b      	ldr	r3, [r3, #4]
 80002c8:	4618      	mov	r0, r3
 80002ca:	f002 fda7 	bl	8002e1c <fflush>
		  			  scanf("%c",&opcion2);
 80002ce:	f107 036f 	add.w	r3, r7, #111	; 0x6f
 80002d2:	4619      	mov	r1, r3
 80002d4:	4897      	ldr	r0, [pc, #604]	; (8000534 <main+0x368>)
 80002d6:	f003 f881 	bl	80033dc <iscanf>
		  		  }while( opcion2 == 's');
 80002da:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 80002de:	f6a3 2309 	subw	r3, r3, #2569	; 0xa09
 80002e2:	781b      	ldrb	r3, [r3, #0]
 80002e4:	2b73      	cmp	r3, #115	; 0x73
 80002e6:	d0e0      	beq.n	80002aa <main+0xde>
		  		  break;
 80002e8:	e003      	b.n	80002f2 <main+0x126>

		  	  case 4:
		  		  bypass_conection=1;
 80002ea:	2301      	movs	r3, #1
 80002ec:	f8c7 3a74 	str.w	r3, [r7, #2676]	; 0xa74
		  		  break;
 80002f0:	bf00      	nop
  while( ( isConnected(&sim800,0) != 1 ) && (bypass_conection == 0) )
 80002f2:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80002f6:	2100      	movs	r1, #0
 80002f8:	4618      	mov	r0, r3
 80002fa:	f000 fac9 	bl	8000890 <isConnected>
 80002fe:	4603      	mov	r3, r0
 8000300:	2b01      	cmp	r3, #1
 8000302:	d003      	beq.n	800030c <main+0x140>
 8000304:	f8d7 3a74 	ldr.w	r3, [r7, #2676]	; 0xa74
 8000308:	2b00      	cmp	r3, #0
 800030a:	d090      	beq.n	800022e <main+0x62>
		  	  }
		    }
	  }
  }
  printf("Conectado con exito\r\n");
 800030c:	488a      	ldr	r0, [pc, #552]	; (8000538 <main+0x36c>)
 800030e:	f003 f84d 	bl	80033ac <puts>


  InitGPRS(&sim800,1);
 8000312:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000316:	2101      	movs	r1, #1
 8000318:	4618      	mov	r0, r3
 800031a:	f000 fae9 	bl	80008f0 <InitGPRS>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  while (1)
  {
	printf("Bienvenido al Test de SIM800L\r\n");
 800031e:	4887      	ldr	r0, [pc, #540]	; (800053c <main+0x370>)
 8000320:	f003 f844 	bl	80033ac <puts>
	printf("1) Ingresar comandos AT manualmente\r\n");
 8000324:	4886      	ldr	r0, [pc, #536]	; (8000540 <main+0x374>)
 8000326:	f003 f841 	bl	80033ac <puts>
	printf("2) Recibir msj SMS \r\n");
 800032a:	4886      	ldr	r0, [pc, #536]	; (8000544 <main+0x378>)
 800032c:	f003 f83e 	bl	80033ac <puts>
	printf("3) Enviar msj SMS \r\n");
 8000330:	4885      	ldr	r0, [pc, #532]	; (8000548 <main+0x37c>)
 8000332:	f003 f83b 	bl	80033ac <puts>
	printf("4) Testear el modo GPRS\r\n");
 8000336:	4885      	ldr	r0, [pc, #532]	; (800054c <main+0x380>)
 8000338:	f003 f838 	bl	80033ac <puts>
	printf("5) Enviar un msj TCP\r\n");
 800033c:	4884      	ldr	r0, [pc, #528]	; (8000550 <main+0x384>)
 800033e:	f003 f835 	bl	80033ac <puts>
	printf("6) Enviar un msj largo (1500 bytes) por TCP\r\n");
 8000342:	4884      	ldr	r0, [pc, #528]	; (8000554 <main+0x388>)
 8000344:	f003 f832 	bl	80033ac <puts>

	int opcion1;
	char opcion2;
	scanf("%d",&opcion1);
 8000348:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800034c:	4619      	mov	r1, r3
 800034e:	4876      	ldr	r0, [pc, #472]	; (8000528 <main+0x35c>)
 8000350:	f003 f844 	bl	80033dc <iscanf>

	char IP [50] = "181.231.229.4";
 8000354:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 8000358:	f6a3 2578 	subw	r5, r3, #2680	; 0xa78
 800035c:	4b7e      	ldr	r3, [pc, #504]	; (8000558 <main+0x38c>)
 800035e:	462c      	mov	r4, r5
 8000360:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000362:	c407      	stmia	r4!, {r0, r1, r2}
 8000364:	8023      	strh	r3, [r4, #0]
 8000366:	f105 030e 	add.w	r3, r5, #14
 800036a:	2224      	movs	r2, #36	; 0x24
 800036c:	2100      	movs	r1, #0
 800036e:	4618      	mov	r0, r3
 8000370:	f002 feb1 	bl	80030d6 <memset>
	int puerto = 1050;
 8000374:	f240 431a 	movw	r3, #1050	; 0x41a
 8000378:	f8c7 3a70 	str.w	r3, [r7, #2672]	; 0xa70

	switch(opcion1)
 800037c:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 8000380:	f5a3 6321 	sub.w	r3, r3, #2576	; 0xa10
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	3b01      	subs	r3, #1
 8000388:	2b05      	cmp	r3, #5
 800038a:	d8c8      	bhi.n	800031e <main+0x152>
 800038c:	a201      	add	r2, pc, #4	; (adr r2, 8000394 <main+0x1c8>)
 800038e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000392:	bf00      	nop
 8000394:	080003af 	.word	0x080003af
 8000398:	080003ef 	.word	0x080003ef
 800039c:	08000497 	.word	0x08000497
 80003a0:	080004a7 	.word	0x080004a7
 80003a4:	080004bb 	.word	0x080004bb
 80003a8:	080004db 	.word	0x080004db
	{
	case 1:
 80003ac:	bf00      	nop
		do{
			printf("Ingrese el comando AT que desea enviar al modulo \r\n:");
 80003ae:	485f      	ldr	r0, [pc, #380]	; (800052c <main+0x360>)
 80003b0:	f002 ff76 	bl	80032a0 <iprintf>
			EnviarPuertoSerie(&sim800);
 80003b4:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80003b8:	4618      	mov	r0, r3
 80003ba:	f000 fbbb 	bl	8000b34 <EnviarPuertoSerie>

			printf("Desea ingresar otro comando? (s/n) \r\n");
 80003be:	485c      	ldr	r0, [pc, #368]	; (8000530 <main+0x364>)
 80003c0:	f002 fff4 	bl	80033ac <puts>
			fflush(stdin);
 80003c4:	4b4f      	ldr	r3, [pc, #316]	; (8000504 <main+0x338>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	685b      	ldr	r3, [r3, #4]
 80003ca:	4618      	mov	r0, r3
 80003cc:	f002 fd26 	bl	8002e1c <fflush>
			scanf("%c",&opcion2);
 80003d0:	f107 0367 	add.w	r3, r7, #103	; 0x67
 80003d4:	4619      	mov	r1, r3
 80003d6:	4857      	ldr	r0, [pc, #348]	; (8000534 <main+0x368>)
 80003d8:	f003 f800 	bl	80033dc <iscanf>
			}while( opcion2 == 's');
 80003dc:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 80003e0:	f6a3 2311 	subw	r3, r3, #2577	; 0xa11
 80003e4:	781b      	ldrb	r3, [r3, #0]
 80003e6:	2b73      	cmp	r3, #115	; 0x73
 80003e8:	d0e0      	beq.n	80003ac <main+0x1e0>
		break;
 80003ea:	e089      	b.n	8000500 <main+0x334>
	case 2:
 80003ec:	bf00      	nop
			do{
				printf("Esperando por SMS...\r\n");
 80003ee:	485b      	ldr	r0, [pc, #364]	; (800055c <main+0x390>)
 80003f0:	f002 ffdc 	bl	80033ac <puts>
				char comando1 [LEN_CMD] = "\r\nLED_TOGGLE\r\n";
 80003f4:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 80003f8:	f6a3 2544 	subw	r5, r3, #2628	; 0xa44
 80003fc:	4b58      	ldr	r3, [pc, #352]	; (8000560 <main+0x394>)
 80003fe:	462c      	mov	r4, r5
 8000400:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000402:	c407      	stmia	r4!, {r0, r1, r2}
 8000404:	8023      	strh	r3, [r4, #0]
 8000406:	3402      	adds	r4, #2
 8000408:	0c1b      	lsrs	r3, r3, #16
 800040a:	7023      	strb	r3, [r4, #0]
 800040c:	f105 030f 	add.w	r3, r5, #15
 8000410:	2223      	movs	r2, #35	; 0x23
 8000412:	2100      	movs	r1, #0
 8000414:	4618      	mov	r0, r3
 8000416:	f002 fe5e 	bl	80030d6 <memset>

				if (ListenSMS(&sim800) == 1)
 800041a:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800041e:	4618      	mov	r0, r3
 8000420:	f000 fc3a 	bl	8000c98 <ListenSMS>
 8000424:	4603      	mov	r3, r0
 8000426:	2b01      	cmp	r3, #1
 8000428:	d11e      	bne.n	8000468 <main+0x29c>
				{
					printf("Texto del mensaje: %s",sim800.txt_last_sms);
 800042a:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800042e:	f203 73d4 	addw	r3, r3, #2004	; 0x7d4
 8000432:	4619      	mov	r1, r3
 8000434:	484b      	ldr	r0, [pc, #300]	; (8000564 <main+0x398>)
 8000436:	f002 ff33 	bl	80032a0 <iprintf>
					if(strncmp((sim800.txt_last_sms),comando1,strlen(comando1)) == 0)
 800043a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800043e:	4618      	mov	r0, r3
 8000440:	f7ff fe84 	bl	800014c <strlen>
 8000444:	4602      	mov	r2, r0
 8000446:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800044a:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800044e:	f203 73d4 	addw	r3, r3, #2004	; 0x7d4
 8000452:	4618      	mov	r0, r3
 8000454:	f003 f903 	bl	800365e <strncmp>
 8000458:	4603      	mov	r3, r0
 800045a:	2b00      	cmp	r3, #0
 800045c:	d104      	bne.n	8000468 <main+0x29c>
					{
						HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 800045e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000462:	4841      	ldr	r0, [pc, #260]	; (8000568 <main+0x39c>)
 8000464:	f001 fa68 	bl	8001938 <HAL_GPIO_TogglePin>
					}
				}


				printf("Desea esperar por otro SMS? (s/n) \r\n");
 8000468:	4840      	ldr	r0, [pc, #256]	; (800056c <main+0x3a0>)
 800046a:	f002 ff9f 	bl	80033ac <puts>
				fflush(stdin);
 800046e:	4b25      	ldr	r3, [pc, #148]	; (8000504 <main+0x338>)
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	685b      	ldr	r3, [r3, #4]
 8000474:	4618      	mov	r0, r3
 8000476:	f002 fcd1 	bl	8002e1c <fflush>
				scanf("%c",&opcion2);
 800047a:	f107 0367 	add.w	r3, r7, #103	; 0x67
 800047e:	4619      	mov	r1, r3
 8000480:	482c      	ldr	r0, [pc, #176]	; (8000534 <main+0x368>)
 8000482:	f002 ffab 	bl	80033dc <iscanf>
				}while( opcion2 == 's');
 8000486:	f607 2378 	addw	r3, r7, #2680	; 0xa78
 800048a:	f6a3 2311 	subw	r3, r3, #2577	; 0xa11
 800048e:	781b      	ldrb	r3, [r3, #0]
 8000490:	2b73      	cmp	r3, #115	; 0x73
 8000492:	d0ab      	beq.n	80003ec <main+0x220>

			break;
 8000494:	e034      	b.n	8000500 <main+0x334>

	case 3:
		EnviarSMS(&sim800,"+5492966544589","Hola desde el SIM800 por SMS",1);
 8000496:	f107 0074 	add.w	r0, r7, #116	; 0x74
 800049a:	2301      	movs	r3, #1
 800049c:	4a34      	ldr	r2, [pc, #208]	; (8000570 <main+0x3a4>)
 800049e:	4935      	ldr	r1, [pc, #212]	; (8000574 <main+0x3a8>)
 80004a0:	f000 fbba 	bl	8000c18 <EnviarSMS>
		break;
 80004a4:	e02c      	b.n	8000500 <main+0x334>

	case 4:
		printf("Probando GPRS, recuperando algo de una pag web... \r\n");
 80004a6:	4834      	ldr	r0, [pc, #208]	; (8000578 <main+0x3ac>)
 80004a8:	f002 ff80 	bl	80033ac <puts>
		TestGPRS(&sim800,1);
 80004ac:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80004b0:	2101      	movs	r1, #1
 80004b2:	4618      	mov	r0, r3
 80004b4:	f000 fa52 	bl	800095c <TestGPRS>
		break;
 80004b8:	e022      	b.n	8000500 <main+0x334>

	case 5:
		printf("Enviando un msj al IP: %s\r\n",IP);
 80004ba:	463b      	mov	r3, r7
 80004bc:	4619      	mov	r1, r3
 80004be:	482f      	ldr	r0, [pc, #188]	; (800057c <main+0x3b0>)
 80004c0:	f002 feee 	bl	80032a0 <iprintf>
		SendTCPtoIP(&sim800, "Hola desde el SIM800L por protocolo TCP\r\n", IP, puerto,1);
 80004c4:	463a      	mov	r2, r7
 80004c6:	f107 0074 	add.w	r0, r7, #116	; 0x74
 80004ca:	2301      	movs	r3, #1
 80004cc:	9300      	str	r3, [sp, #0]
 80004ce:	f8d7 3a70 	ldr.w	r3, [r7, #2672]	; 0xa70
 80004d2:	492b      	ldr	r1, [pc, #172]	; (8000580 <main+0x3b4>)
 80004d4:	f000 fad6 	bl	8000a84 <SendTCPtoIP>
		break;
 80004d8:	e012      	b.n	8000500 <main+0x334>

	case 6:
		printf("Enviando un msj largo al IP: %s\r\n",IP);
 80004da:	463b      	mov	r3, r7
 80004dc:	4619      	mov	r1, r3
 80004de:	4829      	ldr	r0, [pc, #164]	; (8000584 <main+0x3b8>)
 80004e0:	f002 fede 	bl	80032a0 <iprintf>
		SendTCPtoIP(&sim800, sim800.buffer_largo , IP, puerto,1);
 80004e4:	463a      	mov	r2, r7
 80004e6:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80004ea:	f603 0138 	addw	r1, r3, #2104	; 0x838
 80004ee:	f107 0074 	add.w	r0, r7, #116	; 0x74
 80004f2:	2301      	movs	r3, #1
 80004f4:	9300      	str	r3, [sp, #0]
 80004f6:	f8d7 3a70 	ldr.w	r3, [r7, #2672]	; 0xa70
 80004fa:	f000 fac3 	bl	8000a84 <SendTCPtoIP>
		break;
 80004fe:	bf00      	nop
  {
 8000500:	e70d      	b.n	800031e <main+0x152>
 8000502:	bf00      	nop
 8000504:	2000000c 	.word	0x2000000c
 8000508:	08004f8c 	.word	0x08004f8c
 800050c:	200000d0 	.word	0x200000d0
 8000510:	08004fa8 	.word	0x08004fa8
 8000514:	08004fec 	.word	0x08004fec
 8000518:	08005020 	.word	0x08005020
 800051c:	08005030 	.word	0x08005030
 8000520:	08005044 	.word	0x08005044
 8000524:	0800506c 	.word	0x0800506c
 8000528:	08005088 	.word	0x08005088
 800052c:	0800508c 	.word	0x0800508c
 8000530:	080050c4 	.word	0x080050c4
 8000534:	080050ec 	.word	0x080050ec
 8000538:	080050f0 	.word	0x080050f0
 800053c:	08005108 	.word	0x08005108
 8000540:	08005128 	.word	0x08005128
 8000544:	08005150 	.word	0x08005150
 8000548:	08005168 	.word	0x08005168
 800054c:	0800517c 	.word	0x0800517c
 8000550:	08005198 	.word	0x08005198
 8000554:	080051b0 	.word	0x080051b0
 8000558:	08005304 	.word	0x08005304
 800055c:	080051e0 	.word	0x080051e0
 8000560:	08005338 	.word	0x08005338
 8000564:	080051f8 	.word	0x080051f8
 8000568:	40011000 	.word	0x40011000
 800056c:	08005210 	.word	0x08005210
 8000570:	08005234 	.word	0x08005234
 8000574:	08005254 	.word	0x08005254
 8000578:	08005264 	.word	0x08005264
 800057c:	08005298 	.word	0x08005298
 8000580:	080052b4 	.word	0x080052b4
 8000584:	080052e0 	.word	0x080052e0

08000588 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000588:	b580      	push	{r7, lr}
 800058a:	b090      	sub	sp, #64	; 0x40
 800058c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800058e:	f107 0318 	add.w	r3, r7, #24
 8000592:	2228      	movs	r2, #40	; 0x28
 8000594:	2100      	movs	r1, #0
 8000596:	4618      	mov	r0, r3
 8000598:	f002 fd9d 	bl	80030d6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800059c:	1d3b      	adds	r3, r7, #4
 800059e:	2200      	movs	r2, #0
 80005a0:	601a      	str	r2, [r3, #0]
 80005a2:	605a      	str	r2, [r3, #4]
 80005a4:	609a      	str	r2, [r3, #8]
 80005a6:	60da      	str	r2, [r3, #12]
 80005a8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80005aa:	2302      	movs	r3, #2
 80005ac:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80005ae:	2301      	movs	r3, #1
 80005b0:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80005b2:	2310      	movs	r3, #16
 80005b4:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80005b6:	2300      	movs	r3, #0
 80005b8:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80005ba:	f107 0318 	add.w	r3, r7, #24
 80005be:	4618      	mov	r0, r3
 80005c0:	f001 f9d4 	bl	800196c <HAL_RCC_OscConfig>
 80005c4:	4603      	mov	r3, r0
 80005c6:	2b00      	cmp	r3, #0
 80005c8:	d001      	beq.n	80005ce <SystemClock_Config+0x46>
  {
    Error_Handler();
 80005ca:	f000 f8c1 	bl	8000750 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80005ce:	230f      	movs	r3, #15
 80005d0:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80005d2:	2300      	movs	r3, #0
 80005d4:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80005d6:	2300      	movs	r3, #0
 80005d8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80005da:	2300      	movs	r3, #0
 80005dc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80005de:	2300      	movs	r3, #0
 80005e0:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80005e2:	1d3b      	adds	r3, r7, #4
 80005e4:	2100      	movs	r1, #0
 80005e6:	4618      	mov	r0, r3
 80005e8:	f001 fc42 	bl	8001e70 <HAL_RCC_ClockConfig>
 80005ec:	4603      	mov	r3, r0
 80005ee:	2b00      	cmp	r3, #0
 80005f0:	d001      	beq.n	80005f6 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80005f2:	f000 f8ad 	bl	8000750 <Error_Handler>
  }
}
 80005f6:	bf00      	nop
 80005f8:	3740      	adds	r7, #64	; 0x40
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bd80      	pop	{r7, pc}
	...

08000600 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000604:	4b11      	ldr	r3, [pc, #68]	; (800064c <MX_USART1_UART_Init+0x4c>)
 8000606:	4a12      	ldr	r2, [pc, #72]	; (8000650 <MX_USART1_UART_Init+0x50>)
 8000608:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800060a:	4b10      	ldr	r3, [pc, #64]	; (800064c <MX_USART1_UART_Init+0x4c>)
 800060c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000610:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000612:	4b0e      	ldr	r3, [pc, #56]	; (800064c <MX_USART1_UART_Init+0x4c>)
 8000614:	2200      	movs	r2, #0
 8000616:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000618:	4b0c      	ldr	r3, [pc, #48]	; (800064c <MX_USART1_UART_Init+0x4c>)
 800061a:	2200      	movs	r2, #0
 800061c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800061e:	4b0b      	ldr	r3, [pc, #44]	; (800064c <MX_USART1_UART_Init+0x4c>)
 8000620:	2200      	movs	r2, #0
 8000622:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000624:	4b09      	ldr	r3, [pc, #36]	; (800064c <MX_USART1_UART_Init+0x4c>)
 8000626:	220c      	movs	r2, #12
 8000628:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800062a:	4b08      	ldr	r3, [pc, #32]	; (800064c <MX_USART1_UART_Init+0x4c>)
 800062c:	2200      	movs	r2, #0
 800062e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000630:	4b06      	ldr	r3, [pc, #24]	; (800064c <MX_USART1_UART_Init+0x4c>)
 8000632:	2200      	movs	r2, #0
 8000634:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000636:	4805      	ldr	r0, [pc, #20]	; (800064c <MX_USART1_UART_Init+0x4c>)
 8000638:	f001 fdb2 	bl	80021a0 <HAL_UART_Init>
 800063c:	4603      	mov	r3, r0
 800063e:	2b00      	cmp	r3, #0
 8000640:	d001      	beq.n	8000646 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000642:	f000 f885 	bl	8000750 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000646:	bf00      	nop
 8000648:	bd80      	pop	{r7, pc}
 800064a:	bf00      	nop
 800064c:	2000008c 	.word	0x2000008c
 8000650:	40013800 	.word	0x40013800

08000654 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000654:	b580      	push	{r7, lr}
 8000656:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000658:	4b11      	ldr	r3, [pc, #68]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 800065a:	4a12      	ldr	r2, [pc, #72]	; (80006a4 <MX_USART2_UART_Init+0x50>)
 800065c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800065e:	4b10      	ldr	r3, [pc, #64]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 8000660:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000664:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000666:	4b0e      	ldr	r3, [pc, #56]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 8000668:	2200      	movs	r2, #0
 800066a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800066c:	4b0c      	ldr	r3, [pc, #48]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 800066e:	2200      	movs	r2, #0
 8000670:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000672:	4b0b      	ldr	r3, [pc, #44]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 8000674:	2200      	movs	r2, #0
 8000676:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000678:	4b09      	ldr	r3, [pc, #36]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 800067a:	220c      	movs	r2, #12
 800067c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800067e:	4b08      	ldr	r3, [pc, #32]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 8000680:	2200      	movs	r2, #0
 8000682:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000684:	4b06      	ldr	r3, [pc, #24]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 8000686:	2200      	movs	r2, #0
 8000688:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800068a:	4805      	ldr	r0, [pc, #20]	; (80006a0 <MX_USART2_UART_Init+0x4c>)
 800068c:	f001 fd88 	bl	80021a0 <HAL_UART_Init>
 8000690:	4603      	mov	r3, r0
 8000692:	2b00      	cmp	r3, #0
 8000694:	d001      	beq.n	800069a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000696:	f000 f85b 	bl	8000750 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800069a:	bf00      	nop
 800069c:	bd80      	pop	{r7, pc}
 800069e:	bf00      	nop
 80006a0:	200000d0 	.word	0x200000d0
 80006a4:	40004400 	.word	0x40004400

080006a8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80006a8:	b580      	push	{r7, lr}
 80006aa:	b086      	sub	sp, #24
 80006ac:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80006ae:	f107 0308 	add.w	r3, r7, #8
 80006b2:	2200      	movs	r2, #0
 80006b4:	601a      	str	r2, [r3, #0]
 80006b6:	605a      	str	r2, [r3, #4]
 80006b8:	609a      	str	r2, [r3, #8]
 80006ba:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80006bc:	4b21      	ldr	r3, [pc, #132]	; (8000744 <MX_GPIO_Init+0x9c>)
 80006be:	699b      	ldr	r3, [r3, #24]
 80006c0:	4a20      	ldr	r2, [pc, #128]	; (8000744 <MX_GPIO_Init+0x9c>)
 80006c2:	f043 0310 	orr.w	r3, r3, #16
 80006c6:	6193      	str	r3, [r2, #24]
 80006c8:	4b1e      	ldr	r3, [pc, #120]	; (8000744 <MX_GPIO_Init+0x9c>)
 80006ca:	699b      	ldr	r3, [r3, #24]
 80006cc:	f003 0310 	and.w	r3, r3, #16
 80006d0:	607b      	str	r3, [r7, #4]
 80006d2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80006d4:	4b1b      	ldr	r3, [pc, #108]	; (8000744 <MX_GPIO_Init+0x9c>)
 80006d6:	699b      	ldr	r3, [r3, #24]
 80006d8:	4a1a      	ldr	r2, [pc, #104]	; (8000744 <MX_GPIO_Init+0x9c>)
 80006da:	f043 0304 	orr.w	r3, r3, #4
 80006de:	6193      	str	r3, [r2, #24]
 80006e0:	4b18      	ldr	r3, [pc, #96]	; (8000744 <MX_GPIO_Init+0x9c>)
 80006e2:	699b      	ldr	r3, [r3, #24]
 80006e4:	f003 0304 	and.w	r3, r3, #4
 80006e8:	603b      	str	r3, [r7, #0]
 80006ea:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80006ec:	2200      	movs	r2, #0
 80006ee:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80006f2:	4815      	ldr	r0, [pc, #84]	; (8000748 <MX_GPIO_Init+0xa0>)
 80006f4:	f001 f908 	bl	8001908 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RST_SIM_GPIO_Port, RST_SIM_Pin, GPIO_PIN_SET);
 80006f8:	2201      	movs	r2, #1
 80006fa:	2120      	movs	r1, #32
 80006fc:	4813      	ldr	r0, [pc, #76]	; (800074c <MX_GPIO_Init+0xa4>)
 80006fe:	f001 f903 	bl	8001908 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8000702:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000706:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000708:	2301      	movs	r3, #1
 800070a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800070c:	2302      	movs	r3, #2
 800070e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000710:	2302      	movs	r3, #2
 8000712:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000714:	f107 0308 	add.w	r3, r7, #8
 8000718:	4619      	mov	r1, r3
 800071a:	480b      	ldr	r0, [pc, #44]	; (8000748 <MX_GPIO_Init+0xa0>)
 800071c:	f000 ff70 	bl	8001600 <HAL_GPIO_Init>

  /*Configure GPIO pin : RST_SIM_Pin */
  GPIO_InitStruct.Pin = RST_SIM_Pin;
 8000720:	2320      	movs	r3, #32
 8000722:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000724:	2301      	movs	r3, #1
 8000726:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000728:	2301      	movs	r3, #1
 800072a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800072c:	2302      	movs	r3, #2
 800072e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(RST_SIM_GPIO_Port, &GPIO_InitStruct);
 8000730:	f107 0308 	add.w	r3, r7, #8
 8000734:	4619      	mov	r1, r3
 8000736:	4805      	ldr	r0, [pc, #20]	; (800074c <MX_GPIO_Init+0xa4>)
 8000738:	f000 ff62 	bl	8001600 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800073c:	bf00      	nop
 800073e:	3718      	adds	r7, #24
 8000740:	46bd      	mov	sp, r7
 8000742:	bd80      	pop	{r7, pc}
 8000744:	40021000 	.word	0x40021000
 8000748:	40011000 	.word	0x40011000
 800074c:	40010800 	.word	0x40010800

08000750 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000750:	b480      	push	{r7}
 8000752:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000754:	b672      	cpsid	i
}
 8000756:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000758:	e7fe      	b.n	8000758 <Error_Handler+0x8>
	...

0800075c <InitSIM>:
#include <string.h>
#include <stdio.h>


void InitSIM(SIM800* sim, UART_HandleTypeDef * huart,int print)
{
 800075c:	b580      	push	{r7, lr}
 800075e:	b084      	sub	sp, #16
 8000760:	af00      	add	r7, sp, #0
 8000762:	60f8      	str	r0, [r7, #12]
 8000764:	60b9      	str	r1, [r7, #8]
 8000766:	607a      	str	r2, [r7, #4]

	sim-> huart = huart;
 8000768:	68fb      	ldr	r3, [r7, #12]
 800076a:	68ba      	ldr	r2, [r7, #8]
 800076c:	601a      	str	r2, [r3, #0]
	memset(sim->response, 0, LENGTH);
 800076e:	68fb      	ldr	r3, [r7, #12]
 8000770:	3304      	adds	r3, #4
 8000772:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8000776:	2100      	movs	r1, #0
 8000778:	4618      	mov	r0, r3
 800077a:	f002 fcac 	bl	80030d6 <memset>
	memset(sim->txt_last_sms, 0, LEN_TXT);
 800077e:	68fb      	ldr	r3, [r7, #12]
 8000780:	f203 73d4 	addw	r3, r3, #2004	; 0x7d4
 8000784:	2264      	movs	r2, #100	; 0x64
 8000786:	2100      	movs	r1, #0
 8000788:	4618      	mov	r0, r3
 800078a:	f002 fca4 	bl	80030d6 <memset>

	memset(sim->buffer_largo,'c',LEN_BUF_LARGO);
 800078e:	68fb      	ldr	r3, [r7, #12]
 8000790:	f603 0338 	addw	r3, r3, #2104	; 0x838
 8000794:	f44f 72e1 	mov.w	r2, #450	; 0x1c2
 8000798:	2163      	movs	r1, #99	; 0x63
 800079a:	4618      	mov	r0, r3
 800079c:	f002 fc9b 	bl	80030d6 <memset>

	EnviarComandoAT(sim,"AT+CMGF=1\r\n",print); // Activa modo texto
 80007a0:	687a      	ldr	r2, [r7, #4]
 80007a2:	4906      	ldr	r1, [pc, #24]	; (80007bc <InitSIM+0x60>)
 80007a4:	68f8      	ldr	r0, [r7, #12]
 80007a6:	f000 f80d 	bl	80007c4 <EnviarComandoAT>
	EnviarComandoAT(sim,"AT+CNMI=2,1,0,0,0\r\n",print); // Configura recepcion de SMS
 80007aa:	687a      	ldr	r2, [r7, #4]
 80007ac:	4904      	ldr	r1, [pc, #16]	; (80007c0 <InitSIM+0x64>)
 80007ae:	68f8      	ldr	r0, [r7, #12]
 80007b0:	f000 f808 	bl	80007c4 <EnviarComandoAT>
												  // Esto es importante : Primer num: el 2 es para que guarde los msj en un buffer si la conexion Uart esta ocupada
												 // Segundo num: el 1 es para que guarde internamente los msj, despues para leerlos hay que usar CMGR. Si esto lo pones en 2 forwardea el msj directamente y no guarda nada


}
 80007b4:	bf00      	nop
 80007b6:	3710      	adds	r7, #16
 80007b8:	46bd      	mov	sp, r7
 80007ba:	bd80      	pop	{r7, pc}
 80007bc:	0800536c 	.word	0x0800536c
 80007c0:	08005378 	.word	0x08005378

080007c4 <EnviarComandoAT>:


void EnviarComandoAT(SIM800* sim, char* comando, int print)
{
 80007c4:	b580      	push	{r7, lr}
 80007c6:	b084      	sub	sp, #16
 80007c8:	af00      	add	r7, sp, #0
 80007ca:	60f8      	str	r0, [r7, #12]
 80007cc:	60b9      	str	r1, [r7, #8]
 80007ce:	607a      	str	r2, [r7, #4]
	Enviar(sim,comando);
 80007d0:	68b9      	ldr	r1, [r7, #8]
 80007d2:	68f8      	ldr	r0, [r7, #12]
 80007d4:	f000 f80b 	bl	80007ee <Enviar>
	WaitForAnswer(sim,print);
 80007d8:	6879      	ldr	r1, [r7, #4]
 80007da:	68f8      	ldr	r0, [r7, #12]
 80007dc:	f000 f81e 	bl	800081c <WaitForAnswer>
	HAL_Delay(100);
 80007e0:	2064      	movs	r0, #100	; 0x64
 80007e2:	f000 fd2b 	bl	800123c <HAL_Delay>
}
 80007e6:	bf00      	nop
 80007e8:	3710      	adds	r7, #16
 80007ea:	46bd      	mov	sp, r7
 80007ec:	bd80      	pop	{r7, pc}

080007ee <Enviar>:

void Enviar(SIM800 *sim, char * cadena)
{
 80007ee:	b590      	push	{r4, r7, lr}
 80007f0:	b083      	sub	sp, #12
 80007f2:	af00      	add	r7, sp, #0
 80007f4:	6078      	str	r0, [r7, #4]
 80007f6:	6039      	str	r1, [r7, #0]
	HAL_UART_Transmit (sim->huart, (uint8_t*) cadena, strlen(cadena),TIMEOUT);
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	681c      	ldr	r4, [r3, #0]
 80007fc:	6838      	ldr	r0, [r7, #0]
 80007fe:	f7ff fca5 	bl	800014c <strlen>
 8000802:	4603      	mov	r3, r0
 8000804:	b29a      	uxth	r2, r3
 8000806:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800080a:	6839      	ldr	r1, [r7, #0]
 800080c:	4620      	mov	r0, r4
 800080e:	f001 fd14 	bl	800223a <HAL_UART_Transmit>
}
 8000812:	bf00      	nop
 8000814:	370c      	adds	r7, #12
 8000816:	46bd      	mov	sp, r7
 8000818:	bd90      	pop	{r4, r7, pc}
	...

0800081c <WaitForAnswer>:


int WaitForAnswer(SIM800* sim,int print)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	b084      	sub	sp, #16
 8000820:	af00      	add	r7, sp, #0
 8000822:	6078      	str	r0, [r7, #4]
 8000824:	6039      	str	r1, [r7, #0]
	int counter=0;
 8000826:	2300      	movs	r3, #0
 8000828:	60fb      	str	r3, [r7, #12]
	Borrar_respuesta(sim);
 800082a:	6878      	ldr	r0, [r7, #4]
 800082c:	f000 fa64 	bl	8000cf8 <Borrar_respuesta>
	while((strlen(sim->response)==0) && (counter < WAIT_MAX / TIMEOUT) )
 8000830:	e00c      	b.n	800084c <WaitForAnswer+0x30>
	{
		counter++;
 8000832:	68fb      	ldr	r3, [r7, #12]
 8000834:	3301      	adds	r3, #1
 8000836:	60fb      	str	r3, [r7, #12]
		HAL_UART_Receive (sim->huart, (uint8_t*) sim->response, LENGTH,TIMEOUT);
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	6818      	ldr	r0, [r3, #0]
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	1d19      	adds	r1, r3, #4
 8000840:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000844:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8000848:	f001 fd89 	bl	800235e <HAL_UART_Receive>
	while((strlen(sim->response)==0) && (counter < WAIT_MAX / TIMEOUT) )
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	3304      	adds	r3, #4
 8000850:	781b      	ldrb	r3, [r3, #0]
 8000852:	2b00      	cmp	r3, #0
 8000854:	d102      	bne.n	800085c <WaitForAnswer+0x40>
 8000856:	68fb      	ldr	r3, [r7, #12]
 8000858:	2b13      	cmp	r3, #19
 800085a:	ddea      	ble.n	8000832 <WaitForAnswer+0x16>
	}
	if(print == 1)
 800085c:	683b      	ldr	r3, [r7, #0]
 800085e:	2b01      	cmp	r3, #1
 8000860:	d109      	bne.n	8000876 <WaitForAnswer+0x5a>
	{
		if(counter ==  WAIT_MAX / TIMEOUT)
 8000862:	68fb      	ldr	r3, [r7, #12]
 8000864:	2b14      	cmp	r3, #20
 8000866:	d103      	bne.n	8000870 <WaitForAnswer+0x54>
		{
			printf("Tiempo de espera agotado\r\n");
 8000868:	4808      	ldr	r0, [pc, #32]	; (800088c <WaitForAnswer+0x70>)
 800086a:	f002 fd9f 	bl	80033ac <puts>
 800086e:	e002      	b.n	8000876 <WaitForAnswer+0x5a>
		}
		else
		{
			Imprimir_respuesta(sim);
 8000870:	6878      	ldr	r0, [r7, #4]
 8000872:	f000 fa31 	bl	8000cd8 <Imprimir_respuesta>
		}

	}
	return (counter ==  WAIT_MAX / TIMEOUT)? 0:1;
 8000876:	68fb      	ldr	r3, [r7, #12]
 8000878:	2b14      	cmp	r3, #20
 800087a:	bf14      	ite	ne
 800087c:	2301      	movne	r3, #1
 800087e:	2300      	moveq	r3, #0
 8000880:	b2db      	uxtb	r3, r3
}
 8000882:	4618      	mov	r0, r3
 8000884:	3710      	adds	r7, #16
 8000886:	46bd      	mov	sp, r7
 8000888:	bd80      	pop	{r7, pc}
 800088a:	bf00      	nop
 800088c:	0800538c 	.word	0x0800538c

08000890 <isConnected>:

int isConnected(SIM800 *sim,int print)
{
 8000890:	b580      	push	{r7, lr}
 8000892:	b084      	sub	sp, #16
 8000894:	af00      	add	r7, sp, #0
 8000896:	6078      	str	r0, [r7, #4]
 8000898:	6039      	str	r1, [r7, #0]
	// Si esta conectado creg me devuelve 0,1. Espero a la coma y me fijo el siguiente caracter
	EnviarComandoAT(sim,"AT+CREG?\r\n",print);
 800089a:	683a      	ldr	r2, [r7, #0]
 800089c:	4913      	ldr	r1, [pc, #76]	; (80008ec <isConnected+0x5c>)
 800089e:	6878      	ldr	r0, [r7, #4]
 80008a0:	f7ff ff90 	bl	80007c4 <EnviarComandoAT>

	int index = 0;
 80008a4:	2300      	movs	r3, #0
 80008a6:	60fb      	str	r3, [r7, #12]
	while( (*(sim->response +index) != ',') && (*(sim->response+index) != '\0') )
 80008a8:	e002      	b.n	80008b0 <isConnected+0x20>
	{
		index++;
 80008aa:	68fb      	ldr	r3, [r7, #12]
 80008ac:	3301      	adds	r3, #1
 80008ae:	60fb      	str	r3, [r7, #12]
	while( (*(sim->response +index) != ',') && (*(sim->response+index) != '\0') )
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	1d1a      	adds	r2, r3, #4
 80008b4:	68fb      	ldr	r3, [r7, #12]
 80008b6:	4413      	add	r3, r2
 80008b8:	781b      	ldrb	r3, [r3, #0]
 80008ba:	2b2c      	cmp	r3, #44	; 0x2c
 80008bc:	d006      	beq.n	80008cc <isConnected+0x3c>
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	1d1a      	adds	r2, r3, #4
 80008c2:	68fb      	ldr	r3, [r7, #12]
 80008c4:	4413      	add	r3, r2
 80008c6:	781b      	ldrb	r3, [r3, #0]
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	d1ee      	bne.n	80008aa <isConnected+0x1a>
	}

	return (*(sim->response+index+1) == '1' )?1:0;
 80008cc:	687b      	ldr	r3, [r7, #4]
 80008ce:	1d1a      	adds	r2, r3, #4
 80008d0:	68fb      	ldr	r3, [r7, #12]
 80008d2:	3301      	adds	r3, #1
 80008d4:	4413      	add	r3, r2
 80008d6:	781b      	ldrb	r3, [r3, #0]
 80008d8:	2b31      	cmp	r3, #49	; 0x31
 80008da:	bf0c      	ite	eq
 80008dc:	2301      	moveq	r3, #1
 80008de:	2300      	movne	r3, #0
 80008e0:	b2db      	uxtb	r3, r3
}
 80008e2:	4618      	mov	r0, r3
 80008e4:	3710      	adds	r7, #16
 80008e6:	46bd      	mov	sp, r7
 80008e8:	bd80      	pop	{r7, pc}
 80008ea:	bf00      	nop
 80008ec:	080053a8 	.word	0x080053a8

080008f0 <InitGPRS>:


void InitGPRS(SIM800 *sim,int print)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b082      	sub	sp, #8
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	6078      	str	r0, [r7, #4]
 80008f8:	6039      	str	r1, [r7, #0]

	// Esto me parece que es innecesario...
	EnviarComandoAT(sim, "AT+CFUN=1\r\n",print);
 80008fa:	683a      	ldr	r2, [r7, #0]
 80008fc:	490b      	ldr	r1, [pc, #44]	; (800092c <InitGPRS+0x3c>)
 80008fe:	6878      	ldr	r0, [r7, #4]
 8000900:	f7ff ff60 	bl	80007c4 <EnviarComandoAT>

	//EnviarComandoAT(sim,"AT+CSTT=\"igprs.claro.com.ar\",\"ctigprs\",\"ctigprs999\"\r\n",print);
	EnviarComandoAT(sim,"AT+CSTT=\"igprs.claro.com.ar\",\"\",\"\"\r\n",print);
 8000904:	683a      	ldr	r2, [r7, #0]
 8000906:	490a      	ldr	r1, [pc, #40]	; (8000930 <InitGPRS+0x40>)
 8000908:	6878      	ldr	r0, [r7, #4]
 800090a:	f7ff ff5b 	bl	80007c4 <EnviarComandoAT>
		// Esto setea el APN contraseña y usuario de Claro. Sin esto se conecta igual a red celular pero no anda el GPRS

	EnviarComandoAT(sim,"AT+CIICR\r\n",print);	// Inicializa el GPRS
 800090e:	683a      	ldr	r2, [r7, #0]
 8000910:	4908      	ldr	r1, [pc, #32]	; (8000934 <InitGPRS+0x44>)
 8000912:	6878      	ldr	r0, [r7, #4]
 8000914:	f7ff ff56 	bl	80007c4 <EnviarComandoAT>


	EnviarComandoAT(sim,"AT+CIFSR\r\n",print);	// Debería imprimir el IP
 8000918:	683a      	ldr	r2, [r7, #0]
 800091a:	4907      	ldr	r1, [pc, #28]	; (8000938 <InitGPRS+0x48>)
 800091c:	6878      	ldr	r0, [r7, #4]
 800091e:	f7ff ff51 	bl	80007c4 <EnviarComandoAT>
}
 8000922:	bf00      	nop
 8000924:	3708      	adds	r7, #8
 8000926:	46bd      	mov	sp, r7
 8000928:	bd80      	pop	{r7, pc}
 800092a:	bf00      	nop
 800092c:	080053b4 	.word	0x080053b4
 8000930:	080053c0 	.word	0x080053c0
 8000934:	080053e8 	.word	0x080053e8
 8000938:	080053f4 	.word	0x080053f4

0800093c <EnviarAT>:



void EnviarAT(SIM800* sim)
{
 800093c:	b580      	push	{r7, lr}
 800093e:	b082      	sub	sp, #8
 8000940:	af00      	add	r7, sp, #0
 8000942:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT\r\n",1);
 8000944:	2201      	movs	r2, #1
 8000946:	4904      	ldr	r1, [pc, #16]	; (8000958 <EnviarAT+0x1c>)
 8000948:	6878      	ldr	r0, [r7, #4]
 800094a:	f7ff ff3b 	bl	80007c4 <EnviarComandoAT>
}
 800094e:	bf00      	nop
 8000950:	3708      	adds	r7, #8
 8000952:	46bd      	mov	sp, r7
 8000954:	bd80      	pop	{r7, pc}
 8000956:	bf00      	nop
 8000958:	08005400 	.word	0x08005400

0800095c <TestGPRS>:

void TestGPRS(SIM800* sim,int print)
{
 800095c:	b5b0      	push	{r4, r5, r7, lr}
 800095e:	b0ce      	sub	sp, #312	; 0x138
 8000960:	af00      	add	r7, sp, #0
 8000962:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000966:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 800096a:	6018      	str	r0, [r3, #0]
 800096c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000970:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8000974:	6019      	str	r1, [r3, #0]

	char cmd [LEN_TXT] = "AT+CIPSTART=\"TCP\",\"httpbin.org\",80\r\n";
 8000976:	4b40      	ldr	r3, [pc, #256]	; (8000a78 <TestGPRS+0x11c>)
 8000978:	f107 04d4 	add.w	r4, r7, #212	; 0xd4
 800097c:	461d      	mov	r5, r3
 800097e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000980:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000982:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000984:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000986:	e895 0003 	ldmia.w	r5, {r0, r1}
 800098a:	6020      	str	r0, [r4, #0]
 800098c:	3404      	adds	r4, #4
 800098e:	7021      	strb	r1, [r4, #0]
 8000990:	f107 03f9 	add.w	r3, r7, #249	; 0xf9
 8000994:	223f      	movs	r2, #63	; 0x3f
 8000996:	2100      	movs	r1, #0
 8000998:	4618      	mov	r0, r3
 800099a:	f002 fb9c 	bl	80030d6 <memset>
	EnviarComandoAT(sim,cmd,print);
 800099e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 80009a2:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 80009a6:	f107 01d4 	add.w	r1, r7, #212	; 0xd4
 80009aa:	f507 739c 	add.w	r3, r7, #312	; 0x138
 80009ae:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 80009b2:	6812      	ldr	r2, [r2, #0]
 80009b4:	6818      	ldr	r0, [r3, #0]
 80009b6:	f7ff ff05 	bl	80007c4 <EnviarComandoAT>
	WaitForAnswer(sim, 1); // Aca espero dos veces porque primero va el OK y despues el connect OK
 80009ba:	f507 739c 	add.w	r3, r7, #312	; 0x138
 80009be:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 80009c2:	2101      	movs	r1, #1
 80009c4:	6818      	ldr	r0, [r3, #0]
 80009c6:	f7ff ff29 	bl	800081c <WaitForAnswer>

	// HTTP Request:
	char cmd2 [LEN_TXT] = "GET /get HTTP/1.1\r\nHost: httpbin.org\r\nAccept: */* \r\n\r\n";
 80009ca:	4b2c      	ldr	r3, [pc, #176]	; (8000a7c <TestGPRS+0x120>)
 80009cc:	f107 0470 	add.w	r4, r7, #112	; 0x70
 80009d0:	461d      	mov	r5, r3
 80009d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80009d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80009d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80009d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80009da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80009dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80009de:	e895 0003 	ldmia.w	r5, {r0, r1}
 80009e2:	6020      	str	r0, [r4, #0]
 80009e4:	3404      	adds	r4, #4
 80009e6:	8021      	strh	r1, [r4, #0]
 80009e8:	3402      	adds	r4, #2
 80009ea:	0c0b      	lsrs	r3, r1, #16
 80009ec:	7023      	strb	r3, [r4, #0]
 80009ee:	f107 03a7 	add.w	r3, r7, #167	; 0xa7
 80009f2:	222d      	movs	r2, #45	; 0x2d
 80009f4:	2100      	movs	r1, #0
 80009f6:	4618      	mov	r0, r3
 80009f8:	f002 fb6d 	bl	80030d6 <memset>
	char cmd3 [LEN_TXT];
	sprintf(cmd3,"AT+CIPSEND=%d\r\n",strlen(cmd2));
 80009fc:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000a00:	4618      	mov	r0, r3
 8000a02:	f7ff fba3 	bl	800014c <strlen>
 8000a06:	4602      	mov	r2, r0
 8000a08:	f107 030c 	add.w	r3, r7, #12
 8000a0c:	491c      	ldr	r1, [pc, #112]	; (8000a80 <TestGPRS+0x124>)
 8000a0e:	4618      	mov	r0, r3
 8000a10:	f002 fdc2 	bl	8003598 <siprintf>
	EnviarComandoAT(sim,cmd3,print);
 8000a14:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000a18:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 8000a1c:	f107 010c 	add.w	r1, r7, #12
 8000a20:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000a24:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 8000a28:	6812      	ldr	r2, [r2, #0]
 8000a2a:	6818      	ldr	r0, [r3, #0]
 8000a2c:	f7ff feca 	bl	80007c4 <EnviarComandoAT>

	EnviarComandoAT(sim,cmd2,print);
 8000a30:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000a34:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 8000a38:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8000a3c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000a40:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 8000a44:	6812      	ldr	r2, [r2, #0]
 8000a46:	6818      	ldr	r0, [r3, #0]
 8000a48:	f7ff febc 	bl	80007c4 <EnviarComandoAT>

	// Esperamos la respuesta y despues cerramos
	WaitForAnswer(sim,1);
 8000a4c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000a50:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 8000a54:	2101      	movs	r1, #1
 8000a56:	6818      	ldr	r0, [r3, #0]
 8000a58:	f7ff fee0 	bl	800081c <WaitForAnswer>
	WaitForAnswer(sim,1);
 8000a5c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 8000a60:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 8000a64:	2101      	movs	r1, #1
 8000a66:	6818      	ldr	r0, [r3, #0]
 8000a68:	f7ff fed8 	bl	800081c <WaitForAnswer>

}
 8000a6c:	bf00      	nop
 8000a6e:	f507 779c 	add.w	r7, r7, #312	; 0x138
 8000a72:	46bd      	mov	sp, r7
 8000a74:	bdb0      	pop	{r4, r5, r7, pc}
 8000a76:	bf00      	nop
 8000a78:	08005418 	.word	0x08005418
 8000a7c:	0800547c 	.word	0x0800547c
 8000a80:	08005408 	.word	0x08005408

08000a84 <SendTCPtoIP>:

// IMPORTANTE -> Esto anda hasta 450 bytes en msj sino se traba todo!

void SendTCPtoIP(SIM800* sim, char * msj, char* IP, int port,int print)
{
 8000a84:	b580      	push	{r7, lr}
 8000a86:	b0b6      	sub	sp, #216	; 0xd8
 8000a88:	af00      	add	r7, sp, #0
 8000a8a:	60f8      	str	r0, [r7, #12]
 8000a8c:	60b9      	str	r1, [r7, #8]
 8000a8e:	607a      	str	r2, [r7, #4]
 8000a90:	603b      	str	r3, [r7, #0]
	if(strlen(msj)<=450)
 8000a92:	68b8      	ldr	r0, [r7, #8]
 8000a94:	f7ff fb5a 	bl	800014c <strlen>
 8000a98:	4603      	mov	r3, r0
 8000a9a:	f5b3 7fe1 	cmp.w	r3, #450	; 0x1c2
 8000a9e:	d837      	bhi.n	8000b10 <SendTCPtoIP+0x8c>
	{
		EnviarComandoAT(sim,"AT+CIFSR\r\n",print);	// Debería imprimir el IP
 8000aa0:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8000aa4:	491e      	ldr	r1, [pc, #120]	; (8000b20 <SendTCPtoIP+0x9c>)
 8000aa6:	68f8      	ldr	r0, [r7, #12]
 8000aa8:	f7ff fe8c 	bl	80007c4 <EnviarComandoAT>

		char cmd [LEN_TXT];
		sprintf(cmd,"AT+CIPSTART=\"TCP\",\"%s\",%d\r\n",IP,port);
 8000aac:	f107 0010 	add.w	r0, r7, #16
 8000ab0:	683b      	ldr	r3, [r7, #0]
 8000ab2:	687a      	ldr	r2, [r7, #4]
 8000ab4:	491b      	ldr	r1, [pc, #108]	; (8000b24 <SendTCPtoIP+0xa0>)
 8000ab6:	f002 fd6f 	bl	8003598 <siprintf>
		EnviarComandoAT(sim,cmd,print);
 8000aba:	f107 0310 	add.w	r3, r7, #16
 8000abe:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8000ac2:	4619      	mov	r1, r3
 8000ac4:	68f8      	ldr	r0, [r7, #12]
 8000ac6:	f7ff fe7d 	bl	80007c4 <EnviarComandoAT>
		WaitForAnswer(sim, 1); // Aca espero dos veces porque primero va el OK y despues el connect OK
 8000aca:	2101      	movs	r1, #1
 8000acc:	68f8      	ldr	r0, [r7, #12]
 8000ace:	f7ff fea5 	bl	800081c <WaitForAnswer>

		char cmd2 [LEN_TXT];
		sprintf(cmd2,"AT+CIPSEND=%d\r\n",strlen(msj));
 8000ad2:	68b8      	ldr	r0, [r7, #8]
 8000ad4:	f7ff fb3a 	bl	800014c <strlen>
 8000ad8:	4602      	mov	r2, r0
 8000ada:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000ade:	4912      	ldr	r1, [pc, #72]	; (8000b28 <SendTCPtoIP+0xa4>)
 8000ae0:	4618      	mov	r0, r3
 8000ae2:	f002 fd59 	bl	8003598 <siprintf>
		EnviarComandoAT(sim,cmd2,print);
 8000ae6:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000aea:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8000aee:	4619      	mov	r1, r3
 8000af0:	68f8      	ldr	r0, [r7, #12]
 8000af2:	f7ff fe67 	bl	80007c4 <EnviarComandoAT>
		EnviarComandoAT(sim,msj,print);
 8000af6:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8000afa:	68b9      	ldr	r1, [r7, #8]
 8000afc:	68f8      	ldr	r0, [r7, #12]
 8000afe:	f7ff fe61 	bl	80007c4 <EnviarComandoAT>
		EnviarComandoAT(sim,"AT+CIPCLOSE\r\n",print);
 8000b02:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8000b06:	4909      	ldr	r1, [pc, #36]	; (8000b2c <SendTCPtoIP+0xa8>)
 8000b08:	68f8      	ldr	r0, [r7, #12]
 8000b0a:	f7ff fe5b 	bl	80007c4 <EnviarComandoAT>
	{
		printf("Msj demasiado largo para mandar de esta forma \r\n");
	}


}
 8000b0e:	e002      	b.n	8000b16 <SendTCPtoIP+0x92>
		printf("Msj demasiado largo para mandar de esta forma \r\n");
 8000b10:	4807      	ldr	r0, [pc, #28]	; (8000b30 <SendTCPtoIP+0xac>)
 8000b12:	f002 fc4b 	bl	80033ac <puts>
}
 8000b16:	bf00      	nop
 8000b18:	37d8      	adds	r7, #216	; 0xd8
 8000b1a:	46bd      	mov	sp, r7
 8000b1c:	bd80      	pop	{r7, pc}
 8000b1e:	bf00      	nop
 8000b20:	080053f4 	.word	0x080053f4
 8000b24:	080054e0 	.word	0x080054e0
 8000b28:	08005408 	.word	0x08005408
 8000b2c:	080054fc 	.word	0x080054fc
 8000b30:	0800550c 	.word	0x0800550c

08000b34 <EnviarPuertoSerie>:
	WaitForAnswer(sim,1);
}


void EnviarPuertoSerie(SIM800 *sim)
{
 8000b34:	b580      	push	{r7, lr}
 8000b36:	b090      	sub	sp, #64	; 0x40
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	6078      	str	r0, [r7, #4]
	char msj [LEN_CMD];
	fflush(stdin);
 8000b3c:	4b18      	ldr	r3, [pc, #96]	; (8000ba0 <EnviarPuertoSerie+0x6c>)
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	685b      	ldr	r3, [r3, #4]
 8000b42:	4618      	mov	r0, r3
 8000b44:	f002 f96a 	bl	8002e1c <fflush>
	scanf("%[^\r\n]", msj);
 8000b48:	f107 030c 	add.w	r3, r7, #12
 8000b4c:	4619      	mov	r1, r3
 8000b4e:	4815      	ldr	r0, [pc, #84]	; (8000ba4 <EnviarPuertoSerie+0x70>)
 8000b50:	f002 fc44 	bl	80033dc <iscanf>
	strcat(msj,"\r\n");
 8000b54:	f107 030c 	add.w	r3, r7, #12
 8000b58:	4618      	mov	r0, r3
 8000b5a:	f7ff faf7 	bl	800014c <strlen>
 8000b5e:	4603      	mov	r3, r0
 8000b60:	461a      	mov	r2, r3
 8000b62:	f107 030c 	add.w	r3, r7, #12
 8000b66:	4413      	add	r3, r2
 8000b68:	4a0f      	ldr	r2, [pc, #60]	; (8000ba8 <EnviarPuertoSerie+0x74>)
 8000b6a:	8811      	ldrh	r1, [r2, #0]
 8000b6c:	7892      	ldrb	r2, [r2, #2]
 8000b6e:	8019      	strh	r1, [r3, #0]
 8000b70:	709a      	strb	r2, [r3, #2]

	printf("Enviando: %s",msj);
 8000b72:	f107 030c 	add.w	r3, r7, #12
 8000b76:	4619      	mov	r1, r3
 8000b78:	480c      	ldr	r0, [pc, #48]	; (8000bac <EnviarPuertoSerie+0x78>)
 8000b7a:	f002 fb91 	bl	80032a0 <iprintf>
	fflush(stdin);
 8000b7e:	4b08      	ldr	r3, [pc, #32]	; (8000ba0 <EnviarPuertoSerie+0x6c>)
 8000b80:	681b      	ldr	r3, [r3, #0]
 8000b82:	685b      	ldr	r3, [r3, #4]
 8000b84:	4618      	mov	r0, r3
 8000b86:	f002 f949 	bl	8002e1c <fflush>
	EnviarComandoAT(sim,msj,1);
 8000b8a:	f107 030c 	add.w	r3, r7, #12
 8000b8e:	2201      	movs	r2, #1
 8000b90:	4619      	mov	r1, r3
 8000b92:	6878      	ldr	r0, [r7, #4]
 8000b94:	f7ff fe16 	bl	80007c4 <EnviarComandoAT>
}
 8000b98:	bf00      	nop
 8000b9a:	3740      	adds	r7, #64	; 0x40
 8000b9c:	46bd      	mov	sp, r7
 8000b9e:	bd80      	pop	{r7, pc}
 8000ba0:	2000000c 	.word	0x2000000c
 8000ba4:	0800553c 	.word	0x0800553c
 8000ba8:	08005544 	.word	0x08005544
 8000bac:	08005548 	.word	0x08005548

08000bb0 <ConsultarSignal>:


void ConsultarSignal(SIM800* sim)
{
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	b082      	sub	sp, #8
 8000bb4:	af00      	add	r7, sp, #0
 8000bb6:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT+CSQ\r\n",1);
 8000bb8:	2201      	movs	r2, #1
 8000bba:	4904      	ldr	r1, [pc, #16]	; (8000bcc <ConsultarSignal+0x1c>)
 8000bbc:	6878      	ldr	r0, [r7, #4]
 8000bbe:	f7ff fe01 	bl	80007c4 <EnviarComandoAT>
}
 8000bc2:	bf00      	nop
 8000bc4:	3708      	adds	r7, #8
 8000bc6:	46bd      	mov	sp, r7
 8000bc8:	bd80      	pop	{r7, pc}
 8000bca:	bf00      	nop
 8000bcc:	08005558 	.word	0x08005558

08000bd0 <ConsultarEstadoSIM>:

void ConsultarEstadoSIM(SIM800* sim)
{
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	b082      	sub	sp, #8
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT+CPIN?\r\n",1);
 8000bd8:	2201      	movs	r2, #1
 8000bda:	4904      	ldr	r1, [pc, #16]	; (8000bec <ConsultarEstadoSIM+0x1c>)
 8000bdc:	6878      	ldr	r0, [r7, #4]
 8000bde:	f7ff fdf1 	bl	80007c4 <EnviarComandoAT>
}
 8000be2:	bf00      	nop
 8000be4:	3708      	adds	r7, #8
 8000be6:	46bd      	mov	sp, r7
 8000be8:	bd80      	pop	{r7, pc}
 8000bea:	bf00      	nop
 8000bec:	08005564 	.word	0x08005564

08000bf0 <ListarRedesDisponibles>:

void ListarRedesDisponibles(SIM800* sim)
{
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b082      	sub	sp, #8
 8000bf4:	af00      	add	r7, sp, #0
 8000bf6:	6078      	str	r0, [r7, #4]
	EnviarComandoAT(sim,"AT+COPS=?\r\n",1);
 8000bf8:	2201      	movs	r2, #1
 8000bfa:	4906      	ldr	r1, [pc, #24]	; (8000c14 <ListarRedesDisponibles+0x24>)
 8000bfc:	6878      	ldr	r0, [r7, #4]
 8000bfe:	f7ff fde1 	bl	80007c4 <EnviarComandoAT>
	WaitForAnswer(sim,1);
 8000c02:	2101      	movs	r1, #1
 8000c04:	6878      	ldr	r0, [r7, #4]
 8000c06:	f7ff fe09 	bl	800081c <WaitForAnswer>
}
 8000c0a:	bf00      	nop
 8000c0c:	3708      	adds	r7, #8
 8000c0e:	46bd      	mov	sp, r7
 8000c10:	bd80      	pop	{r7, pc}
 8000c12:	bf00      	nop
 8000c14:	08005570 	.word	0x08005570

08000c18 <EnviarSMS>:

void EnviarSMS(SIM800 * sim, char * numero, char* mensaje, int print )
{
 8000c18:	b580      	push	{r7, lr}
 8000c1a:	b092      	sub	sp, #72	; 0x48
 8000c1c:	af00      	add	r7, sp, #0
 8000c1e:	60f8      	str	r0, [r7, #12]
 8000c20:	60b9      	str	r1, [r7, #8]
 8000c22:	607a      	str	r2, [r7, #4]
 8000c24:	603b      	str	r3, [r7, #0]
	char cmd [LEN_CMD];

	sprintf(cmd,"AT+CMGS=\"%s\"\r\n",numero);
 8000c26:	f107 0314 	add.w	r3, r7, #20
 8000c2a:	68ba      	ldr	r2, [r7, #8]
 8000c2c:	490b      	ldr	r1, [pc, #44]	; (8000c5c <EnviarSMS+0x44>)
 8000c2e:	4618      	mov	r0, r3
 8000c30:	f002 fcb2 	bl	8003598 <siprintf>

	EnviarComandoAT(sim,cmd,print);
 8000c34:	f107 0314 	add.w	r3, r7, #20
 8000c38:	683a      	ldr	r2, [r7, #0]
 8000c3a:	4619      	mov	r1, r3
 8000c3c:	68f8      	ldr	r0, [r7, #12]
 8000c3e:	f7ff fdc1 	bl	80007c4 <EnviarComandoAT>

	Enviar(sim,mensaje);
 8000c42:	6879      	ldr	r1, [r7, #4]
 8000c44:	68f8      	ldr	r0, [r7, #12]
 8000c46:	f7ff fdd2 	bl	80007ee <Enviar>
	Enviar(sim,"\r\n\032");
 8000c4a:	4905      	ldr	r1, [pc, #20]	; (8000c60 <EnviarSMS+0x48>)
 8000c4c:	68f8      	ldr	r0, [r7, #12]
 8000c4e:	f7ff fdce 	bl	80007ee <Enviar>

}
 8000c52:	bf00      	nop
 8000c54:	3748      	adds	r7, #72	; 0x48
 8000c56:	46bd      	mov	sp, r7
 8000c58:	bd80      	pop	{r7, pc}
 8000c5a:	bf00      	nop
 8000c5c:	0800557c 	.word	0x0800557c
 8000c60:	0800558c 	.word	0x0800558c

08000c64 <LeerSMS_i>:
{
	EnviarComandoAT(sim,"AT+CMGDA=\"DEL ALL\"\r\n",print);
}

void LeerSMS_i(SIM800 *sim, int i, int print)
{
 8000c64:	b580      	push	{r7, lr}
 8000c66:	b092      	sub	sp, #72	; 0x48
 8000c68:	af00      	add	r7, sp, #0
 8000c6a:	60f8      	str	r0, [r7, #12]
 8000c6c:	60b9      	str	r1, [r7, #8]
 8000c6e:	607a      	str	r2, [r7, #4]
	char msj [LEN_CMD];
	sprintf(msj,"AT+CMGR=%d\r\n",i);
 8000c70:	f107 0314 	add.w	r3, r7, #20
 8000c74:	68ba      	ldr	r2, [r7, #8]
 8000c76:	4907      	ldr	r1, [pc, #28]	; (8000c94 <LeerSMS_i+0x30>)
 8000c78:	4618      	mov	r0, r3
 8000c7a:	f002 fc8d 	bl	8003598 <siprintf>
	EnviarComandoAT(sim,msj,print);
 8000c7e:	f107 0314 	add.w	r3, r7, #20
 8000c82:	687a      	ldr	r2, [r7, #4]
 8000c84:	4619      	mov	r1, r3
 8000c86:	68f8      	ldr	r0, [r7, #12]
 8000c88:	f7ff fd9c 	bl	80007c4 <EnviarComandoAT>
}
 8000c8c:	bf00      	nop
 8000c8e:	3748      	adds	r7, #72	; 0x48
 8000c90:	46bd      	mov	sp, r7
 8000c92:	bd80      	pop	{r7, pc}
 8000c94:	080055b8 	.word	0x080055b8

08000c98 <ListenSMS>:

int ListenSMS(SIM800 * sim)
{
 8000c98:	b580      	push	{r7, lr}
 8000c9a:	b084      	sub	sp, #16
 8000c9c:	af00      	add	r7, sp, #0
 8000c9e:	6078      	str	r0, [r7, #4]
	if ( WaitForAnswer(sim, 0) == 1)
 8000ca0:	2100      	movs	r1, #0
 8000ca2:	6878      	ldr	r0, [r7, #4]
 8000ca4:	f7ff fdba 	bl	800081c <WaitForAnswer>
 8000ca8:	4603      	mov	r3, r0
 8000caa:	2b01      	cmp	r3, #1
 8000cac:	d10f      	bne.n	8000cce <ListenSMS+0x36>
	{
		int indice = ExtraerIndiceCMTI(sim->response);
 8000cae:	687b      	ldr	r3, [r7, #4]
 8000cb0:	3304      	adds	r3, #4
 8000cb2:	4618      	mov	r0, r3
 8000cb4:	f000 f830 	bl	8000d18 <ExtraerIndiceCMTI>
 8000cb8:	60f8      	str	r0, [r7, #12]
		ExtraerTextoDeSMS(sim,indice,sim->txt_last_sms);
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	f203 73d4 	addw	r3, r3, #2004	; 0x7d4
 8000cc0:	461a      	mov	r2, r3
 8000cc2:	68f9      	ldr	r1, [r7, #12]
 8000cc4:	6878      	ldr	r0, [r7, #4]
 8000cc6:	f000 f842 	bl	8000d4e <ExtraerTextoDeSMS>
		return 1;
 8000cca:	2301      	movs	r3, #1
 8000ccc:	e000      	b.n	8000cd0 <ListenSMS+0x38>
	}
	return 0;
 8000cce:	2300      	movs	r3, #0
}
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	3710      	adds	r7, #16
 8000cd4:	46bd      	mov	sp, r7
 8000cd6:	bd80      	pop	{r7, pc}

08000cd8 <Imprimir_respuesta>:

void Imprimir_respuesta(SIM800 *sim)
{
 8000cd8:	b580      	push	{r7, lr}
 8000cda:	b082      	sub	sp, #8
 8000cdc:	af00      	add	r7, sp, #0
 8000cde:	6078      	str	r0, [r7, #4]
	printf("Respuesta: %s\r\n",sim->response);
 8000ce0:	687b      	ldr	r3, [r7, #4]
 8000ce2:	3304      	adds	r3, #4
 8000ce4:	4619      	mov	r1, r3
 8000ce6:	4803      	ldr	r0, [pc, #12]	; (8000cf4 <Imprimir_respuesta+0x1c>)
 8000ce8:	f002 fada 	bl	80032a0 <iprintf>
}
 8000cec:	bf00      	nop
 8000cee:	3708      	adds	r7, #8
 8000cf0:	46bd      	mov	sp, r7
 8000cf2:	bd80      	pop	{r7, pc}
 8000cf4:	080055c8 	.word	0x080055c8

08000cf8 <Borrar_respuesta>:

void Borrar_respuesta(SIM800 *sim)
{
 8000cf8:	b580      	push	{r7, lr}
 8000cfa:	b082      	sub	sp, #8
 8000cfc:	af00      	add	r7, sp, #0
 8000cfe:	6078      	str	r0, [r7, #4]
	memset(sim->response, 0, LENGTH);
 8000d00:	687b      	ldr	r3, [r7, #4]
 8000d02:	3304      	adds	r3, #4
 8000d04:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8000d08:	2100      	movs	r1, #0
 8000d0a:	4618      	mov	r0, r3
 8000d0c:	f002 f9e3 	bl	80030d6 <memset>
}
 8000d10:	bf00      	nop
 8000d12:	3708      	adds	r7, #8
 8000d14:	46bd      	mov	sp, r7
 8000d16:	bd80      	pop	{r7, pc}

08000d18 <ExtraerIndiceCMTI>:

int ExtraerIndiceCMTI(char * codigo)
{
 8000d18:	b480      	push	{r7}
 8000d1a:	b085      	sub	sp, #20
 8000d1c:	af00      	add	r7, sp, #0
 8000d1e:	6078      	str	r0, [r7, #4]
	// Forma del codigo -> +CMTI: "SM",5

	int i = 0;
 8000d20:	2300      	movs	r3, #0
 8000d22:	60fb      	str	r3, [r7, #12]
	while(*(codigo+i) !=',' ){i++;}
 8000d24:	e002      	b.n	8000d2c <ExtraerIndiceCMTI+0x14>
 8000d26:	68fb      	ldr	r3, [r7, #12]
 8000d28:	3301      	adds	r3, #1
 8000d2a:	60fb      	str	r3, [r7, #12]
 8000d2c:	68fb      	ldr	r3, [r7, #12]
 8000d2e:	687a      	ldr	r2, [r7, #4]
 8000d30:	4413      	add	r3, r2
 8000d32:	781b      	ldrb	r3, [r3, #0]
 8000d34:	2b2c      	cmp	r3, #44	; 0x2c
 8000d36:	d1f6      	bne.n	8000d26 <ExtraerIndiceCMTI+0xe>

	return *(codigo+i+1)-48;	// Para pasarlo a entero
 8000d38:	68fb      	ldr	r3, [r7, #12]
 8000d3a:	3301      	adds	r3, #1
 8000d3c:	687a      	ldr	r2, [r7, #4]
 8000d3e:	4413      	add	r3, r2
 8000d40:	781b      	ldrb	r3, [r3, #0]
 8000d42:	3b30      	subs	r3, #48	; 0x30
}
 8000d44:	4618      	mov	r0, r3
 8000d46:	3714      	adds	r7, #20
 8000d48:	46bd      	mov	sp, r7
 8000d4a:	bc80      	pop	{r7}
 8000d4c:	4770      	bx	lr

08000d4e <ExtraerTextoDeSMS>:

void ExtraerTextoDeSMS(SIM800 *sim, int indice, char * texto)
{
 8000d4e:	b580      	push	{r7, lr}
 8000d50:	b088      	sub	sp, #32
 8000d52:	af00      	add	r7, sp, #0
 8000d54:	60f8      	str	r0, [r7, #12]
 8000d56:	60b9      	str	r1, [r7, #8]
 8000d58:	607a      	str	r2, [r7, #4]
	LeerSMS_i(sim,indice,0);
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	68b9      	ldr	r1, [r7, #8]
 8000d5e:	68f8      	ldr	r0, [r7, #12]
 8000d60:	f7ff ff80 	bl	8000c64 <LeerSMS_i>
	// Extrae el texto del SMS guardado en la posicion i
	// Formato del codigo -> 3,"READ/UNREAD","NUM","","FECHA" MSJ
	// Voy a contar comillas, serían 8

	int comillas = 0;
 8000d64:	2300      	movs	r3, #0
 8000d66:	61fb      	str	r3, [r7, #28]
	int tam_header = 0;
 8000d68:	2300      	movs	r3, #0
 8000d6a:	61bb      	str	r3, [r7, #24]
	while(comillas < 8)
 8000d6c:	e00c      	b.n	8000d88 <ExtraerTextoDeSMS+0x3a>
	{
		if(*(sim->response + tam_header) == '"') { comillas++; }
 8000d6e:	68fb      	ldr	r3, [r7, #12]
 8000d70:	1d1a      	adds	r2, r3, #4
 8000d72:	69bb      	ldr	r3, [r7, #24]
 8000d74:	4413      	add	r3, r2
 8000d76:	781b      	ldrb	r3, [r3, #0]
 8000d78:	2b22      	cmp	r3, #34	; 0x22
 8000d7a:	d102      	bne.n	8000d82 <ExtraerTextoDeSMS+0x34>
 8000d7c:	69fb      	ldr	r3, [r7, #28]
 8000d7e:	3301      	adds	r3, #1
 8000d80:	61fb      	str	r3, [r7, #28]
		tam_header++;
 8000d82:	69bb      	ldr	r3, [r7, #24]
 8000d84:	3301      	adds	r3, #1
 8000d86:	61bb      	str	r3, [r7, #24]
	while(comillas < 8)
 8000d88:	69fb      	ldr	r3, [r7, #28]
 8000d8a:	2b07      	cmp	r3, #7
 8000d8c:	ddef      	ble.n	8000d6e <ExtraerTextoDeSMS+0x20>
	}

	int j;

	for (j = 0; j<strlen(sim->response)-tam_header;j++)
 8000d8e:	2300      	movs	r3, #0
 8000d90:	617b      	str	r3, [r7, #20]
 8000d92:	e00d      	b.n	8000db0 <ExtraerTextoDeSMS+0x62>
	{
		*(texto+j) = *(sim->response + tam_header + j);
 8000d94:	68fb      	ldr	r3, [r7, #12]
 8000d96:	1d1a      	adds	r2, r3, #4
 8000d98:	69b9      	ldr	r1, [r7, #24]
 8000d9a:	697b      	ldr	r3, [r7, #20]
 8000d9c:	440b      	add	r3, r1
 8000d9e:	441a      	add	r2, r3
 8000da0:	697b      	ldr	r3, [r7, #20]
 8000da2:	6879      	ldr	r1, [r7, #4]
 8000da4:	440b      	add	r3, r1
 8000da6:	7812      	ldrb	r2, [r2, #0]
 8000da8:	701a      	strb	r2, [r3, #0]
	for (j = 0; j<strlen(sim->response)-tam_header;j++)
 8000daa:	697b      	ldr	r3, [r7, #20]
 8000dac:	3301      	adds	r3, #1
 8000dae:	617b      	str	r3, [r7, #20]
 8000db0:	68fb      	ldr	r3, [r7, #12]
 8000db2:	3304      	adds	r3, #4
 8000db4:	4618      	mov	r0, r3
 8000db6:	f7ff f9c9 	bl	800014c <strlen>
 8000dba:	4602      	mov	r2, r0
 8000dbc:	69bb      	ldr	r3, [r7, #24]
 8000dbe:	1ad2      	subs	r2, r2, r3
 8000dc0:	697b      	ldr	r3, [r7, #20]
 8000dc2:	429a      	cmp	r2, r3
 8000dc4:	d8e6      	bhi.n	8000d94 <ExtraerTextoDeSMS+0x46>
	}
	*(texto+j+1)='\0';
 8000dc6:	697b      	ldr	r3, [r7, #20]
 8000dc8:	3301      	adds	r3, #1
 8000dca:	687a      	ldr	r2, [r7, #4]
 8000dcc:	4413      	add	r3, r2
 8000dce:	2200      	movs	r2, #0
 8000dd0:	701a      	strb	r2, [r3, #0]
}
 8000dd2:	bf00      	nop
 8000dd4:	3720      	adds	r7, #32
 8000dd6:	46bd      	mov	sp, r7
 8000dd8:	bd80      	pop	{r7, pc}
	...

08000ddc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000ddc:	b480      	push	{r7}
 8000dde:	b085      	sub	sp, #20
 8000de0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000de2:	4b15      	ldr	r3, [pc, #84]	; (8000e38 <HAL_MspInit+0x5c>)
 8000de4:	699b      	ldr	r3, [r3, #24]
 8000de6:	4a14      	ldr	r2, [pc, #80]	; (8000e38 <HAL_MspInit+0x5c>)
 8000de8:	f043 0301 	orr.w	r3, r3, #1
 8000dec:	6193      	str	r3, [r2, #24]
 8000dee:	4b12      	ldr	r3, [pc, #72]	; (8000e38 <HAL_MspInit+0x5c>)
 8000df0:	699b      	ldr	r3, [r3, #24]
 8000df2:	f003 0301 	and.w	r3, r3, #1
 8000df6:	60bb      	str	r3, [r7, #8]
 8000df8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000dfa:	4b0f      	ldr	r3, [pc, #60]	; (8000e38 <HAL_MspInit+0x5c>)
 8000dfc:	69db      	ldr	r3, [r3, #28]
 8000dfe:	4a0e      	ldr	r2, [pc, #56]	; (8000e38 <HAL_MspInit+0x5c>)
 8000e00:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e04:	61d3      	str	r3, [r2, #28]
 8000e06:	4b0c      	ldr	r3, [pc, #48]	; (8000e38 <HAL_MspInit+0x5c>)
 8000e08:	69db      	ldr	r3, [r3, #28]
 8000e0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e0e:	607b      	str	r3, [r7, #4]
 8000e10:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000e12:	4b0a      	ldr	r3, [pc, #40]	; (8000e3c <HAL_MspInit+0x60>)
 8000e14:	685b      	ldr	r3, [r3, #4]
 8000e16:	60fb      	str	r3, [r7, #12]
 8000e18:	68fb      	ldr	r3, [r7, #12]
 8000e1a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000e1e:	60fb      	str	r3, [r7, #12]
 8000e20:	68fb      	ldr	r3, [r7, #12]
 8000e22:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000e26:	60fb      	str	r3, [r7, #12]
 8000e28:	4a04      	ldr	r2, [pc, #16]	; (8000e3c <HAL_MspInit+0x60>)
 8000e2a:	68fb      	ldr	r3, [r7, #12]
 8000e2c:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000e2e:	bf00      	nop
 8000e30:	3714      	adds	r7, #20
 8000e32:	46bd      	mov	sp, r7
 8000e34:	bc80      	pop	{r7}
 8000e36:	4770      	bx	lr
 8000e38:	40021000 	.word	0x40021000
 8000e3c:	40010000 	.word	0x40010000

08000e40 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000e40:	b580      	push	{r7, lr}
 8000e42:	b08a      	sub	sp, #40	; 0x28
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e48:	f107 0318 	add.w	r3, r7, #24
 8000e4c:	2200      	movs	r2, #0
 8000e4e:	601a      	str	r2, [r3, #0]
 8000e50:	605a      	str	r2, [r3, #4]
 8000e52:	609a      	str	r2, [r3, #8]
 8000e54:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	4a3f      	ldr	r2, [pc, #252]	; (8000f58 <HAL_UART_MspInit+0x118>)
 8000e5c:	4293      	cmp	r3, r2
 8000e5e:	d13a      	bne.n	8000ed6 <HAL_UART_MspInit+0x96>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8000e60:	4b3e      	ldr	r3, [pc, #248]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000e62:	699b      	ldr	r3, [r3, #24]
 8000e64:	4a3d      	ldr	r2, [pc, #244]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000e66:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000e6a:	6193      	str	r3, [r2, #24]
 8000e6c:	4b3b      	ldr	r3, [pc, #236]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000e6e:	699b      	ldr	r3, [r3, #24]
 8000e70:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000e74:	617b      	str	r3, [r7, #20]
 8000e76:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e78:	4b38      	ldr	r3, [pc, #224]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000e7a:	699b      	ldr	r3, [r3, #24]
 8000e7c:	4a37      	ldr	r2, [pc, #220]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000e7e:	f043 0304 	orr.w	r3, r3, #4
 8000e82:	6193      	str	r3, [r2, #24]
 8000e84:	4b35      	ldr	r3, [pc, #212]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000e86:	699b      	ldr	r3, [r3, #24]
 8000e88:	f003 0304 	and.w	r3, r3, #4
 8000e8c:	613b      	str	r3, [r7, #16]
 8000e8e:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000e90:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e94:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e96:	2302      	movs	r3, #2
 8000e98:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000e9a:	2303      	movs	r3, #3
 8000e9c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e9e:	f107 0318 	add.w	r3, r7, #24
 8000ea2:	4619      	mov	r1, r3
 8000ea4:	482e      	ldr	r0, [pc, #184]	; (8000f60 <HAL_UART_MspInit+0x120>)
 8000ea6:	f000 fbab 	bl	8001600 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000eaa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000eae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000eb8:	f107 0318 	add.w	r3, r7, #24
 8000ebc:	4619      	mov	r1, r3
 8000ebe:	4828      	ldr	r0, [pc, #160]	; (8000f60 <HAL_UART_MspInit+0x120>)
 8000ec0:	f000 fb9e 	bl	8001600 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8000ec4:	2200      	movs	r2, #0
 8000ec6:	2100      	movs	r1, #0
 8000ec8:	2025      	movs	r0, #37	; 0x25
 8000eca:	f000 fab2 	bl	8001432 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8000ece:	2025      	movs	r0, #37	; 0x25
 8000ed0:	f000 facb 	bl	800146a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8000ed4:	e03c      	b.n	8000f50 <HAL_UART_MspInit+0x110>
  else if(huart->Instance==USART2)
 8000ed6:	687b      	ldr	r3, [r7, #4]
 8000ed8:	681b      	ldr	r3, [r3, #0]
 8000eda:	4a22      	ldr	r2, [pc, #136]	; (8000f64 <HAL_UART_MspInit+0x124>)
 8000edc:	4293      	cmp	r3, r2
 8000ede:	d137      	bne.n	8000f50 <HAL_UART_MspInit+0x110>
    __HAL_RCC_USART2_CLK_ENABLE();
 8000ee0:	4b1e      	ldr	r3, [pc, #120]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000ee2:	69db      	ldr	r3, [r3, #28]
 8000ee4:	4a1d      	ldr	r2, [pc, #116]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000ee6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000eea:	61d3      	str	r3, [r2, #28]
 8000eec:	4b1b      	ldr	r3, [pc, #108]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000eee:	69db      	ldr	r3, [r3, #28]
 8000ef0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000ef4:	60fb      	str	r3, [r7, #12]
 8000ef6:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ef8:	4b18      	ldr	r3, [pc, #96]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000efa:	699b      	ldr	r3, [r3, #24]
 8000efc:	4a17      	ldr	r2, [pc, #92]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000efe:	f043 0304 	orr.w	r3, r3, #4
 8000f02:	6193      	str	r3, [r2, #24]
 8000f04:	4b15      	ldr	r3, [pc, #84]	; (8000f5c <HAL_UART_MspInit+0x11c>)
 8000f06:	699b      	ldr	r3, [r3, #24]
 8000f08:	f003 0304 	and.w	r3, r3, #4
 8000f0c:	60bb      	str	r3, [r7, #8]
 8000f0e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000f10:	2304      	movs	r3, #4
 8000f12:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f14:	2302      	movs	r3, #2
 8000f16:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000f18:	2303      	movs	r3, #3
 8000f1a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f1c:	f107 0318 	add.w	r3, r7, #24
 8000f20:	4619      	mov	r1, r3
 8000f22:	480f      	ldr	r0, [pc, #60]	; (8000f60 <HAL_UART_MspInit+0x120>)
 8000f24:	f000 fb6c 	bl	8001600 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000f28:	2308      	movs	r3, #8
 8000f2a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000f2c:	2300      	movs	r3, #0
 8000f2e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f30:	2300      	movs	r3, #0
 8000f32:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f34:	f107 0318 	add.w	r3, r7, #24
 8000f38:	4619      	mov	r1, r3
 8000f3a:	4809      	ldr	r0, [pc, #36]	; (8000f60 <HAL_UART_MspInit+0x120>)
 8000f3c:	f000 fb60 	bl	8001600 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8000f40:	2200      	movs	r2, #0
 8000f42:	2100      	movs	r1, #0
 8000f44:	2026      	movs	r0, #38	; 0x26
 8000f46:	f000 fa74 	bl	8001432 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8000f4a:	2026      	movs	r0, #38	; 0x26
 8000f4c:	f000 fa8d 	bl	800146a <HAL_NVIC_EnableIRQ>
}
 8000f50:	bf00      	nop
 8000f52:	3728      	adds	r7, #40	; 0x28
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bd80      	pop	{r7, pc}
 8000f58:	40013800 	.word	0x40013800
 8000f5c:	40021000 	.word	0x40021000
 8000f60:	40010800 	.word	0x40010800
 8000f64:	40004400 	.word	0x40004400

08000f68 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f68:	b480      	push	{r7}
 8000f6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000f6c:	e7fe      	b.n	8000f6c <NMI_Handler+0x4>

08000f6e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000f6e:	b480      	push	{r7}
 8000f70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000f72:	e7fe      	b.n	8000f72 <HardFault_Handler+0x4>

08000f74 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000f74:	b480      	push	{r7}
 8000f76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f78:	e7fe      	b.n	8000f78 <MemManage_Handler+0x4>

08000f7a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f7a:	b480      	push	{r7}
 8000f7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f7e:	e7fe      	b.n	8000f7e <BusFault_Handler+0x4>

08000f80 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f80:	b480      	push	{r7}
 8000f82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f84:	e7fe      	b.n	8000f84 <UsageFault_Handler+0x4>

08000f86 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f86:	b480      	push	{r7}
 8000f88:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f8a:	bf00      	nop
 8000f8c:	46bd      	mov	sp, r7
 8000f8e:	bc80      	pop	{r7}
 8000f90:	4770      	bx	lr

08000f92 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f92:	b480      	push	{r7}
 8000f94:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f96:	bf00      	nop
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bc80      	pop	{r7}
 8000f9c:	4770      	bx	lr

08000f9e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f9e:	b480      	push	{r7}
 8000fa0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000fa2:	bf00      	nop
 8000fa4:	46bd      	mov	sp, r7
 8000fa6:	bc80      	pop	{r7}
 8000fa8:	4770      	bx	lr

08000faa <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000faa:	b580      	push	{r7, lr}
 8000fac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000fae:	f000 f929 	bl	8001204 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000fb2:	bf00      	nop
 8000fb4:	bd80      	pop	{r7, pc}
	...

08000fb8 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8000fbc:	4802      	ldr	r0, [pc, #8]	; (8000fc8 <USART1_IRQHandler+0x10>)
 8000fbe:	f001 fa71 	bl	80024a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8000fc2:	bf00      	nop
 8000fc4:	bd80      	pop	{r7, pc}
 8000fc6:	bf00      	nop
 8000fc8:	2000008c 	.word	0x2000008c

08000fcc <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8000fd0:	4802      	ldr	r0, [pc, #8]	; (8000fdc <USART2_IRQHandler+0x10>)
 8000fd2:	f001 fa67 	bl	80024a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8000fd6:	bf00      	nop
 8000fd8:	bd80      	pop	{r7, pc}
 8000fda:	bf00      	nop
 8000fdc:	200000d0 	.word	0x200000d0

08000fe0 <_read>:
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	b086      	sub	sp, #24
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	60f8      	str	r0, [r7, #12]
 8000fe8:	60b9      	str	r1, [r7, #8]
 8000fea:	607a      	str	r2, [r7, #4]
 8000fec:	2300      	movs	r3, #0
 8000fee:	617b      	str	r3, [r7, #20]
 8000ff0:	e00a      	b.n	8001008 <_read+0x28>
 8000ff2:	f7ff f8c5 	bl	8000180 <__io_getchar>
 8000ff6:	4601      	mov	r1, r0
 8000ff8:	68bb      	ldr	r3, [r7, #8]
 8000ffa:	1c5a      	adds	r2, r3, #1
 8000ffc:	60ba      	str	r2, [r7, #8]
 8000ffe:	b2ca      	uxtb	r2, r1
 8001000:	701a      	strb	r2, [r3, #0]
 8001002:	697b      	ldr	r3, [r7, #20]
 8001004:	3301      	adds	r3, #1
 8001006:	617b      	str	r3, [r7, #20]
 8001008:	697a      	ldr	r2, [r7, #20]
 800100a:	687b      	ldr	r3, [r7, #4]
 800100c:	429a      	cmp	r2, r3
 800100e:	dbf0      	blt.n	8000ff2 <_read+0x12>
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	4618      	mov	r0, r3
 8001014:	3718      	adds	r7, #24
 8001016:	46bd      	mov	sp, r7
 8001018:	bd80      	pop	{r7, pc}

0800101a <_write>:
 800101a:	b580      	push	{r7, lr}
 800101c:	b086      	sub	sp, #24
 800101e:	af00      	add	r7, sp, #0
 8001020:	60f8      	str	r0, [r7, #12]
 8001022:	60b9      	str	r1, [r7, #8]
 8001024:	607a      	str	r2, [r7, #4]
 8001026:	2300      	movs	r3, #0
 8001028:	617b      	str	r3, [r7, #20]
 800102a:	e009      	b.n	8001040 <_write+0x26>
 800102c:	68bb      	ldr	r3, [r7, #8]
 800102e:	1c5a      	adds	r2, r3, #1
 8001030:	60ba      	str	r2, [r7, #8]
 8001032:	781b      	ldrb	r3, [r3, #0]
 8001034:	4618      	mov	r0, r3
 8001036:	f7ff f891 	bl	800015c <__io_putchar>
 800103a:	697b      	ldr	r3, [r7, #20]
 800103c:	3301      	adds	r3, #1
 800103e:	617b      	str	r3, [r7, #20]
 8001040:	697a      	ldr	r2, [r7, #20]
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	429a      	cmp	r2, r3
 8001046:	dbf1      	blt.n	800102c <_write+0x12>
 8001048:	687b      	ldr	r3, [r7, #4]
 800104a:	4618      	mov	r0, r3
 800104c:	3718      	adds	r7, #24
 800104e:	46bd      	mov	sp, r7
 8001050:	bd80      	pop	{r7, pc}

08001052 <_close>:
 8001052:	b480      	push	{r7}
 8001054:	b083      	sub	sp, #12
 8001056:	af00      	add	r7, sp, #0
 8001058:	6078      	str	r0, [r7, #4]
 800105a:	f04f 33ff 	mov.w	r3, #4294967295
 800105e:	4618      	mov	r0, r3
 8001060:	370c      	adds	r7, #12
 8001062:	46bd      	mov	sp, r7
 8001064:	bc80      	pop	{r7}
 8001066:	4770      	bx	lr

08001068 <_fstat>:
 8001068:	b480      	push	{r7}
 800106a:	b083      	sub	sp, #12
 800106c:	af00      	add	r7, sp, #0
 800106e:	6078      	str	r0, [r7, #4]
 8001070:	6039      	str	r1, [r7, #0]
 8001072:	683b      	ldr	r3, [r7, #0]
 8001074:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001078:	605a      	str	r2, [r3, #4]
 800107a:	2300      	movs	r3, #0
 800107c:	4618      	mov	r0, r3
 800107e:	370c      	adds	r7, #12
 8001080:	46bd      	mov	sp, r7
 8001082:	bc80      	pop	{r7}
 8001084:	4770      	bx	lr

08001086 <_isatty>:
 8001086:	b480      	push	{r7}
 8001088:	b083      	sub	sp, #12
 800108a:	af00      	add	r7, sp, #0
 800108c:	6078      	str	r0, [r7, #4]
 800108e:	2301      	movs	r3, #1
 8001090:	4618      	mov	r0, r3
 8001092:	370c      	adds	r7, #12
 8001094:	46bd      	mov	sp, r7
 8001096:	bc80      	pop	{r7}
 8001098:	4770      	bx	lr

0800109a <_lseek>:
 800109a:	b480      	push	{r7}
 800109c:	b085      	sub	sp, #20
 800109e:	af00      	add	r7, sp, #0
 80010a0:	60f8      	str	r0, [r7, #12]
 80010a2:	60b9      	str	r1, [r7, #8]
 80010a4:	607a      	str	r2, [r7, #4]
 80010a6:	2300      	movs	r3, #0
 80010a8:	4618      	mov	r0, r3
 80010aa:	3714      	adds	r7, #20
 80010ac:	46bd      	mov	sp, r7
 80010ae:	bc80      	pop	{r7}
 80010b0:	4770      	bx	lr
	...

080010b4 <_sbrk>:
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b086      	sub	sp, #24
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	6078      	str	r0, [r7, #4]
 80010bc:	4a14      	ldr	r2, [pc, #80]	; (8001110 <_sbrk+0x5c>)
 80010be:	4b15      	ldr	r3, [pc, #84]	; (8001114 <_sbrk+0x60>)
 80010c0:	1ad3      	subs	r3, r2, r3
 80010c2:	617b      	str	r3, [r7, #20]
 80010c4:	697b      	ldr	r3, [r7, #20]
 80010c6:	613b      	str	r3, [r7, #16]
 80010c8:	4b13      	ldr	r3, [pc, #76]	; (8001118 <_sbrk+0x64>)
 80010ca:	681b      	ldr	r3, [r3, #0]
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d102      	bne.n	80010d6 <_sbrk+0x22>
 80010d0:	4b11      	ldr	r3, [pc, #68]	; (8001118 <_sbrk+0x64>)
 80010d2:	4a12      	ldr	r2, [pc, #72]	; (800111c <_sbrk+0x68>)
 80010d4:	601a      	str	r2, [r3, #0]
 80010d6:	4b10      	ldr	r3, [pc, #64]	; (8001118 <_sbrk+0x64>)
 80010d8:	681a      	ldr	r2, [r3, #0]
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	4413      	add	r3, r2
 80010de:	693a      	ldr	r2, [r7, #16]
 80010e0:	429a      	cmp	r2, r3
 80010e2:	d207      	bcs.n	80010f4 <_sbrk+0x40>
 80010e4:	f001 fdd6 	bl	8002c94 <__errno>
 80010e8:	4603      	mov	r3, r0
 80010ea:	220c      	movs	r2, #12
 80010ec:	601a      	str	r2, [r3, #0]
 80010ee:	f04f 33ff 	mov.w	r3, #4294967295
 80010f2:	e009      	b.n	8001108 <_sbrk+0x54>
 80010f4:	4b08      	ldr	r3, [pc, #32]	; (8001118 <_sbrk+0x64>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	60fb      	str	r3, [r7, #12]
 80010fa:	4b07      	ldr	r3, [pc, #28]	; (8001118 <_sbrk+0x64>)
 80010fc:	681a      	ldr	r2, [r3, #0]
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	4413      	add	r3, r2
 8001102:	4a05      	ldr	r2, [pc, #20]	; (8001118 <_sbrk+0x64>)
 8001104:	6013      	str	r3, [r2, #0]
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	4618      	mov	r0, r3
 800110a:	3718      	adds	r7, #24
 800110c:	46bd      	mov	sp, r7
 800110e:	bd80      	pop	{r7, pc}
 8001110:	20005000 	.word	0x20005000
 8001114:	00000400 	.word	0x00000400
 8001118:	20000114 	.word	0x20000114
 800111c:	20000130 	.word	0x20000130

08001120 <SystemInit>:
 8001120:	b480      	push	{r7}
 8001122:	af00      	add	r7, sp, #0
 8001124:	bf00      	nop
 8001126:	46bd      	mov	sp, r7
 8001128:	bc80      	pop	{r7}
 800112a:	4770      	bx	lr

0800112c <Reset_Handler>:
 800112c:	480c      	ldr	r0, [pc, #48]	; (8001160 <LoopFillZerobss+0x12>)
 800112e:	490d      	ldr	r1, [pc, #52]	; (8001164 <LoopFillZerobss+0x16>)
 8001130:	4a0d      	ldr	r2, [pc, #52]	; (8001168 <LoopFillZerobss+0x1a>)
 8001132:	2300      	movs	r3, #0
 8001134:	e002      	b.n	800113c <LoopCopyDataInit>

08001136 <CopyDataInit>:
 8001136:	58d4      	ldr	r4, [r2, r3]
 8001138:	50c4      	str	r4, [r0, r3]
 800113a:	3304      	adds	r3, #4

0800113c <LoopCopyDataInit>:
 800113c:	18c4      	adds	r4, r0, r3
 800113e:	428c      	cmp	r4, r1
 8001140:	d3f9      	bcc.n	8001136 <CopyDataInit>
 8001142:	4a0a      	ldr	r2, [pc, #40]	; (800116c <LoopFillZerobss+0x1e>)
 8001144:	4c0a      	ldr	r4, [pc, #40]	; (8001170 <LoopFillZerobss+0x22>)
 8001146:	2300      	movs	r3, #0
 8001148:	e001      	b.n	800114e <LoopFillZerobss>

0800114a <FillZerobss>:
 800114a:	6013      	str	r3, [r2, #0]
 800114c:	3204      	adds	r2, #4

0800114e <LoopFillZerobss>:
 800114e:	42a2      	cmp	r2, r4
 8001150:	d3fb      	bcc.n	800114a <FillZerobss>
 8001152:	f7ff ffe5 	bl	8001120 <SystemInit>
 8001156:	f001 ff97 	bl	8003088 <__libc_init_array>
 800115a:	f7ff f837 	bl	80001cc <main>
 800115e:	4770      	bx	lr
 8001160:	20000000 	.word	0x20000000
 8001164:	20000070 	.word	0x20000070
 8001168:	080057c8 	.word	0x080057c8
 800116c:	20000070 	.word	0x20000070
 8001170:	2000012c 	.word	0x2000012c

08001174 <ADC1_2_IRQHandler>:
 8001174:	e7fe      	b.n	8001174 <ADC1_2_IRQHandler>
	...

08001178 <HAL_Init>:
 8001178:	b580      	push	{r7, lr}
 800117a:	af00      	add	r7, sp, #0
 800117c:	4b08      	ldr	r3, [pc, #32]	; (80011a0 <HAL_Init+0x28>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	4a07      	ldr	r2, [pc, #28]	; (80011a0 <HAL_Init+0x28>)
 8001182:	f043 0310 	orr.w	r3, r3, #16
 8001186:	6013      	str	r3, [r2, #0]
 8001188:	2003      	movs	r0, #3
 800118a:	f000 f947 	bl	800141c <HAL_NVIC_SetPriorityGrouping>
 800118e:	200f      	movs	r0, #15
 8001190:	f000 f808 	bl	80011a4 <HAL_InitTick>
 8001194:	f7ff fe22 	bl	8000ddc <HAL_MspInit>
 8001198:	2300      	movs	r3, #0
 800119a:	4618      	mov	r0, r3
 800119c:	bd80      	pop	{r7, pc}
 800119e:	bf00      	nop
 80011a0:	40022000 	.word	0x40022000

080011a4 <HAL_InitTick>:
 80011a4:	b580      	push	{r7, lr}
 80011a6:	b082      	sub	sp, #8
 80011a8:	af00      	add	r7, sp, #0
 80011aa:	6078      	str	r0, [r7, #4]
 80011ac:	4b12      	ldr	r3, [pc, #72]	; (80011f8 <HAL_InitTick+0x54>)
 80011ae:	681a      	ldr	r2, [r3, #0]
 80011b0:	4b12      	ldr	r3, [pc, #72]	; (80011fc <HAL_InitTick+0x58>)
 80011b2:	781b      	ldrb	r3, [r3, #0]
 80011b4:	4619      	mov	r1, r3
 80011b6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011ba:	fbb3 f3f1 	udiv	r3, r3, r1
 80011be:	fbb2 f3f3 	udiv	r3, r2, r3
 80011c2:	4618      	mov	r0, r3
 80011c4:	f000 f95f 	bl	8001486 <HAL_SYSTICK_Config>
 80011c8:	4603      	mov	r3, r0
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d001      	beq.n	80011d2 <HAL_InitTick+0x2e>
 80011ce:	2301      	movs	r3, #1
 80011d0:	e00e      	b.n	80011f0 <HAL_InitTick+0x4c>
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	2b0f      	cmp	r3, #15
 80011d6:	d80a      	bhi.n	80011ee <HAL_InitTick+0x4a>
 80011d8:	2200      	movs	r2, #0
 80011da:	6879      	ldr	r1, [r7, #4]
 80011dc:	f04f 30ff 	mov.w	r0, #4294967295
 80011e0:	f000 f927 	bl	8001432 <HAL_NVIC_SetPriority>
 80011e4:	4a06      	ldr	r2, [pc, #24]	; (8001200 <HAL_InitTick+0x5c>)
 80011e6:	687b      	ldr	r3, [r7, #4]
 80011e8:	6013      	str	r3, [r2, #0]
 80011ea:	2300      	movs	r3, #0
 80011ec:	e000      	b.n	80011f0 <HAL_InitTick+0x4c>
 80011ee:	2301      	movs	r3, #1
 80011f0:	4618      	mov	r0, r3
 80011f2:	3708      	adds	r7, #8
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	20000000 	.word	0x20000000
 80011fc:	20000008 	.word	0x20000008
 8001200:	20000004 	.word	0x20000004

08001204 <HAL_IncTick>:
 8001204:	b480      	push	{r7}
 8001206:	af00      	add	r7, sp, #0
 8001208:	4b05      	ldr	r3, [pc, #20]	; (8001220 <HAL_IncTick+0x1c>)
 800120a:	781b      	ldrb	r3, [r3, #0]
 800120c:	461a      	mov	r2, r3
 800120e:	4b05      	ldr	r3, [pc, #20]	; (8001224 <HAL_IncTick+0x20>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	4413      	add	r3, r2
 8001214:	4a03      	ldr	r2, [pc, #12]	; (8001224 <HAL_IncTick+0x20>)
 8001216:	6013      	str	r3, [r2, #0]
 8001218:	bf00      	nop
 800121a:	46bd      	mov	sp, r7
 800121c:	bc80      	pop	{r7}
 800121e:	4770      	bx	lr
 8001220:	20000008 	.word	0x20000008
 8001224:	20000118 	.word	0x20000118

08001228 <HAL_GetTick>:
 8001228:	b480      	push	{r7}
 800122a:	af00      	add	r7, sp, #0
 800122c:	4b02      	ldr	r3, [pc, #8]	; (8001238 <HAL_GetTick+0x10>)
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	4618      	mov	r0, r3
 8001232:	46bd      	mov	sp, r7
 8001234:	bc80      	pop	{r7}
 8001236:	4770      	bx	lr
 8001238:	20000118 	.word	0x20000118

0800123c <HAL_Delay>:
 800123c:	b580      	push	{r7, lr}
 800123e:	b084      	sub	sp, #16
 8001240:	af00      	add	r7, sp, #0
 8001242:	6078      	str	r0, [r7, #4]
 8001244:	f7ff fff0 	bl	8001228 <HAL_GetTick>
 8001248:	60b8      	str	r0, [r7, #8]
 800124a:	687b      	ldr	r3, [r7, #4]
 800124c:	60fb      	str	r3, [r7, #12]
 800124e:	68fb      	ldr	r3, [r7, #12]
 8001250:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001254:	d005      	beq.n	8001262 <HAL_Delay+0x26>
 8001256:	4b0a      	ldr	r3, [pc, #40]	; (8001280 <HAL_Delay+0x44>)
 8001258:	781b      	ldrb	r3, [r3, #0]
 800125a:	461a      	mov	r2, r3
 800125c:	68fb      	ldr	r3, [r7, #12]
 800125e:	4413      	add	r3, r2
 8001260:	60fb      	str	r3, [r7, #12]
 8001262:	bf00      	nop
 8001264:	f7ff ffe0 	bl	8001228 <HAL_GetTick>
 8001268:	4602      	mov	r2, r0
 800126a:	68bb      	ldr	r3, [r7, #8]
 800126c:	1ad3      	subs	r3, r2, r3
 800126e:	68fa      	ldr	r2, [r7, #12]
 8001270:	429a      	cmp	r2, r3
 8001272:	d8f7      	bhi.n	8001264 <HAL_Delay+0x28>
 8001274:	bf00      	nop
 8001276:	bf00      	nop
 8001278:	3710      	adds	r7, #16
 800127a:	46bd      	mov	sp, r7
 800127c:	bd80      	pop	{r7, pc}
 800127e:	bf00      	nop
 8001280:	20000008 	.word	0x20000008

08001284 <__NVIC_SetPriorityGrouping>:
 8001284:	b480      	push	{r7}
 8001286:	b085      	sub	sp, #20
 8001288:	af00      	add	r7, sp, #0
 800128a:	6078      	str	r0, [r7, #4]
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	f003 0307 	and.w	r3, r3, #7
 8001292:	60fb      	str	r3, [r7, #12]
 8001294:	4b0c      	ldr	r3, [pc, #48]	; (80012c8 <__NVIC_SetPriorityGrouping+0x44>)
 8001296:	68db      	ldr	r3, [r3, #12]
 8001298:	60bb      	str	r3, [r7, #8]
 800129a:	68ba      	ldr	r2, [r7, #8]
 800129c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80012a0:	4013      	ands	r3, r2
 80012a2:	60bb      	str	r3, [r7, #8]
 80012a4:	68fb      	ldr	r3, [r7, #12]
 80012a6:	021a      	lsls	r2, r3, #8
 80012a8:	68bb      	ldr	r3, [r7, #8]
 80012aa:	4313      	orrs	r3, r2
 80012ac:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80012b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012b4:	60bb      	str	r3, [r7, #8]
 80012b6:	4a04      	ldr	r2, [pc, #16]	; (80012c8 <__NVIC_SetPriorityGrouping+0x44>)
 80012b8:	68bb      	ldr	r3, [r7, #8]
 80012ba:	60d3      	str	r3, [r2, #12]
 80012bc:	bf00      	nop
 80012be:	3714      	adds	r7, #20
 80012c0:	46bd      	mov	sp, r7
 80012c2:	bc80      	pop	{r7}
 80012c4:	4770      	bx	lr
 80012c6:	bf00      	nop
 80012c8:	e000ed00 	.word	0xe000ed00

080012cc <__NVIC_GetPriorityGrouping>:
 80012cc:	b480      	push	{r7}
 80012ce:	af00      	add	r7, sp, #0
 80012d0:	4b04      	ldr	r3, [pc, #16]	; (80012e4 <__NVIC_GetPriorityGrouping+0x18>)
 80012d2:	68db      	ldr	r3, [r3, #12]
 80012d4:	0a1b      	lsrs	r3, r3, #8
 80012d6:	f003 0307 	and.w	r3, r3, #7
 80012da:	4618      	mov	r0, r3
 80012dc:	46bd      	mov	sp, r7
 80012de:	bc80      	pop	{r7}
 80012e0:	4770      	bx	lr
 80012e2:	bf00      	nop
 80012e4:	e000ed00 	.word	0xe000ed00

080012e8 <__NVIC_EnableIRQ>:
 80012e8:	b480      	push	{r7}
 80012ea:	b083      	sub	sp, #12
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	4603      	mov	r3, r0
 80012f0:	71fb      	strb	r3, [r7, #7]
 80012f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012f6:	2b00      	cmp	r3, #0
 80012f8:	db0b      	blt.n	8001312 <__NVIC_EnableIRQ+0x2a>
 80012fa:	79fb      	ldrb	r3, [r7, #7]
 80012fc:	f003 021f 	and.w	r2, r3, #31
 8001300:	4906      	ldr	r1, [pc, #24]	; (800131c <__NVIC_EnableIRQ+0x34>)
 8001302:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001306:	095b      	lsrs	r3, r3, #5
 8001308:	2001      	movs	r0, #1
 800130a:	fa00 f202 	lsl.w	r2, r0, r2
 800130e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001312:	bf00      	nop
 8001314:	370c      	adds	r7, #12
 8001316:	46bd      	mov	sp, r7
 8001318:	bc80      	pop	{r7}
 800131a:	4770      	bx	lr
 800131c:	e000e100 	.word	0xe000e100

08001320 <__NVIC_SetPriority>:
 8001320:	b480      	push	{r7}
 8001322:	b083      	sub	sp, #12
 8001324:	af00      	add	r7, sp, #0
 8001326:	4603      	mov	r3, r0
 8001328:	6039      	str	r1, [r7, #0]
 800132a:	71fb      	strb	r3, [r7, #7]
 800132c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001330:	2b00      	cmp	r3, #0
 8001332:	db0a      	blt.n	800134a <__NVIC_SetPriority+0x2a>
 8001334:	683b      	ldr	r3, [r7, #0]
 8001336:	b2da      	uxtb	r2, r3
 8001338:	490c      	ldr	r1, [pc, #48]	; (800136c <__NVIC_SetPriority+0x4c>)
 800133a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800133e:	0112      	lsls	r2, r2, #4
 8001340:	b2d2      	uxtb	r2, r2
 8001342:	440b      	add	r3, r1
 8001344:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001348:	e00a      	b.n	8001360 <__NVIC_SetPriority+0x40>
 800134a:	683b      	ldr	r3, [r7, #0]
 800134c:	b2da      	uxtb	r2, r3
 800134e:	4908      	ldr	r1, [pc, #32]	; (8001370 <__NVIC_SetPriority+0x50>)
 8001350:	79fb      	ldrb	r3, [r7, #7]
 8001352:	f003 030f 	and.w	r3, r3, #15
 8001356:	3b04      	subs	r3, #4
 8001358:	0112      	lsls	r2, r2, #4
 800135a:	b2d2      	uxtb	r2, r2
 800135c:	440b      	add	r3, r1
 800135e:	761a      	strb	r2, [r3, #24]
 8001360:	bf00      	nop
 8001362:	370c      	adds	r7, #12
 8001364:	46bd      	mov	sp, r7
 8001366:	bc80      	pop	{r7}
 8001368:	4770      	bx	lr
 800136a:	bf00      	nop
 800136c:	e000e100 	.word	0xe000e100
 8001370:	e000ed00 	.word	0xe000ed00

08001374 <NVIC_EncodePriority>:
 8001374:	b480      	push	{r7}
 8001376:	b089      	sub	sp, #36	; 0x24
 8001378:	af00      	add	r7, sp, #0
 800137a:	60f8      	str	r0, [r7, #12]
 800137c:	60b9      	str	r1, [r7, #8]
 800137e:	607a      	str	r2, [r7, #4]
 8001380:	68fb      	ldr	r3, [r7, #12]
 8001382:	f003 0307 	and.w	r3, r3, #7
 8001386:	61fb      	str	r3, [r7, #28]
 8001388:	69fb      	ldr	r3, [r7, #28]
 800138a:	f1c3 0307 	rsb	r3, r3, #7
 800138e:	2b04      	cmp	r3, #4
 8001390:	bf28      	it	cs
 8001392:	2304      	movcs	r3, #4
 8001394:	61bb      	str	r3, [r7, #24]
 8001396:	69fb      	ldr	r3, [r7, #28]
 8001398:	3304      	adds	r3, #4
 800139a:	2b06      	cmp	r3, #6
 800139c:	d902      	bls.n	80013a4 <NVIC_EncodePriority+0x30>
 800139e:	69fb      	ldr	r3, [r7, #28]
 80013a0:	3b03      	subs	r3, #3
 80013a2:	e000      	b.n	80013a6 <NVIC_EncodePriority+0x32>
 80013a4:	2300      	movs	r3, #0
 80013a6:	617b      	str	r3, [r7, #20]
 80013a8:	f04f 32ff 	mov.w	r2, #4294967295
 80013ac:	69bb      	ldr	r3, [r7, #24]
 80013ae:	fa02 f303 	lsl.w	r3, r2, r3
 80013b2:	43da      	mvns	r2, r3
 80013b4:	68bb      	ldr	r3, [r7, #8]
 80013b6:	401a      	ands	r2, r3
 80013b8:	697b      	ldr	r3, [r7, #20]
 80013ba:	409a      	lsls	r2, r3
 80013bc:	f04f 31ff 	mov.w	r1, #4294967295
 80013c0:	697b      	ldr	r3, [r7, #20]
 80013c2:	fa01 f303 	lsl.w	r3, r1, r3
 80013c6:	43d9      	mvns	r1, r3
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	400b      	ands	r3, r1
 80013cc:	4313      	orrs	r3, r2
 80013ce:	4618      	mov	r0, r3
 80013d0:	3724      	adds	r7, #36	; 0x24
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bc80      	pop	{r7}
 80013d6:	4770      	bx	lr

080013d8 <SysTick_Config>:
 80013d8:	b580      	push	{r7, lr}
 80013da:	b082      	sub	sp, #8
 80013dc:	af00      	add	r7, sp, #0
 80013de:	6078      	str	r0, [r7, #4]
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	3b01      	subs	r3, #1
 80013e4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80013e8:	d301      	bcc.n	80013ee <SysTick_Config+0x16>
 80013ea:	2301      	movs	r3, #1
 80013ec:	e00f      	b.n	800140e <SysTick_Config+0x36>
 80013ee:	4a0a      	ldr	r2, [pc, #40]	; (8001418 <SysTick_Config+0x40>)
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	3b01      	subs	r3, #1
 80013f4:	6053      	str	r3, [r2, #4]
 80013f6:	210f      	movs	r1, #15
 80013f8:	f04f 30ff 	mov.w	r0, #4294967295
 80013fc:	f7ff ff90 	bl	8001320 <__NVIC_SetPriority>
 8001400:	4b05      	ldr	r3, [pc, #20]	; (8001418 <SysTick_Config+0x40>)
 8001402:	2200      	movs	r2, #0
 8001404:	609a      	str	r2, [r3, #8]
 8001406:	4b04      	ldr	r3, [pc, #16]	; (8001418 <SysTick_Config+0x40>)
 8001408:	2207      	movs	r2, #7
 800140a:	601a      	str	r2, [r3, #0]
 800140c:	2300      	movs	r3, #0
 800140e:	4618      	mov	r0, r3
 8001410:	3708      	adds	r7, #8
 8001412:	46bd      	mov	sp, r7
 8001414:	bd80      	pop	{r7, pc}
 8001416:	bf00      	nop
 8001418:	e000e010 	.word	0xe000e010

0800141c <HAL_NVIC_SetPriorityGrouping>:
 800141c:	b580      	push	{r7, lr}
 800141e:	b082      	sub	sp, #8
 8001420:	af00      	add	r7, sp, #0
 8001422:	6078      	str	r0, [r7, #4]
 8001424:	6878      	ldr	r0, [r7, #4]
 8001426:	f7ff ff2d 	bl	8001284 <__NVIC_SetPriorityGrouping>
 800142a:	bf00      	nop
 800142c:	3708      	adds	r7, #8
 800142e:	46bd      	mov	sp, r7
 8001430:	bd80      	pop	{r7, pc}

08001432 <HAL_NVIC_SetPriority>:
 8001432:	b580      	push	{r7, lr}
 8001434:	b086      	sub	sp, #24
 8001436:	af00      	add	r7, sp, #0
 8001438:	4603      	mov	r3, r0
 800143a:	60b9      	str	r1, [r7, #8]
 800143c:	607a      	str	r2, [r7, #4]
 800143e:	73fb      	strb	r3, [r7, #15]
 8001440:	2300      	movs	r3, #0
 8001442:	617b      	str	r3, [r7, #20]
 8001444:	f7ff ff42 	bl	80012cc <__NVIC_GetPriorityGrouping>
 8001448:	6178      	str	r0, [r7, #20]
 800144a:	687a      	ldr	r2, [r7, #4]
 800144c:	68b9      	ldr	r1, [r7, #8]
 800144e:	6978      	ldr	r0, [r7, #20]
 8001450:	f7ff ff90 	bl	8001374 <NVIC_EncodePriority>
 8001454:	4602      	mov	r2, r0
 8001456:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800145a:	4611      	mov	r1, r2
 800145c:	4618      	mov	r0, r3
 800145e:	f7ff ff5f 	bl	8001320 <__NVIC_SetPriority>
 8001462:	bf00      	nop
 8001464:	3718      	adds	r7, #24
 8001466:	46bd      	mov	sp, r7
 8001468:	bd80      	pop	{r7, pc}

0800146a <HAL_NVIC_EnableIRQ>:
 800146a:	b580      	push	{r7, lr}
 800146c:	b082      	sub	sp, #8
 800146e:	af00      	add	r7, sp, #0
 8001470:	4603      	mov	r3, r0
 8001472:	71fb      	strb	r3, [r7, #7]
 8001474:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001478:	4618      	mov	r0, r3
 800147a:	f7ff ff35 	bl	80012e8 <__NVIC_EnableIRQ>
 800147e:	bf00      	nop
 8001480:	3708      	adds	r7, #8
 8001482:	46bd      	mov	sp, r7
 8001484:	bd80      	pop	{r7, pc}

08001486 <HAL_SYSTICK_Config>:
 8001486:	b580      	push	{r7, lr}
 8001488:	b082      	sub	sp, #8
 800148a:	af00      	add	r7, sp, #0
 800148c:	6078      	str	r0, [r7, #4]
 800148e:	6878      	ldr	r0, [r7, #4]
 8001490:	f7ff ffa2 	bl	80013d8 <SysTick_Config>
 8001494:	4603      	mov	r3, r0
 8001496:	4618      	mov	r0, r3
 8001498:	3708      	adds	r7, #8
 800149a:	46bd      	mov	sp, r7
 800149c:	bd80      	pop	{r7, pc}

0800149e <HAL_DMA_Abort>:
 800149e:	b480      	push	{r7}
 80014a0:	b085      	sub	sp, #20
 80014a2:	af00      	add	r7, sp, #0
 80014a4:	6078      	str	r0, [r7, #4]
 80014a6:	2300      	movs	r3, #0
 80014a8:	73fb      	strb	r3, [r7, #15]
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80014b0:	2b02      	cmp	r3, #2
 80014b2:	d008      	beq.n	80014c6 <HAL_DMA_Abort+0x28>
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	2204      	movs	r2, #4
 80014b8:	639a      	str	r2, [r3, #56]	; 0x38
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	2200      	movs	r2, #0
 80014be:	f883 2020 	strb.w	r2, [r3, #32]
 80014c2:	2301      	movs	r3, #1
 80014c4:	e020      	b.n	8001508 <HAL_DMA_Abort+0x6a>
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	681b      	ldr	r3, [r3, #0]
 80014ca:	681a      	ldr	r2, [r3, #0]
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	f022 020e 	bic.w	r2, r2, #14
 80014d4:	601a      	str	r2, [r3, #0]
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	681a      	ldr	r2, [r3, #0]
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	f022 0201 	bic.w	r2, r2, #1
 80014e4:	601a      	str	r2, [r3, #0]
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80014ee:	2101      	movs	r1, #1
 80014f0:	fa01 f202 	lsl.w	r2, r1, r2
 80014f4:	605a      	str	r2, [r3, #4]
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	2201      	movs	r2, #1
 80014fa:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80014fe:	687b      	ldr	r3, [r7, #4]
 8001500:	2200      	movs	r2, #0
 8001502:	f883 2020 	strb.w	r2, [r3, #32]
 8001506:	7bfb      	ldrb	r3, [r7, #15]
 8001508:	4618      	mov	r0, r3
 800150a:	3714      	adds	r7, #20
 800150c:	46bd      	mov	sp, r7
 800150e:	bc80      	pop	{r7}
 8001510:	4770      	bx	lr
	...

08001514 <HAL_DMA_Abort_IT>:
 8001514:	b580      	push	{r7, lr}
 8001516:	b084      	sub	sp, #16
 8001518:	af00      	add	r7, sp, #0
 800151a:	6078      	str	r0, [r7, #4]
 800151c:	2300      	movs	r3, #0
 800151e:	73fb      	strb	r3, [r7, #15]
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001526:	2b02      	cmp	r3, #2
 8001528:	d005      	beq.n	8001536 <HAL_DMA_Abort_IT+0x22>
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	2204      	movs	r2, #4
 800152e:	639a      	str	r2, [r3, #56]	; 0x38
 8001530:	2301      	movs	r3, #1
 8001532:	73fb      	strb	r3, [r7, #15]
 8001534:	e051      	b.n	80015da <HAL_DMA_Abort_IT+0xc6>
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	681a      	ldr	r2, [r3, #0]
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	f022 020e 	bic.w	r2, r2, #14
 8001544:	601a      	str	r2, [r3, #0]
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	681a      	ldr	r2, [r3, #0]
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	f022 0201 	bic.w	r2, r2, #1
 8001554:	601a      	str	r2, [r3, #0]
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	4a22      	ldr	r2, [pc, #136]	; (80015e4 <HAL_DMA_Abort_IT+0xd0>)
 800155c:	4293      	cmp	r3, r2
 800155e:	d029      	beq.n	80015b4 <HAL_DMA_Abort_IT+0xa0>
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	4a20      	ldr	r2, [pc, #128]	; (80015e8 <HAL_DMA_Abort_IT+0xd4>)
 8001566:	4293      	cmp	r3, r2
 8001568:	d022      	beq.n	80015b0 <HAL_DMA_Abort_IT+0x9c>
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	4a1f      	ldr	r2, [pc, #124]	; (80015ec <HAL_DMA_Abort_IT+0xd8>)
 8001570:	4293      	cmp	r3, r2
 8001572:	d01a      	beq.n	80015aa <HAL_DMA_Abort_IT+0x96>
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	4a1d      	ldr	r2, [pc, #116]	; (80015f0 <HAL_DMA_Abort_IT+0xdc>)
 800157a:	4293      	cmp	r3, r2
 800157c:	d012      	beq.n	80015a4 <HAL_DMA_Abort_IT+0x90>
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	4a1c      	ldr	r2, [pc, #112]	; (80015f4 <HAL_DMA_Abort_IT+0xe0>)
 8001584:	4293      	cmp	r3, r2
 8001586:	d00a      	beq.n	800159e <HAL_DMA_Abort_IT+0x8a>
 8001588:	687b      	ldr	r3, [r7, #4]
 800158a:	681b      	ldr	r3, [r3, #0]
 800158c:	4a1a      	ldr	r2, [pc, #104]	; (80015f8 <HAL_DMA_Abort_IT+0xe4>)
 800158e:	4293      	cmp	r3, r2
 8001590:	d102      	bne.n	8001598 <HAL_DMA_Abort_IT+0x84>
 8001592:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001596:	e00e      	b.n	80015b6 <HAL_DMA_Abort_IT+0xa2>
 8001598:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800159c:	e00b      	b.n	80015b6 <HAL_DMA_Abort_IT+0xa2>
 800159e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80015a2:	e008      	b.n	80015b6 <HAL_DMA_Abort_IT+0xa2>
 80015a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80015a8:	e005      	b.n	80015b6 <HAL_DMA_Abort_IT+0xa2>
 80015aa:	f44f 7380 	mov.w	r3, #256	; 0x100
 80015ae:	e002      	b.n	80015b6 <HAL_DMA_Abort_IT+0xa2>
 80015b0:	2310      	movs	r3, #16
 80015b2:	e000      	b.n	80015b6 <HAL_DMA_Abort_IT+0xa2>
 80015b4:	2301      	movs	r3, #1
 80015b6:	4a11      	ldr	r2, [pc, #68]	; (80015fc <HAL_DMA_Abort_IT+0xe8>)
 80015b8:	6053      	str	r3, [r2, #4]
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	2201      	movs	r2, #1
 80015be:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80015c2:	687b      	ldr	r3, [r7, #4]
 80015c4:	2200      	movs	r2, #0
 80015c6:	f883 2020 	strb.w	r2, [r3, #32]
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d003      	beq.n	80015da <HAL_DMA_Abort_IT+0xc6>
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80015d6:	6878      	ldr	r0, [r7, #4]
 80015d8:	4798      	blx	r3
 80015da:	7bfb      	ldrb	r3, [r7, #15]
 80015dc:	4618      	mov	r0, r3
 80015de:	3710      	adds	r7, #16
 80015e0:	46bd      	mov	sp, r7
 80015e2:	bd80      	pop	{r7, pc}
 80015e4:	40020008 	.word	0x40020008
 80015e8:	4002001c 	.word	0x4002001c
 80015ec:	40020030 	.word	0x40020030
 80015f0:	40020044 	.word	0x40020044
 80015f4:	40020058 	.word	0x40020058
 80015f8:	4002006c 	.word	0x4002006c
 80015fc:	40020000 	.word	0x40020000

08001600 <HAL_GPIO_Init>:
 8001600:	b480      	push	{r7}
 8001602:	b08b      	sub	sp, #44	; 0x2c
 8001604:	af00      	add	r7, sp, #0
 8001606:	6078      	str	r0, [r7, #4]
 8001608:	6039      	str	r1, [r7, #0]
 800160a:	2300      	movs	r3, #0
 800160c:	627b      	str	r3, [r7, #36]	; 0x24
 800160e:	2300      	movs	r3, #0
 8001610:	623b      	str	r3, [r7, #32]
 8001612:	e169      	b.n	80018e8 <HAL_GPIO_Init+0x2e8>
 8001614:	2201      	movs	r2, #1
 8001616:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001618:	fa02 f303 	lsl.w	r3, r2, r3
 800161c:	61fb      	str	r3, [r7, #28]
 800161e:	683b      	ldr	r3, [r7, #0]
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	69fa      	ldr	r2, [r7, #28]
 8001624:	4013      	ands	r3, r2
 8001626:	61bb      	str	r3, [r7, #24]
 8001628:	69ba      	ldr	r2, [r7, #24]
 800162a:	69fb      	ldr	r3, [r7, #28]
 800162c:	429a      	cmp	r2, r3
 800162e:	f040 8158 	bne.w	80018e2 <HAL_GPIO_Init+0x2e2>
 8001632:	683b      	ldr	r3, [r7, #0]
 8001634:	685b      	ldr	r3, [r3, #4]
 8001636:	4a9a      	ldr	r2, [pc, #616]	; (80018a0 <HAL_GPIO_Init+0x2a0>)
 8001638:	4293      	cmp	r3, r2
 800163a:	d05e      	beq.n	80016fa <HAL_GPIO_Init+0xfa>
 800163c:	4a98      	ldr	r2, [pc, #608]	; (80018a0 <HAL_GPIO_Init+0x2a0>)
 800163e:	4293      	cmp	r3, r2
 8001640:	d875      	bhi.n	800172e <HAL_GPIO_Init+0x12e>
 8001642:	4a98      	ldr	r2, [pc, #608]	; (80018a4 <HAL_GPIO_Init+0x2a4>)
 8001644:	4293      	cmp	r3, r2
 8001646:	d058      	beq.n	80016fa <HAL_GPIO_Init+0xfa>
 8001648:	4a96      	ldr	r2, [pc, #600]	; (80018a4 <HAL_GPIO_Init+0x2a4>)
 800164a:	4293      	cmp	r3, r2
 800164c:	d86f      	bhi.n	800172e <HAL_GPIO_Init+0x12e>
 800164e:	4a96      	ldr	r2, [pc, #600]	; (80018a8 <HAL_GPIO_Init+0x2a8>)
 8001650:	4293      	cmp	r3, r2
 8001652:	d052      	beq.n	80016fa <HAL_GPIO_Init+0xfa>
 8001654:	4a94      	ldr	r2, [pc, #592]	; (80018a8 <HAL_GPIO_Init+0x2a8>)
 8001656:	4293      	cmp	r3, r2
 8001658:	d869      	bhi.n	800172e <HAL_GPIO_Init+0x12e>
 800165a:	4a94      	ldr	r2, [pc, #592]	; (80018ac <HAL_GPIO_Init+0x2ac>)
 800165c:	4293      	cmp	r3, r2
 800165e:	d04c      	beq.n	80016fa <HAL_GPIO_Init+0xfa>
 8001660:	4a92      	ldr	r2, [pc, #584]	; (80018ac <HAL_GPIO_Init+0x2ac>)
 8001662:	4293      	cmp	r3, r2
 8001664:	d863      	bhi.n	800172e <HAL_GPIO_Init+0x12e>
 8001666:	4a92      	ldr	r2, [pc, #584]	; (80018b0 <HAL_GPIO_Init+0x2b0>)
 8001668:	4293      	cmp	r3, r2
 800166a:	d046      	beq.n	80016fa <HAL_GPIO_Init+0xfa>
 800166c:	4a90      	ldr	r2, [pc, #576]	; (80018b0 <HAL_GPIO_Init+0x2b0>)
 800166e:	4293      	cmp	r3, r2
 8001670:	d85d      	bhi.n	800172e <HAL_GPIO_Init+0x12e>
 8001672:	2b12      	cmp	r3, #18
 8001674:	d82a      	bhi.n	80016cc <HAL_GPIO_Init+0xcc>
 8001676:	2b12      	cmp	r3, #18
 8001678:	d859      	bhi.n	800172e <HAL_GPIO_Init+0x12e>
 800167a:	a201      	add	r2, pc, #4	; (adr r2, 8001680 <HAL_GPIO_Init+0x80>)
 800167c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001680:	080016fb 	.word	0x080016fb
 8001684:	080016d5 	.word	0x080016d5
 8001688:	080016e7 	.word	0x080016e7
 800168c:	08001729 	.word	0x08001729
 8001690:	0800172f 	.word	0x0800172f
 8001694:	0800172f 	.word	0x0800172f
 8001698:	0800172f 	.word	0x0800172f
 800169c:	0800172f 	.word	0x0800172f
 80016a0:	0800172f 	.word	0x0800172f
 80016a4:	0800172f 	.word	0x0800172f
 80016a8:	0800172f 	.word	0x0800172f
 80016ac:	0800172f 	.word	0x0800172f
 80016b0:	0800172f 	.word	0x0800172f
 80016b4:	0800172f 	.word	0x0800172f
 80016b8:	0800172f 	.word	0x0800172f
 80016bc:	0800172f 	.word	0x0800172f
 80016c0:	0800172f 	.word	0x0800172f
 80016c4:	080016dd 	.word	0x080016dd
 80016c8:	080016f1 	.word	0x080016f1
 80016cc:	4a79      	ldr	r2, [pc, #484]	; (80018b4 <HAL_GPIO_Init+0x2b4>)
 80016ce:	4293      	cmp	r3, r2
 80016d0:	d013      	beq.n	80016fa <HAL_GPIO_Init+0xfa>
 80016d2:	e02c      	b.n	800172e <HAL_GPIO_Init+0x12e>
 80016d4:	683b      	ldr	r3, [r7, #0]
 80016d6:	68db      	ldr	r3, [r3, #12]
 80016d8:	623b      	str	r3, [r7, #32]
 80016da:	e029      	b.n	8001730 <HAL_GPIO_Init+0x130>
 80016dc:	683b      	ldr	r3, [r7, #0]
 80016de:	68db      	ldr	r3, [r3, #12]
 80016e0:	3304      	adds	r3, #4
 80016e2:	623b      	str	r3, [r7, #32]
 80016e4:	e024      	b.n	8001730 <HAL_GPIO_Init+0x130>
 80016e6:	683b      	ldr	r3, [r7, #0]
 80016e8:	68db      	ldr	r3, [r3, #12]
 80016ea:	3308      	adds	r3, #8
 80016ec:	623b      	str	r3, [r7, #32]
 80016ee:	e01f      	b.n	8001730 <HAL_GPIO_Init+0x130>
 80016f0:	683b      	ldr	r3, [r7, #0]
 80016f2:	68db      	ldr	r3, [r3, #12]
 80016f4:	330c      	adds	r3, #12
 80016f6:	623b      	str	r3, [r7, #32]
 80016f8:	e01a      	b.n	8001730 <HAL_GPIO_Init+0x130>
 80016fa:	683b      	ldr	r3, [r7, #0]
 80016fc:	689b      	ldr	r3, [r3, #8]
 80016fe:	2b00      	cmp	r3, #0
 8001700:	d102      	bne.n	8001708 <HAL_GPIO_Init+0x108>
 8001702:	2304      	movs	r3, #4
 8001704:	623b      	str	r3, [r7, #32]
 8001706:	e013      	b.n	8001730 <HAL_GPIO_Init+0x130>
 8001708:	683b      	ldr	r3, [r7, #0]
 800170a:	689b      	ldr	r3, [r3, #8]
 800170c:	2b01      	cmp	r3, #1
 800170e:	d105      	bne.n	800171c <HAL_GPIO_Init+0x11c>
 8001710:	2308      	movs	r3, #8
 8001712:	623b      	str	r3, [r7, #32]
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	69fa      	ldr	r2, [r7, #28]
 8001718:	611a      	str	r2, [r3, #16]
 800171a:	e009      	b.n	8001730 <HAL_GPIO_Init+0x130>
 800171c:	2308      	movs	r3, #8
 800171e:	623b      	str	r3, [r7, #32]
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	69fa      	ldr	r2, [r7, #28]
 8001724:	615a      	str	r2, [r3, #20]
 8001726:	e003      	b.n	8001730 <HAL_GPIO_Init+0x130>
 8001728:	2300      	movs	r3, #0
 800172a:	623b      	str	r3, [r7, #32]
 800172c:	e000      	b.n	8001730 <HAL_GPIO_Init+0x130>
 800172e:	bf00      	nop
 8001730:	69bb      	ldr	r3, [r7, #24]
 8001732:	2bff      	cmp	r3, #255	; 0xff
 8001734:	d801      	bhi.n	800173a <HAL_GPIO_Init+0x13a>
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	e001      	b.n	800173e <HAL_GPIO_Init+0x13e>
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	3304      	adds	r3, #4
 800173e:	617b      	str	r3, [r7, #20]
 8001740:	69bb      	ldr	r3, [r7, #24]
 8001742:	2bff      	cmp	r3, #255	; 0xff
 8001744:	d802      	bhi.n	800174c <HAL_GPIO_Init+0x14c>
 8001746:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001748:	009b      	lsls	r3, r3, #2
 800174a:	e002      	b.n	8001752 <HAL_GPIO_Init+0x152>
 800174c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800174e:	3b08      	subs	r3, #8
 8001750:	009b      	lsls	r3, r3, #2
 8001752:	613b      	str	r3, [r7, #16]
 8001754:	697b      	ldr	r3, [r7, #20]
 8001756:	681a      	ldr	r2, [r3, #0]
 8001758:	210f      	movs	r1, #15
 800175a:	693b      	ldr	r3, [r7, #16]
 800175c:	fa01 f303 	lsl.w	r3, r1, r3
 8001760:	43db      	mvns	r3, r3
 8001762:	401a      	ands	r2, r3
 8001764:	6a39      	ldr	r1, [r7, #32]
 8001766:	693b      	ldr	r3, [r7, #16]
 8001768:	fa01 f303 	lsl.w	r3, r1, r3
 800176c:	431a      	orrs	r2, r3
 800176e:	697b      	ldr	r3, [r7, #20]
 8001770:	601a      	str	r2, [r3, #0]
 8001772:	683b      	ldr	r3, [r7, #0]
 8001774:	685b      	ldr	r3, [r3, #4]
 8001776:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800177a:	2b00      	cmp	r3, #0
 800177c:	f000 80b1 	beq.w	80018e2 <HAL_GPIO_Init+0x2e2>
 8001780:	4b4d      	ldr	r3, [pc, #308]	; (80018b8 <HAL_GPIO_Init+0x2b8>)
 8001782:	699b      	ldr	r3, [r3, #24]
 8001784:	4a4c      	ldr	r2, [pc, #304]	; (80018b8 <HAL_GPIO_Init+0x2b8>)
 8001786:	f043 0301 	orr.w	r3, r3, #1
 800178a:	6193      	str	r3, [r2, #24]
 800178c:	4b4a      	ldr	r3, [pc, #296]	; (80018b8 <HAL_GPIO_Init+0x2b8>)
 800178e:	699b      	ldr	r3, [r3, #24]
 8001790:	f003 0301 	and.w	r3, r3, #1
 8001794:	60bb      	str	r3, [r7, #8]
 8001796:	68bb      	ldr	r3, [r7, #8]
 8001798:	4a48      	ldr	r2, [pc, #288]	; (80018bc <HAL_GPIO_Init+0x2bc>)
 800179a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800179c:	089b      	lsrs	r3, r3, #2
 800179e:	3302      	adds	r3, #2
 80017a0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80017a4:	60fb      	str	r3, [r7, #12]
 80017a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017a8:	f003 0303 	and.w	r3, r3, #3
 80017ac:	009b      	lsls	r3, r3, #2
 80017ae:	220f      	movs	r2, #15
 80017b0:	fa02 f303 	lsl.w	r3, r2, r3
 80017b4:	43db      	mvns	r3, r3
 80017b6:	68fa      	ldr	r2, [r7, #12]
 80017b8:	4013      	ands	r3, r2
 80017ba:	60fb      	str	r3, [r7, #12]
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	4a40      	ldr	r2, [pc, #256]	; (80018c0 <HAL_GPIO_Init+0x2c0>)
 80017c0:	4293      	cmp	r3, r2
 80017c2:	d013      	beq.n	80017ec <HAL_GPIO_Init+0x1ec>
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	4a3f      	ldr	r2, [pc, #252]	; (80018c4 <HAL_GPIO_Init+0x2c4>)
 80017c8:	4293      	cmp	r3, r2
 80017ca:	d00d      	beq.n	80017e8 <HAL_GPIO_Init+0x1e8>
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	4a3e      	ldr	r2, [pc, #248]	; (80018c8 <HAL_GPIO_Init+0x2c8>)
 80017d0:	4293      	cmp	r3, r2
 80017d2:	d007      	beq.n	80017e4 <HAL_GPIO_Init+0x1e4>
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	4a3d      	ldr	r2, [pc, #244]	; (80018cc <HAL_GPIO_Init+0x2cc>)
 80017d8:	4293      	cmp	r3, r2
 80017da:	d101      	bne.n	80017e0 <HAL_GPIO_Init+0x1e0>
 80017dc:	2303      	movs	r3, #3
 80017de:	e006      	b.n	80017ee <HAL_GPIO_Init+0x1ee>
 80017e0:	2304      	movs	r3, #4
 80017e2:	e004      	b.n	80017ee <HAL_GPIO_Init+0x1ee>
 80017e4:	2302      	movs	r3, #2
 80017e6:	e002      	b.n	80017ee <HAL_GPIO_Init+0x1ee>
 80017e8:	2301      	movs	r3, #1
 80017ea:	e000      	b.n	80017ee <HAL_GPIO_Init+0x1ee>
 80017ec:	2300      	movs	r3, #0
 80017ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80017f0:	f002 0203 	and.w	r2, r2, #3
 80017f4:	0092      	lsls	r2, r2, #2
 80017f6:	4093      	lsls	r3, r2
 80017f8:	68fa      	ldr	r2, [r7, #12]
 80017fa:	4313      	orrs	r3, r2
 80017fc:	60fb      	str	r3, [r7, #12]
 80017fe:	492f      	ldr	r1, [pc, #188]	; (80018bc <HAL_GPIO_Init+0x2bc>)
 8001800:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001802:	089b      	lsrs	r3, r3, #2
 8001804:	3302      	adds	r3, #2
 8001806:	68fa      	ldr	r2, [r7, #12]
 8001808:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800180c:	683b      	ldr	r3, [r7, #0]
 800180e:	685b      	ldr	r3, [r3, #4]
 8001810:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001814:	2b00      	cmp	r3, #0
 8001816:	d006      	beq.n	8001826 <HAL_GPIO_Init+0x226>
 8001818:	4b2d      	ldr	r3, [pc, #180]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 800181a:	681a      	ldr	r2, [r3, #0]
 800181c:	492c      	ldr	r1, [pc, #176]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 800181e:	69bb      	ldr	r3, [r7, #24]
 8001820:	4313      	orrs	r3, r2
 8001822:	600b      	str	r3, [r1, #0]
 8001824:	e006      	b.n	8001834 <HAL_GPIO_Init+0x234>
 8001826:	4b2a      	ldr	r3, [pc, #168]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001828:	681a      	ldr	r2, [r3, #0]
 800182a:	69bb      	ldr	r3, [r7, #24]
 800182c:	43db      	mvns	r3, r3
 800182e:	4928      	ldr	r1, [pc, #160]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001830:	4013      	ands	r3, r2
 8001832:	600b      	str	r3, [r1, #0]
 8001834:	683b      	ldr	r3, [r7, #0]
 8001836:	685b      	ldr	r3, [r3, #4]
 8001838:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800183c:	2b00      	cmp	r3, #0
 800183e:	d006      	beq.n	800184e <HAL_GPIO_Init+0x24e>
 8001840:	4b23      	ldr	r3, [pc, #140]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001842:	685a      	ldr	r2, [r3, #4]
 8001844:	4922      	ldr	r1, [pc, #136]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001846:	69bb      	ldr	r3, [r7, #24]
 8001848:	4313      	orrs	r3, r2
 800184a:	604b      	str	r3, [r1, #4]
 800184c:	e006      	b.n	800185c <HAL_GPIO_Init+0x25c>
 800184e:	4b20      	ldr	r3, [pc, #128]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001850:	685a      	ldr	r2, [r3, #4]
 8001852:	69bb      	ldr	r3, [r7, #24]
 8001854:	43db      	mvns	r3, r3
 8001856:	491e      	ldr	r1, [pc, #120]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001858:	4013      	ands	r3, r2
 800185a:	604b      	str	r3, [r1, #4]
 800185c:	683b      	ldr	r3, [r7, #0]
 800185e:	685b      	ldr	r3, [r3, #4]
 8001860:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001864:	2b00      	cmp	r3, #0
 8001866:	d006      	beq.n	8001876 <HAL_GPIO_Init+0x276>
 8001868:	4b19      	ldr	r3, [pc, #100]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 800186a:	689a      	ldr	r2, [r3, #8]
 800186c:	4918      	ldr	r1, [pc, #96]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 800186e:	69bb      	ldr	r3, [r7, #24]
 8001870:	4313      	orrs	r3, r2
 8001872:	608b      	str	r3, [r1, #8]
 8001874:	e006      	b.n	8001884 <HAL_GPIO_Init+0x284>
 8001876:	4b16      	ldr	r3, [pc, #88]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001878:	689a      	ldr	r2, [r3, #8]
 800187a:	69bb      	ldr	r3, [r7, #24]
 800187c:	43db      	mvns	r3, r3
 800187e:	4914      	ldr	r1, [pc, #80]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001880:	4013      	ands	r3, r2
 8001882:	608b      	str	r3, [r1, #8]
 8001884:	683b      	ldr	r3, [r7, #0]
 8001886:	685b      	ldr	r3, [r3, #4]
 8001888:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800188c:	2b00      	cmp	r3, #0
 800188e:	d021      	beq.n	80018d4 <HAL_GPIO_Init+0x2d4>
 8001890:	4b0f      	ldr	r3, [pc, #60]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001892:	68da      	ldr	r2, [r3, #12]
 8001894:	490e      	ldr	r1, [pc, #56]	; (80018d0 <HAL_GPIO_Init+0x2d0>)
 8001896:	69bb      	ldr	r3, [r7, #24]
 8001898:	4313      	orrs	r3, r2
 800189a:	60cb      	str	r3, [r1, #12]
 800189c:	e021      	b.n	80018e2 <HAL_GPIO_Init+0x2e2>
 800189e:	bf00      	nop
 80018a0:	10320000 	.word	0x10320000
 80018a4:	10310000 	.word	0x10310000
 80018a8:	10220000 	.word	0x10220000
 80018ac:	10210000 	.word	0x10210000
 80018b0:	10120000 	.word	0x10120000
 80018b4:	10110000 	.word	0x10110000
 80018b8:	40021000 	.word	0x40021000
 80018bc:	40010000 	.word	0x40010000
 80018c0:	40010800 	.word	0x40010800
 80018c4:	40010c00 	.word	0x40010c00
 80018c8:	40011000 	.word	0x40011000
 80018cc:	40011400 	.word	0x40011400
 80018d0:	40010400 	.word	0x40010400
 80018d4:	4b0b      	ldr	r3, [pc, #44]	; (8001904 <HAL_GPIO_Init+0x304>)
 80018d6:	68da      	ldr	r2, [r3, #12]
 80018d8:	69bb      	ldr	r3, [r7, #24]
 80018da:	43db      	mvns	r3, r3
 80018dc:	4909      	ldr	r1, [pc, #36]	; (8001904 <HAL_GPIO_Init+0x304>)
 80018de:	4013      	ands	r3, r2
 80018e0:	60cb      	str	r3, [r1, #12]
 80018e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018e4:	3301      	adds	r3, #1
 80018e6:	627b      	str	r3, [r7, #36]	; 0x24
 80018e8:	683b      	ldr	r3, [r7, #0]
 80018ea:	681a      	ldr	r2, [r3, #0]
 80018ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018ee:	fa22 f303 	lsr.w	r3, r2, r3
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	f47f ae8e 	bne.w	8001614 <HAL_GPIO_Init+0x14>
 80018f8:	bf00      	nop
 80018fa:	bf00      	nop
 80018fc:	372c      	adds	r7, #44	; 0x2c
 80018fe:	46bd      	mov	sp, r7
 8001900:	bc80      	pop	{r7}
 8001902:	4770      	bx	lr
 8001904:	40010400 	.word	0x40010400

08001908 <HAL_GPIO_WritePin>:
 8001908:	b480      	push	{r7}
 800190a:	b083      	sub	sp, #12
 800190c:	af00      	add	r7, sp, #0
 800190e:	6078      	str	r0, [r7, #4]
 8001910:	460b      	mov	r3, r1
 8001912:	807b      	strh	r3, [r7, #2]
 8001914:	4613      	mov	r3, r2
 8001916:	707b      	strb	r3, [r7, #1]
 8001918:	787b      	ldrb	r3, [r7, #1]
 800191a:	2b00      	cmp	r3, #0
 800191c:	d003      	beq.n	8001926 <HAL_GPIO_WritePin+0x1e>
 800191e:	887a      	ldrh	r2, [r7, #2]
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	611a      	str	r2, [r3, #16]
 8001924:	e003      	b.n	800192e <HAL_GPIO_WritePin+0x26>
 8001926:	887b      	ldrh	r3, [r7, #2]
 8001928:	041a      	lsls	r2, r3, #16
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	611a      	str	r2, [r3, #16]
 800192e:	bf00      	nop
 8001930:	370c      	adds	r7, #12
 8001932:	46bd      	mov	sp, r7
 8001934:	bc80      	pop	{r7}
 8001936:	4770      	bx	lr

08001938 <HAL_GPIO_TogglePin>:
 8001938:	b480      	push	{r7}
 800193a:	b085      	sub	sp, #20
 800193c:	af00      	add	r7, sp, #0
 800193e:	6078      	str	r0, [r7, #4]
 8001940:	460b      	mov	r3, r1
 8001942:	807b      	strh	r3, [r7, #2]
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	68db      	ldr	r3, [r3, #12]
 8001948:	60fb      	str	r3, [r7, #12]
 800194a:	887a      	ldrh	r2, [r7, #2]
 800194c:	68fb      	ldr	r3, [r7, #12]
 800194e:	4013      	ands	r3, r2
 8001950:	041a      	lsls	r2, r3, #16
 8001952:	68fb      	ldr	r3, [r7, #12]
 8001954:	43d9      	mvns	r1, r3
 8001956:	887b      	ldrh	r3, [r7, #2]
 8001958:	400b      	ands	r3, r1
 800195a:	431a      	orrs	r2, r3
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	611a      	str	r2, [r3, #16]
 8001960:	bf00      	nop
 8001962:	3714      	adds	r7, #20
 8001964:	46bd      	mov	sp, r7
 8001966:	bc80      	pop	{r7}
 8001968:	4770      	bx	lr
	...

0800196c <HAL_RCC_OscConfig>:
 800196c:	b580      	push	{r7, lr}
 800196e:	b086      	sub	sp, #24
 8001970:	af00      	add	r7, sp, #0
 8001972:	6078      	str	r0, [r7, #4]
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	2b00      	cmp	r3, #0
 8001978:	d101      	bne.n	800197e <HAL_RCC_OscConfig+0x12>
 800197a:	2301      	movs	r3, #1
 800197c:	e272      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	f003 0301 	and.w	r3, r3, #1
 8001986:	2b00      	cmp	r3, #0
 8001988:	f000 8087 	beq.w	8001a9a <HAL_RCC_OscConfig+0x12e>
 800198c:	4b92      	ldr	r3, [pc, #584]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 800198e:	685b      	ldr	r3, [r3, #4]
 8001990:	f003 030c 	and.w	r3, r3, #12
 8001994:	2b04      	cmp	r3, #4
 8001996:	d00c      	beq.n	80019b2 <HAL_RCC_OscConfig+0x46>
 8001998:	4b8f      	ldr	r3, [pc, #572]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 800199a:	685b      	ldr	r3, [r3, #4]
 800199c:	f003 030c 	and.w	r3, r3, #12
 80019a0:	2b08      	cmp	r3, #8
 80019a2:	d112      	bne.n	80019ca <HAL_RCC_OscConfig+0x5e>
 80019a4:	4b8c      	ldr	r3, [pc, #560]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019a6:	685b      	ldr	r3, [r3, #4]
 80019a8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80019b0:	d10b      	bne.n	80019ca <HAL_RCC_OscConfig+0x5e>
 80019b2:	4b89      	ldr	r3, [pc, #548]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d06c      	beq.n	8001a98 <HAL_RCC_OscConfig+0x12c>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	685b      	ldr	r3, [r3, #4]
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	d168      	bne.n	8001a98 <HAL_RCC_OscConfig+0x12c>
 80019c6:	2301      	movs	r3, #1
 80019c8:	e24c      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	685b      	ldr	r3, [r3, #4]
 80019ce:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80019d2:	d106      	bne.n	80019e2 <HAL_RCC_OscConfig+0x76>
 80019d4:	4b80      	ldr	r3, [pc, #512]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	4a7f      	ldr	r2, [pc, #508]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019da:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80019de:	6013      	str	r3, [r2, #0]
 80019e0:	e02e      	b.n	8001a40 <HAL_RCC_OscConfig+0xd4>
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	685b      	ldr	r3, [r3, #4]
 80019e6:	2b00      	cmp	r3, #0
 80019e8:	d10c      	bne.n	8001a04 <HAL_RCC_OscConfig+0x98>
 80019ea:	4b7b      	ldr	r3, [pc, #492]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	4a7a      	ldr	r2, [pc, #488]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019f0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80019f4:	6013      	str	r3, [r2, #0]
 80019f6:	4b78      	ldr	r3, [pc, #480]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	4a77      	ldr	r2, [pc, #476]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 80019fc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001a00:	6013      	str	r3, [r2, #0]
 8001a02:	e01d      	b.n	8001a40 <HAL_RCC_OscConfig+0xd4>
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	685b      	ldr	r3, [r3, #4]
 8001a08:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001a0c:	d10c      	bne.n	8001a28 <HAL_RCC_OscConfig+0xbc>
 8001a0e:	4b72      	ldr	r3, [pc, #456]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a10:	681b      	ldr	r3, [r3, #0]
 8001a12:	4a71      	ldr	r2, [pc, #452]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a14:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001a18:	6013      	str	r3, [r2, #0]
 8001a1a:	4b6f      	ldr	r3, [pc, #444]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	4a6e      	ldr	r2, [pc, #440]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001a24:	6013      	str	r3, [r2, #0]
 8001a26:	e00b      	b.n	8001a40 <HAL_RCC_OscConfig+0xd4>
 8001a28:	4b6b      	ldr	r3, [pc, #428]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	4a6a      	ldr	r2, [pc, #424]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a2e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001a32:	6013      	str	r3, [r2, #0]
 8001a34:	4b68      	ldr	r3, [pc, #416]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	4a67      	ldr	r2, [pc, #412]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a3a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001a3e:	6013      	str	r3, [r2, #0]
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	685b      	ldr	r3, [r3, #4]
 8001a44:	2b00      	cmp	r3, #0
 8001a46:	d013      	beq.n	8001a70 <HAL_RCC_OscConfig+0x104>
 8001a48:	f7ff fbee 	bl	8001228 <HAL_GetTick>
 8001a4c:	6138      	str	r0, [r7, #16]
 8001a4e:	e008      	b.n	8001a62 <HAL_RCC_OscConfig+0xf6>
 8001a50:	f7ff fbea 	bl	8001228 <HAL_GetTick>
 8001a54:	4602      	mov	r2, r0
 8001a56:	693b      	ldr	r3, [r7, #16]
 8001a58:	1ad3      	subs	r3, r2, r3
 8001a5a:	2b64      	cmp	r3, #100	; 0x64
 8001a5c:	d901      	bls.n	8001a62 <HAL_RCC_OscConfig+0xf6>
 8001a5e:	2303      	movs	r3, #3
 8001a60:	e200      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001a62:	4b5d      	ldr	r3, [pc, #372]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a64:	681b      	ldr	r3, [r3, #0]
 8001a66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a6a:	2b00      	cmp	r3, #0
 8001a6c:	d0f0      	beq.n	8001a50 <HAL_RCC_OscConfig+0xe4>
 8001a6e:	e014      	b.n	8001a9a <HAL_RCC_OscConfig+0x12e>
 8001a70:	f7ff fbda 	bl	8001228 <HAL_GetTick>
 8001a74:	6138      	str	r0, [r7, #16]
 8001a76:	e008      	b.n	8001a8a <HAL_RCC_OscConfig+0x11e>
 8001a78:	f7ff fbd6 	bl	8001228 <HAL_GetTick>
 8001a7c:	4602      	mov	r2, r0
 8001a7e:	693b      	ldr	r3, [r7, #16]
 8001a80:	1ad3      	subs	r3, r2, r3
 8001a82:	2b64      	cmp	r3, #100	; 0x64
 8001a84:	d901      	bls.n	8001a8a <HAL_RCC_OscConfig+0x11e>
 8001a86:	2303      	movs	r3, #3
 8001a88:	e1ec      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001a8a:	4b53      	ldr	r3, [pc, #332]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a92:	2b00      	cmp	r3, #0
 8001a94:	d1f0      	bne.n	8001a78 <HAL_RCC_OscConfig+0x10c>
 8001a96:	e000      	b.n	8001a9a <HAL_RCC_OscConfig+0x12e>
 8001a98:	bf00      	nop
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	f003 0302 	and.w	r3, r3, #2
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d063      	beq.n	8001b6e <HAL_RCC_OscConfig+0x202>
 8001aa6:	4b4c      	ldr	r3, [pc, #304]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001aa8:	685b      	ldr	r3, [r3, #4]
 8001aaa:	f003 030c 	and.w	r3, r3, #12
 8001aae:	2b00      	cmp	r3, #0
 8001ab0:	d00b      	beq.n	8001aca <HAL_RCC_OscConfig+0x15e>
 8001ab2:	4b49      	ldr	r3, [pc, #292]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001ab4:	685b      	ldr	r3, [r3, #4]
 8001ab6:	f003 030c 	and.w	r3, r3, #12
 8001aba:	2b08      	cmp	r3, #8
 8001abc:	d11c      	bne.n	8001af8 <HAL_RCC_OscConfig+0x18c>
 8001abe:	4b46      	ldr	r3, [pc, #280]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001ac0:	685b      	ldr	r3, [r3, #4]
 8001ac2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	d116      	bne.n	8001af8 <HAL_RCC_OscConfig+0x18c>
 8001aca:	4b43      	ldr	r3, [pc, #268]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001acc:	681b      	ldr	r3, [r3, #0]
 8001ace:	f003 0302 	and.w	r3, r3, #2
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	d005      	beq.n	8001ae2 <HAL_RCC_OscConfig+0x176>
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	691b      	ldr	r3, [r3, #16]
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d001      	beq.n	8001ae2 <HAL_RCC_OscConfig+0x176>
 8001ade:	2301      	movs	r3, #1
 8001ae0:	e1c0      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001ae2:	4b3d      	ldr	r3, [pc, #244]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001ae4:	681b      	ldr	r3, [r3, #0]
 8001ae6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	695b      	ldr	r3, [r3, #20]
 8001aee:	00db      	lsls	r3, r3, #3
 8001af0:	4939      	ldr	r1, [pc, #228]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001af2:	4313      	orrs	r3, r2
 8001af4:	600b      	str	r3, [r1, #0]
 8001af6:	e03a      	b.n	8001b6e <HAL_RCC_OscConfig+0x202>
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	691b      	ldr	r3, [r3, #16]
 8001afc:	2b00      	cmp	r3, #0
 8001afe:	d020      	beq.n	8001b42 <HAL_RCC_OscConfig+0x1d6>
 8001b00:	4b36      	ldr	r3, [pc, #216]	; (8001bdc <HAL_RCC_OscConfig+0x270>)
 8001b02:	2201      	movs	r2, #1
 8001b04:	601a      	str	r2, [r3, #0]
 8001b06:	f7ff fb8f 	bl	8001228 <HAL_GetTick>
 8001b0a:	6138      	str	r0, [r7, #16]
 8001b0c:	e008      	b.n	8001b20 <HAL_RCC_OscConfig+0x1b4>
 8001b0e:	f7ff fb8b 	bl	8001228 <HAL_GetTick>
 8001b12:	4602      	mov	r2, r0
 8001b14:	693b      	ldr	r3, [r7, #16]
 8001b16:	1ad3      	subs	r3, r2, r3
 8001b18:	2b02      	cmp	r3, #2
 8001b1a:	d901      	bls.n	8001b20 <HAL_RCC_OscConfig+0x1b4>
 8001b1c:	2303      	movs	r3, #3
 8001b1e:	e1a1      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001b20:	4b2d      	ldr	r3, [pc, #180]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001b22:	681b      	ldr	r3, [r3, #0]
 8001b24:	f003 0302 	and.w	r3, r3, #2
 8001b28:	2b00      	cmp	r3, #0
 8001b2a:	d0f0      	beq.n	8001b0e <HAL_RCC_OscConfig+0x1a2>
 8001b2c:	4b2a      	ldr	r3, [pc, #168]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	695b      	ldr	r3, [r3, #20]
 8001b38:	00db      	lsls	r3, r3, #3
 8001b3a:	4927      	ldr	r1, [pc, #156]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001b3c:	4313      	orrs	r3, r2
 8001b3e:	600b      	str	r3, [r1, #0]
 8001b40:	e015      	b.n	8001b6e <HAL_RCC_OscConfig+0x202>
 8001b42:	4b26      	ldr	r3, [pc, #152]	; (8001bdc <HAL_RCC_OscConfig+0x270>)
 8001b44:	2200      	movs	r2, #0
 8001b46:	601a      	str	r2, [r3, #0]
 8001b48:	f7ff fb6e 	bl	8001228 <HAL_GetTick>
 8001b4c:	6138      	str	r0, [r7, #16]
 8001b4e:	e008      	b.n	8001b62 <HAL_RCC_OscConfig+0x1f6>
 8001b50:	f7ff fb6a 	bl	8001228 <HAL_GetTick>
 8001b54:	4602      	mov	r2, r0
 8001b56:	693b      	ldr	r3, [r7, #16]
 8001b58:	1ad3      	subs	r3, r2, r3
 8001b5a:	2b02      	cmp	r3, #2
 8001b5c:	d901      	bls.n	8001b62 <HAL_RCC_OscConfig+0x1f6>
 8001b5e:	2303      	movs	r3, #3
 8001b60:	e180      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001b62:	4b1d      	ldr	r3, [pc, #116]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	f003 0302 	and.w	r3, r3, #2
 8001b6a:	2b00      	cmp	r3, #0
 8001b6c:	d1f0      	bne.n	8001b50 <HAL_RCC_OscConfig+0x1e4>
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	681b      	ldr	r3, [r3, #0]
 8001b72:	f003 0308 	and.w	r3, r3, #8
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d03a      	beq.n	8001bf0 <HAL_RCC_OscConfig+0x284>
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	699b      	ldr	r3, [r3, #24]
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d019      	beq.n	8001bb6 <HAL_RCC_OscConfig+0x24a>
 8001b82:	4b17      	ldr	r3, [pc, #92]	; (8001be0 <HAL_RCC_OscConfig+0x274>)
 8001b84:	2201      	movs	r2, #1
 8001b86:	601a      	str	r2, [r3, #0]
 8001b88:	f7ff fb4e 	bl	8001228 <HAL_GetTick>
 8001b8c:	6138      	str	r0, [r7, #16]
 8001b8e:	e008      	b.n	8001ba2 <HAL_RCC_OscConfig+0x236>
 8001b90:	f7ff fb4a 	bl	8001228 <HAL_GetTick>
 8001b94:	4602      	mov	r2, r0
 8001b96:	693b      	ldr	r3, [r7, #16]
 8001b98:	1ad3      	subs	r3, r2, r3
 8001b9a:	2b02      	cmp	r3, #2
 8001b9c:	d901      	bls.n	8001ba2 <HAL_RCC_OscConfig+0x236>
 8001b9e:	2303      	movs	r3, #3
 8001ba0:	e160      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001ba2:	4b0d      	ldr	r3, [pc, #52]	; (8001bd8 <HAL_RCC_OscConfig+0x26c>)
 8001ba4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ba6:	f003 0302 	and.w	r3, r3, #2
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d0f0      	beq.n	8001b90 <HAL_RCC_OscConfig+0x224>
 8001bae:	2001      	movs	r0, #1
 8001bb0:	f000 fad8 	bl	8002164 <RCC_Delay>
 8001bb4:	e01c      	b.n	8001bf0 <HAL_RCC_OscConfig+0x284>
 8001bb6:	4b0a      	ldr	r3, [pc, #40]	; (8001be0 <HAL_RCC_OscConfig+0x274>)
 8001bb8:	2200      	movs	r2, #0
 8001bba:	601a      	str	r2, [r3, #0]
 8001bbc:	f7ff fb34 	bl	8001228 <HAL_GetTick>
 8001bc0:	6138      	str	r0, [r7, #16]
 8001bc2:	e00f      	b.n	8001be4 <HAL_RCC_OscConfig+0x278>
 8001bc4:	f7ff fb30 	bl	8001228 <HAL_GetTick>
 8001bc8:	4602      	mov	r2, r0
 8001bca:	693b      	ldr	r3, [r7, #16]
 8001bcc:	1ad3      	subs	r3, r2, r3
 8001bce:	2b02      	cmp	r3, #2
 8001bd0:	d908      	bls.n	8001be4 <HAL_RCC_OscConfig+0x278>
 8001bd2:	2303      	movs	r3, #3
 8001bd4:	e146      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001bd6:	bf00      	nop
 8001bd8:	40021000 	.word	0x40021000
 8001bdc:	42420000 	.word	0x42420000
 8001be0:	42420480 	.word	0x42420480
 8001be4:	4b92      	ldr	r3, [pc, #584]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001be6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001be8:	f003 0302 	and.w	r3, r3, #2
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	d1e9      	bne.n	8001bc4 <HAL_RCC_OscConfig+0x258>
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	f003 0304 	and.w	r3, r3, #4
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	f000 80a6 	beq.w	8001d4a <HAL_RCC_OscConfig+0x3de>
 8001bfe:	2300      	movs	r3, #0
 8001c00:	75fb      	strb	r3, [r7, #23]
 8001c02:	4b8b      	ldr	r3, [pc, #556]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c04:	69db      	ldr	r3, [r3, #28]
 8001c06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d10d      	bne.n	8001c2a <HAL_RCC_OscConfig+0x2be>
 8001c0e:	4b88      	ldr	r3, [pc, #544]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c10:	69db      	ldr	r3, [r3, #28]
 8001c12:	4a87      	ldr	r2, [pc, #540]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c14:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c18:	61d3      	str	r3, [r2, #28]
 8001c1a:	4b85      	ldr	r3, [pc, #532]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c1c:	69db      	ldr	r3, [r3, #28]
 8001c1e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c22:	60bb      	str	r3, [r7, #8]
 8001c24:	68bb      	ldr	r3, [r7, #8]
 8001c26:	2301      	movs	r3, #1
 8001c28:	75fb      	strb	r3, [r7, #23]
 8001c2a:	4b82      	ldr	r3, [pc, #520]	; (8001e34 <HAL_RCC_OscConfig+0x4c8>)
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c32:	2b00      	cmp	r3, #0
 8001c34:	d118      	bne.n	8001c68 <HAL_RCC_OscConfig+0x2fc>
 8001c36:	4b7f      	ldr	r3, [pc, #508]	; (8001e34 <HAL_RCC_OscConfig+0x4c8>)
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	4a7e      	ldr	r2, [pc, #504]	; (8001e34 <HAL_RCC_OscConfig+0x4c8>)
 8001c3c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c40:	6013      	str	r3, [r2, #0]
 8001c42:	f7ff faf1 	bl	8001228 <HAL_GetTick>
 8001c46:	6138      	str	r0, [r7, #16]
 8001c48:	e008      	b.n	8001c5c <HAL_RCC_OscConfig+0x2f0>
 8001c4a:	f7ff faed 	bl	8001228 <HAL_GetTick>
 8001c4e:	4602      	mov	r2, r0
 8001c50:	693b      	ldr	r3, [r7, #16]
 8001c52:	1ad3      	subs	r3, r2, r3
 8001c54:	2b64      	cmp	r3, #100	; 0x64
 8001c56:	d901      	bls.n	8001c5c <HAL_RCC_OscConfig+0x2f0>
 8001c58:	2303      	movs	r3, #3
 8001c5a:	e103      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001c5c:	4b75      	ldr	r3, [pc, #468]	; (8001e34 <HAL_RCC_OscConfig+0x4c8>)
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d0f0      	beq.n	8001c4a <HAL_RCC_OscConfig+0x2de>
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	68db      	ldr	r3, [r3, #12]
 8001c6c:	2b01      	cmp	r3, #1
 8001c6e:	d106      	bne.n	8001c7e <HAL_RCC_OscConfig+0x312>
 8001c70:	4b6f      	ldr	r3, [pc, #444]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c72:	6a1b      	ldr	r3, [r3, #32]
 8001c74:	4a6e      	ldr	r2, [pc, #440]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c76:	f043 0301 	orr.w	r3, r3, #1
 8001c7a:	6213      	str	r3, [r2, #32]
 8001c7c:	e02d      	b.n	8001cda <HAL_RCC_OscConfig+0x36e>
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	68db      	ldr	r3, [r3, #12]
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	d10c      	bne.n	8001ca0 <HAL_RCC_OscConfig+0x334>
 8001c86:	4b6a      	ldr	r3, [pc, #424]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c88:	6a1b      	ldr	r3, [r3, #32]
 8001c8a:	4a69      	ldr	r2, [pc, #420]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c8c:	f023 0301 	bic.w	r3, r3, #1
 8001c90:	6213      	str	r3, [r2, #32]
 8001c92:	4b67      	ldr	r3, [pc, #412]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c94:	6a1b      	ldr	r3, [r3, #32]
 8001c96:	4a66      	ldr	r2, [pc, #408]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001c98:	f023 0304 	bic.w	r3, r3, #4
 8001c9c:	6213      	str	r3, [r2, #32]
 8001c9e:	e01c      	b.n	8001cda <HAL_RCC_OscConfig+0x36e>
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	68db      	ldr	r3, [r3, #12]
 8001ca4:	2b05      	cmp	r3, #5
 8001ca6:	d10c      	bne.n	8001cc2 <HAL_RCC_OscConfig+0x356>
 8001ca8:	4b61      	ldr	r3, [pc, #388]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001caa:	6a1b      	ldr	r3, [r3, #32]
 8001cac:	4a60      	ldr	r2, [pc, #384]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cae:	f043 0304 	orr.w	r3, r3, #4
 8001cb2:	6213      	str	r3, [r2, #32]
 8001cb4:	4b5e      	ldr	r3, [pc, #376]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cb6:	6a1b      	ldr	r3, [r3, #32]
 8001cb8:	4a5d      	ldr	r2, [pc, #372]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cba:	f043 0301 	orr.w	r3, r3, #1
 8001cbe:	6213      	str	r3, [r2, #32]
 8001cc0:	e00b      	b.n	8001cda <HAL_RCC_OscConfig+0x36e>
 8001cc2:	4b5b      	ldr	r3, [pc, #364]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cc4:	6a1b      	ldr	r3, [r3, #32]
 8001cc6:	4a5a      	ldr	r2, [pc, #360]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cc8:	f023 0301 	bic.w	r3, r3, #1
 8001ccc:	6213      	str	r3, [r2, #32]
 8001cce:	4b58      	ldr	r3, [pc, #352]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cd0:	6a1b      	ldr	r3, [r3, #32]
 8001cd2:	4a57      	ldr	r2, [pc, #348]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001cd4:	f023 0304 	bic.w	r3, r3, #4
 8001cd8:	6213      	str	r3, [r2, #32]
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	68db      	ldr	r3, [r3, #12]
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	d015      	beq.n	8001d0e <HAL_RCC_OscConfig+0x3a2>
 8001ce2:	f7ff faa1 	bl	8001228 <HAL_GetTick>
 8001ce6:	6138      	str	r0, [r7, #16]
 8001ce8:	e00a      	b.n	8001d00 <HAL_RCC_OscConfig+0x394>
 8001cea:	f7ff fa9d 	bl	8001228 <HAL_GetTick>
 8001cee:	4602      	mov	r2, r0
 8001cf0:	693b      	ldr	r3, [r7, #16]
 8001cf2:	1ad3      	subs	r3, r2, r3
 8001cf4:	f241 3288 	movw	r2, #5000	; 0x1388
 8001cf8:	4293      	cmp	r3, r2
 8001cfa:	d901      	bls.n	8001d00 <HAL_RCC_OscConfig+0x394>
 8001cfc:	2303      	movs	r3, #3
 8001cfe:	e0b1      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001d00:	4b4b      	ldr	r3, [pc, #300]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001d02:	6a1b      	ldr	r3, [r3, #32]
 8001d04:	f003 0302 	and.w	r3, r3, #2
 8001d08:	2b00      	cmp	r3, #0
 8001d0a:	d0ee      	beq.n	8001cea <HAL_RCC_OscConfig+0x37e>
 8001d0c:	e014      	b.n	8001d38 <HAL_RCC_OscConfig+0x3cc>
 8001d0e:	f7ff fa8b 	bl	8001228 <HAL_GetTick>
 8001d12:	6138      	str	r0, [r7, #16]
 8001d14:	e00a      	b.n	8001d2c <HAL_RCC_OscConfig+0x3c0>
 8001d16:	f7ff fa87 	bl	8001228 <HAL_GetTick>
 8001d1a:	4602      	mov	r2, r0
 8001d1c:	693b      	ldr	r3, [r7, #16]
 8001d1e:	1ad3      	subs	r3, r2, r3
 8001d20:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d24:	4293      	cmp	r3, r2
 8001d26:	d901      	bls.n	8001d2c <HAL_RCC_OscConfig+0x3c0>
 8001d28:	2303      	movs	r3, #3
 8001d2a:	e09b      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001d2c:	4b40      	ldr	r3, [pc, #256]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001d2e:	6a1b      	ldr	r3, [r3, #32]
 8001d30:	f003 0302 	and.w	r3, r3, #2
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	d1ee      	bne.n	8001d16 <HAL_RCC_OscConfig+0x3aa>
 8001d38:	7dfb      	ldrb	r3, [r7, #23]
 8001d3a:	2b01      	cmp	r3, #1
 8001d3c:	d105      	bne.n	8001d4a <HAL_RCC_OscConfig+0x3de>
 8001d3e:	4b3c      	ldr	r3, [pc, #240]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001d40:	69db      	ldr	r3, [r3, #28]
 8001d42:	4a3b      	ldr	r2, [pc, #236]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001d44:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001d48:	61d3      	str	r3, [r2, #28]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	69db      	ldr	r3, [r3, #28]
 8001d4e:	2b00      	cmp	r3, #0
 8001d50:	f000 8087 	beq.w	8001e62 <HAL_RCC_OscConfig+0x4f6>
 8001d54:	4b36      	ldr	r3, [pc, #216]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001d56:	685b      	ldr	r3, [r3, #4]
 8001d58:	f003 030c 	and.w	r3, r3, #12
 8001d5c:	2b08      	cmp	r3, #8
 8001d5e:	d061      	beq.n	8001e24 <HAL_RCC_OscConfig+0x4b8>
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	69db      	ldr	r3, [r3, #28]
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	d146      	bne.n	8001df6 <HAL_RCC_OscConfig+0x48a>
 8001d68:	4b33      	ldr	r3, [pc, #204]	; (8001e38 <HAL_RCC_OscConfig+0x4cc>)
 8001d6a:	2200      	movs	r2, #0
 8001d6c:	601a      	str	r2, [r3, #0]
 8001d6e:	f7ff fa5b 	bl	8001228 <HAL_GetTick>
 8001d72:	6138      	str	r0, [r7, #16]
 8001d74:	e008      	b.n	8001d88 <HAL_RCC_OscConfig+0x41c>
 8001d76:	f7ff fa57 	bl	8001228 <HAL_GetTick>
 8001d7a:	4602      	mov	r2, r0
 8001d7c:	693b      	ldr	r3, [r7, #16]
 8001d7e:	1ad3      	subs	r3, r2, r3
 8001d80:	2b02      	cmp	r3, #2
 8001d82:	d901      	bls.n	8001d88 <HAL_RCC_OscConfig+0x41c>
 8001d84:	2303      	movs	r3, #3
 8001d86:	e06d      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001d88:	4b29      	ldr	r3, [pc, #164]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d90:	2b00      	cmp	r3, #0
 8001d92:	d1f0      	bne.n	8001d76 <HAL_RCC_OscConfig+0x40a>
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	6a1b      	ldr	r3, [r3, #32]
 8001d98:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001d9c:	d108      	bne.n	8001db0 <HAL_RCC_OscConfig+0x444>
 8001d9e:	4b24      	ldr	r3, [pc, #144]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001da0:	685b      	ldr	r3, [r3, #4]
 8001da2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	689b      	ldr	r3, [r3, #8]
 8001daa:	4921      	ldr	r1, [pc, #132]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001dac:	4313      	orrs	r3, r2
 8001dae:	604b      	str	r3, [r1, #4]
 8001db0:	4b1f      	ldr	r3, [pc, #124]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001db2:	685b      	ldr	r3, [r3, #4]
 8001db4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	6a19      	ldr	r1, [r3, #32]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dc0:	430b      	orrs	r3, r1
 8001dc2:	491b      	ldr	r1, [pc, #108]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001dc4:	4313      	orrs	r3, r2
 8001dc6:	604b      	str	r3, [r1, #4]
 8001dc8:	4b1b      	ldr	r3, [pc, #108]	; (8001e38 <HAL_RCC_OscConfig+0x4cc>)
 8001dca:	2201      	movs	r2, #1
 8001dcc:	601a      	str	r2, [r3, #0]
 8001dce:	f7ff fa2b 	bl	8001228 <HAL_GetTick>
 8001dd2:	6138      	str	r0, [r7, #16]
 8001dd4:	e008      	b.n	8001de8 <HAL_RCC_OscConfig+0x47c>
 8001dd6:	f7ff fa27 	bl	8001228 <HAL_GetTick>
 8001dda:	4602      	mov	r2, r0
 8001ddc:	693b      	ldr	r3, [r7, #16]
 8001dde:	1ad3      	subs	r3, r2, r3
 8001de0:	2b02      	cmp	r3, #2
 8001de2:	d901      	bls.n	8001de8 <HAL_RCC_OscConfig+0x47c>
 8001de4:	2303      	movs	r3, #3
 8001de6:	e03d      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001de8:	4b11      	ldr	r3, [pc, #68]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	d0f0      	beq.n	8001dd6 <HAL_RCC_OscConfig+0x46a>
 8001df4:	e035      	b.n	8001e62 <HAL_RCC_OscConfig+0x4f6>
 8001df6:	4b10      	ldr	r3, [pc, #64]	; (8001e38 <HAL_RCC_OscConfig+0x4cc>)
 8001df8:	2200      	movs	r2, #0
 8001dfa:	601a      	str	r2, [r3, #0]
 8001dfc:	f7ff fa14 	bl	8001228 <HAL_GetTick>
 8001e00:	6138      	str	r0, [r7, #16]
 8001e02:	e008      	b.n	8001e16 <HAL_RCC_OscConfig+0x4aa>
 8001e04:	f7ff fa10 	bl	8001228 <HAL_GetTick>
 8001e08:	4602      	mov	r2, r0
 8001e0a:	693b      	ldr	r3, [r7, #16]
 8001e0c:	1ad3      	subs	r3, r2, r3
 8001e0e:	2b02      	cmp	r3, #2
 8001e10:	d901      	bls.n	8001e16 <HAL_RCC_OscConfig+0x4aa>
 8001e12:	2303      	movs	r3, #3
 8001e14:	e026      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001e16:	4b06      	ldr	r3, [pc, #24]	; (8001e30 <HAL_RCC_OscConfig+0x4c4>)
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e1e:	2b00      	cmp	r3, #0
 8001e20:	d1f0      	bne.n	8001e04 <HAL_RCC_OscConfig+0x498>
 8001e22:	e01e      	b.n	8001e62 <HAL_RCC_OscConfig+0x4f6>
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	69db      	ldr	r3, [r3, #28]
 8001e28:	2b01      	cmp	r3, #1
 8001e2a:	d107      	bne.n	8001e3c <HAL_RCC_OscConfig+0x4d0>
 8001e2c:	2301      	movs	r3, #1
 8001e2e:	e019      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001e30:	40021000 	.word	0x40021000
 8001e34:	40007000 	.word	0x40007000
 8001e38:	42420060 	.word	0x42420060
 8001e3c:	4b0b      	ldr	r3, [pc, #44]	; (8001e6c <HAL_RCC_OscConfig+0x500>)
 8001e3e:	685b      	ldr	r3, [r3, #4]
 8001e40:	60fb      	str	r3, [r7, #12]
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	6a1b      	ldr	r3, [r3, #32]
 8001e4c:	429a      	cmp	r2, r3
 8001e4e:	d106      	bne.n	8001e5e <HAL_RCC_OscConfig+0x4f2>
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e5a:	429a      	cmp	r2, r3
 8001e5c:	d001      	beq.n	8001e62 <HAL_RCC_OscConfig+0x4f6>
 8001e5e:	2301      	movs	r3, #1
 8001e60:	e000      	b.n	8001e64 <HAL_RCC_OscConfig+0x4f8>
 8001e62:	2300      	movs	r3, #0
 8001e64:	4618      	mov	r0, r3
 8001e66:	3718      	adds	r7, #24
 8001e68:	46bd      	mov	sp, r7
 8001e6a:	bd80      	pop	{r7, pc}
 8001e6c:	40021000 	.word	0x40021000

08001e70 <HAL_RCC_ClockConfig>:
 8001e70:	b580      	push	{r7, lr}
 8001e72:	b084      	sub	sp, #16
 8001e74:	af00      	add	r7, sp, #0
 8001e76:	6078      	str	r0, [r7, #4]
 8001e78:	6039      	str	r1, [r7, #0]
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d101      	bne.n	8001e84 <HAL_RCC_ClockConfig+0x14>
 8001e80:	2301      	movs	r3, #1
 8001e82:	e0d0      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001e84:	4b6a      	ldr	r3, [pc, #424]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	f003 0307 	and.w	r3, r3, #7
 8001e8c:	683a      	ldr	r2, [r7, #0]
 8001e8e:	429a      	cmp	r2, r3
 8001e90:	d910      	bls.n	8001eb4 <HAL_RCC_ClockConfig+0x44>
 8001e92:	4b67      	ldr	r3, [pc, #412]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f023 0207 	bic.w	r2, r3, #7
 8001e9a:	4965      	ldr	r1, [pc, #404]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001e9c:	683b      	ldr	r3, [r7, #0]
 8001e9e:	4313      	orrs	r3, r2
 8001ea0:	600b      	str	r3, [r1, #0]
 8001ea2:	4b63      	ldr	r3, [pc, #396]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	f003 0307 	and.w	r3, r3, #7
 8001eaa:	683a      	ldr	r2, [r7, #0]
 8001eac:	429a      	cmp	r2, r3
 8001eae:	d001      	beq.n	8001eb4 <HAL_RCC_ClockConfig+0x44>
 8001eb0:	2301      	movs	r3, #1
 8001eb2:	e0b8      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	f003 0302 	and.w	r3, r3, #2
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d020      	beq.n	8001f02 <HAL_RCC_ClockConfig+0x92>
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	f003 0304 	and.w	r3, r3, #4
 8001ec8:	2b00      	cmp	r3, #0
 8001eca:	d005      	beq.n	8001ed8 <HAL_RCC_ClockConfig+0x68>
 8001ecc:	4b59      	ldr	r3, [pc, #356]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001ece:	685b      	ldr	r3, [r3, #4]
 8001ed0:	4a58      	ldr	r2, [pc, #352]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001ed2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001ed6:	6053      	str	r3, [r2, #4]
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	f003 0308 	and.w	r3, r3, #8
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d005      	beq.n	8001ef0 <HAL_RCC_ClockConfig+0x80>
 8001ee4:	4b53      	ldr	r3, [pc, #332]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001ee6:	685b      	ldr	r3, [r3, #4]
 8001ee8:	4a52      	ldr	r2, [pc, #328]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001eea:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001eee:	6053      	str	r3, [r2, #4]
 8001ef0:	4b50      	ldr	r3, [pc, #320]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001ef2:	685b      	ldr	r3, [r3, #4]
 8001ef4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	689b      	ldr	r3, [r3, #8]
 8001efc:	494d      	ldr	r1, [pc, #308]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001efe:	4313      	orrs	r3, r2
 8001f00:	604b      	str	r3, [r1, #4]
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	f003 0301 	and.w	r3, r3, #1
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d040      	beq.n	8001f90 <HAL_RCC_ClockConfig+0x120>
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	685b      	ldr	r3, [r3, #4]
 8001f12:	2b01      	cmp	r3, #1
 8001f14:	d107      	bne.n	8001f26 <HAL_RCC_ClockConfig+0xb6>
 8001f16:	4b47      	ldr	r3, [pc, #284]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d115      	bne.n	8001f4e <HAL_RCC_ClockConfig+0xde>
 8001f22:	2301      	movs	r3, #1
 8001f24:	e07f      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	685b      	ldr	r3, [r3, #4]
 8001f2a:	2b02      	cmp	r3, #2
 8001f2c:	d107      	bne.n	8001f3e <HAL_RCC_ClockConfig+0xce>
 8001f2e:	4b41      	ldr	r3, [pc, #260]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d109      	bne.n	8001f4e <HAL_RCC_ClockConfig+0xde>
 8001f3a:	2301      	movs	r3, #1
 8001f3c:	e073      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001f3e:	4b3d      	ldr	r3, [pc, #244]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	f003 0302 	and.w	r3, r3, #2
 8001f46:	2b00      	cmp	r3, #0
 8001f48:	d101      	bne.n	8001f4e <HAL_RCC_ClockConfig+0xde>
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	e06b      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001f4e:	4b39      	ldr	r3, [pc, #228]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001f50:	685b      	ldr	r3, [r3, #4]
 8001f52:	f023 0203 	bic.w	r2, r3, #3
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	685b      	ldr	r3, [r3, #4]
 8001f5a:	4936      	ldr	r1, [pc, #216]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001f5c:	4313      	orrs	r3, r2
 8001f5e:	604b      	str	r3, [r1, #4]
 8001f60:	f7ff f962 	bl	8001228 <HAL_GetTick>
 8001f64:	60f8      	str	r0, [r7, #12]
 8001f66:	e00a      	b.n	8001f7e <HAL_RCC_ClockConfig+0x10e>
 8001f68:	f7ff f95e 	bl	8001228 <HAL_GetTick>
 8001f6c:	4602      	mov	r2, r0
 8001f6e:	68fb      	ldr	r3, [r7, #12]
 8001f70:	1ad3      	subs	r3, r2, r3
 8001f72:	f241 3288 	movw	r2, #5000	; 0x1388
 8001f76:	4293      	cmp	r3, r2
 8001f78:	d901      	bls.n	8001f7e <HAL_RCC_ClockConfig+0x10e>
 8001f7a:	2303      	movs	r3, #3
 8001f7c:	e053      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001f7e:	4b2d      	ldr	r3, [pc, #180]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001f80:	685b      	ldr	r3, [r3, #4]
 8001f82:	f003 020c 	and.w	r2, r3, #12
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	685b      	ldr	r3, [r3, #4]
 8001f8a:	009b      	lsls	r3, r3, #2
 8001f8c:	429a      	cmp	r2, r3
 8001f8e:	d1eb      	bne.n	8001f68 <HAL_RCC_ClockConfig+0xf8>
 8001f90:	4b27      	ldr	r3, [pc, #156]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	f003 0307 	and.w	r3, r3, #7
 8001f98:	683a      	ldr	r2, [r7, #0]
 8001f9a:	429a      	cmp	r2, r3
 8001f9c:	d210      	bcs.n	8001fc0 <HAL_RCC_ClockConfig+0x150>
 8001f9e:	4b24      	ldr	r3, [pc, #144]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	f023 0207 	bic.w	r2, r3, #7
 8001fa6:	4922      	ldr	r1, [pc, #136]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001fa8:	683b      	ldr	r3, [r7, #0]
 8001faa:	4313      	orrs	r3, r2
 8001fac:	600b      	str	r3, [r1, #0]
 8001fae:	4b20      	ldr	r3, [pc, #128]	; (8002030 <HAL_RCC_ClockConfig+0x1c0>)
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	f003 0307 	and.w	r3, r3, #7
 8001fb6:	683a      	ldr	r2, [r7, #0]
 8001fb8:	429a      	cmp	r2, r3
 8001fba:	d001      	beq.n	8001fc0 <HAL_RCC_ClockConfig+0x150>
 8001fbc:	2301      	movs	r3, #1
 8001fbe:	e032      	b.n	8002026 <HAL_RCC_ClockConfig+0x1b6>
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	f003 0304 	and.w	r3, r3, #4
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d008      	beq.n	8001fde <HAL_RCC_ClockConfig+0x16e>
 8001fcc:	4b19      	ldr	r3, [pc, #100]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001fce:	685b      	ldr	r3, [r3, #4]
 8001fd0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	68db      	ldr	r3, [r3, #12]
 8001fd8:	4916      	ldr	r1, [pc, #88]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001fda:	4313      	orrs	r3, r2
 8001fdc:	604b      	str	r3, [r1, #4]
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	f003 0308 	and.w	r3, r3, #8
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	d009      	beq.n	8001ffe <HAL_RCC_ClockConfig+0x18e>
 8001fea:	4b12      	ldr	r3, [pc, #72]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001fec:	685b      	ldr	r3, [r3, #4]
 8001fee:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	691b      	ldr	r3, [r3, #16]
 8001ff6:	00db      	lsls	r3, r3, #3
 8001ff8:	490e      	ldr	r1, [pc, #56]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8001ffa:	4313      	orrs	r3, r2
 8001ffc:	604b      	str	r3, [r1, #4]
 8001ffe:	f000 f821 	bl	8002044 <HAL_RCC_GetSysClockFreq>
 8002002:	4602      	mov	r2, r0
 8002004:	4b0b      	ldr	r3, [pc, #44]	; (8002034 <HAL_RCC_ClockConfig+0x1c4>)
 8002006:	685b      	ldr	r3, [r3, #4]
 8002008:	091b      	lsrs	r3, r3, #4
 800200a:	f003 030f 	and.w	r3, r3, #15
 800200e:	490a      	ldr	r1, [pc, #40]	; (8002038 <HAL_RCC_ClockConfig+0x1c8>)
 8002010:	5ccb      	ldrb	r3, [r1, r3]
 8002012:	fa22 f303 	lsr.w	r3, r2, r3
 8002016:	4a09      	ldr	r2, [pc, #36]	; (800203c <HAL_RCC_ClockConfig+0x1cc>)
 8002018:	6013      	str	r3, [r2, #0]
 800201a:	4b09      	ldr	r3, [pc, #36]	; (8002040 <HAL_RCC_ClockConfig+0x1d0>)
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	4618      	mov	r0, r3
 8002020:	f7ff f8c0 	bl	80011a4 <HAL_InitTick>
 8002024:	2300      	movs	r3, #0
 8002026:	4618      	mov	r0, r3
 8002028:	3710      	adds	r7, #16
 800202a:	46bd      	mov	sp, r7
 800202c:	bd80      	pop	{r7, pc}
 800202e:	bf00      	nop
 8002030:	40022000 	.word	0x40022000
 8002034:	40021000 	.word	0x40021000
 8002038:	080055f4 	.word	0x080055f4
 800203c:	20000000 	.word	0x20000000
 8002040:	20000004 	.word	0x20000004

08002044 <HAL_RCC_GetSysClockFreq>:
 8002044:	b490      	push	{r4, r7}
 8002046:	b08a      	sub	sp, #40	; 0x28
 8002048:	af00      	add	r7, sp, #0
 800204a:	4b29      	ldr	r3, [pc, #164]	; (80020f0 <HAL_RCC_GetSysClockFreq+0xac>)
 800204c:	1d3c      	adds	r4, r7, #4
 800204e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002050:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002054:	f240 2301 	movw	r3, #513	; 0x201
 8002058:	803b      	strh	r3, [r7, #0]
 800205a:	2300      	movs	r3, #0
 800205c:	61fb      	str	r3, [r7, #28]
 800205e:	2300      	movs	r3, #0
 8002060:	61bb      	str	r3, [r7, #24]
 8002062:	2300      	movs	r3, #0
 8002064:	627b      	str	r3, [r7, #36]	; 0x24
 8002066:	2300      	movs	r3, #0
 8002068:	617b      	str	r3, [r7, #20]
 800206a:	2300      	movs	r3, #0
 800206c:	623b      	str	r3, [r7, #32]
 800206e:	4b21      	ldr	r3, [pc, #132]	; (80020f4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002070:	685b      	ldr	r3, [r3, #4]
 8002072:	61fb      	str	r3, [r7, #28]
 8002074:	69fb      	ldr	r3, [r7, #28]
 8002076:	f003 030c 	and.w	r3, r3, #12
 800207a:	2b04      	cmp	r3, #4
 800207c:	d002      	beq.n	8002084 <HAL_RCC_GetSysClockFreq+0x40>
 800207e:	2b08      	cmp	r3, #8
 8002080:	d003      	beq.n	800208a <HAL_RCC_GetSysClockFreq+0x46>
 8002082:	e02b      	b.n	80020dc <HAL_RCC_GetSysClockFreq+0x98>
 8002084:	4b1c      	ldr	r3, [pc, #112]	; (80020f8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002086:	623b      	str	r3, [r7, #32]
 8002088:	e02b      	b.n	80020e2 <HAL_RCC_GetSysClockFreq+0x9e>
 800208a:	69fb      	ldr	r3, [r7, #28]
 800208c:	0c9b      	lsrs	r3, r3, #18
 800208e:	f003 030f 	and.w	r3, r3, #15
 8002092:	3328      	adds	r3, #40	; 0x28
 8002094:	443b      	add	r3, r7
 8002096:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800209a:	617b      	str	r3, [r7, #20]
 800209c:	69fb      	ldr	r3, [r7, #28]
 800209e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d012      	beq.n	80020cc <HAL_RCC_GetSysClockFreq+0x88>
 80020a6:	4b13      	ldr	r3, [pc, #76]	; (80020f4 <HAL_RCC_GetSysClockFreq+0xb0>)
 80020a8:	685b      	ldr	r3, [r3, #4]
 80020aa:	0c5b      	lsrs	r3, r3, #17
 80020ac:	f003 0301 	and.w	r3, r3, #1
 80020b0:	3328      	adds	r3, #40	; 0x28
 80020b2:	443b      	add	r3, r7
 80020b4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80020b8:	61bb      	str	r3, [r7, #24]
 80020ba:	697b      	ldr	r3, [r7, #20]
 80020bc:	4a0e      	ldr	r2, [pc, #56]	; (80020f8 <HAL_RCC_GetSysClockFreq+0xb4>)
 80020be:	fb03 f202 	mul.w	r2, r3, r2
 80020c2:	69bb      	ldr	r3, [r7, #24]
 80020c4:	fbb2 f3f3 	udiv	r3, r2, r3
 80020c8:	627b      	str	r3, [r7, #36]	; 0x24
 80020ca:	e004      	b.n	80020d6 <HAL_RCC_GetSysClockFreq+0x92>
 80020cc:	697b      	ldr	r3, [r7, #20]
 80020ce:	4a0b      	ldr	r2, [pc, #44]	; (80020fc <HAL_RCC_GetSysClockFreq+0xb8>)
 80020d0:	fb02 f303 	mul.w	r3, r2, r3
 80020d4:	627b      	str	r3, [r7, #36]	; 0x24
 80020d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020d8:	623b      	str	r3, [r7, #32]
 80020da:	e002      	b.n	80020e2 <HAL_RCC_GetSysClockFreq+0x9e>
 80020dc:	4b06      	ldr	r3, [pc, #24]	; (80020f8 <HAL_RCC_GetSysClockFreq+0xb4>)
 80020de:	623b      	str	r3, [r7, #32]
 80020e0:	bf00      	nop
 80020e2:	6a3b      	ldr	r3, [r7, #32]
 80020e4:	4618      	mov	r0, r3
 80020e6:	3728      	adds	r7, #40	; 0x28
 80020e8:	46bd      	mov	sp, r7
 80020ea:	bc90      	pop	{r4, r7}
 80020ec:	4770      	bx	lr
 80020ee:	bf00      	nop
 80020f0:	080055d8 	.word	0x080055d8
 80020f4:	40021000 	.word	0x40021000
 80020f8:	007a1200 	.word	0x007a1200
 80020fc:	003d0900 	.word	0x003d0900

08002100 <HAL_RCC_GetHCLKFreq>:
 8002100:	b480      	push	{r7}
 8002102:	af00      	add	r7, sp, #0
 8002104:	4b02      	ldr	r3, [pc, #8]	; (8002110 <HAL_RCC_GetHCLKFreq+0x10>)
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	4618      	mov	r0, r3
 800210a:	46bd      	mov	sp, r7
 800210c:	bc80      	pop	{r7}
 800210e:	4770      	bx	lr
 8002110:	20000000 	.word	0x20000000

08002114 <HAL_RCC_GetPCLK1Freq>:
 8002114:	b580      	push	{r7, lr}
 8002116:	af00      	add	r7, sp, #0
 8002118:	f7ff fff2 	bl	8002100 <HAL_RCC_GetHCLKFreq>
 800211c:	4602      	mov	r2, r0
 800211e:	4b05      	ldr	r3, [pc, #20]	; (8002134 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002120:	685b      	ldr	r3, [r3, #4]
 8002122:	0a1b      	lsrs	r3, r3, #8
 8002124:	f003 0307 	and.w	r3, r3, #7
 8002128:	4903      	ldr	r1, [pc, #12]	; (8002138 <HAL_RCC_GetPCLK1Freq+0x24>)
 800212a:	5ccb      	ldrb	r3, [r1, r3]
 800212c:	fa22 f303 	lsr.w	r3, r2, r3
 8002130:	4618      	mov	r0, r3
 8002132:	bd80      	pop	{r7, pc}
 8002134:	40021000 	.word	0x40021000
 8002138:	08005604 	.word	0x08005604

0800213c <HAL_RCC_GetPCLK2Freq>:
 800213c:	b580      	push	{r7, lr}
 800213e:	af00      	add	r7, sp, #0
 8002140:	f7ff ffde 	bl	8002100 <HAL_RCC_GetHCLKFreq>
 8002144:	4602      	mov	r2, r0
 8002146:	4b05      	ldr	r3, [pc, #20]	; (800215c <HAL_RCC_GetPCLK2Freq+0x20>)
 8002148:	685b      	ldr	r3, [r3, #4]
 800214a:	0adb      	lsrs	r3, r3, #11
 800214c:	f003 0307 	and.w	r3, r3, #7
 8002150:	4903      	ldr	r1, [pc, #12]	; (8002160 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002152:	5ccb      	ldrb	r3, [r1, r3]
 8002154:	fa22 f303 	lsr.w	r3, r2, r3
 8002158:	4618      	mov	r0, r3
 800215a:	bd80      	pop	{r7, pc}
 800215c:	40021000 	.word	0x40021000
 8002160:	08005604 	.word	0x08005604

08002164 <RCC_Delay>:
 8002164:	b480      	push	{r7}
 8002166:	b085      	sub	sp, #20
 8002168:	af00      	add	r7, sp, #0
 800216a:	6078      	str	r0, [r7, #4]
 800216c:	4b0a      	ldr	r3, [pc, #40]	; (8002198 <RCC_Delay+0x34>)
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	4a0a      	ldr	r2, [pc, #40]	; (800219c <RCC_Delay+0x38>)
 8002172:	fba2 2303 	umull	r2, r3, r2, r3
 8002176:	0a5b      	lsrs	r3, r3, #9
 8002178:	687a      	ldr	r2, [r7, #4]
 800217a:	fb02 f303 	mul.w	r3, r2, r3
 800217e:	60fb      	str	r3, [r7, #12]
 8002180:	bf00      	nop
 8002182:	68fb      	ldr	r3, [r7, #12]
 8002184:	1e5a      	subs	r2, r3, #1
 8002186:	60fa      	str	r2, [r7, #12]
 8002188:	2b00      	cmp	r3, #0
 800218a:	d1f9      	bne.n	8002180 <RCC_Delay+0x1c>
 800218c:	bf00      	nop
 800218e:	bf00      	nop
 8002190:	3714      	adds	r7, #20
 8002192:	46bd      	mov	sp, r7
 8002194:	bc80      	pop	{r7}
 8002196:	4770      	bx	lr
 8002198:	20000000 	.word	0x20000000
 800219c:	10624dd3 	.word	0x10624dd3

080021a0 <HAL_UART_Init>:
 80021a0:	b580      	push	{r7, lr}
 80021a2:	b082      	sub	sp, #8
 80021a4:	af00      	add	r7, sp, #0
 80021a6:	6078      	str	r0, [r7, #4]
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d101      	bne.n	80021b2 <HAL_UART_Init+0x12>
 80021ae:	2301      	movs	r3, #1
 80021b0:	e03f      	b.n	8002232 <HAL_UART_Init+0x92>
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80021b8:	b2db      	uxtb	r3, r3
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d106      	bne.n	80021cc <HAL_UART_Init+0x2c>
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	2200      	movs	r2, #0
 80021c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021c6:	6878      	ldr	r0, [r7, #4]
 80021c8:	f7fe fe3a 	bl	8000e40 <HAL_UART_MspInit>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	2224      	movs	r2, #36	; 0x24
 80021d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	68da      	ldr	r2, [r3, #12]
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80021e2:	60da      	str	r2, [r3, #12]
 80021e4:	6878      	ldr	r0, [r7, #4]
 80021e6:	f000 fcc7 	bl	8002b78 <UART_SetConfig>
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	681b      	ldr	r3, [r3, #0]
 80021ee:	691a      	ldr	r2, [r3, #16]
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80021f8:	611a      	str	r2, [r3, #16]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	695a      	ldr	r2, [r3, #20]
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002208:	615a      	str	r2, [r3, #20]
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	68da      	ldr	r2, [r3, #12]
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002218:	60da      	str	r2, [r3, #12]
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	2200      	movs	r2, #0
 800221e:	641a      	str	r2, [r3, #64]	; 0x40
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	2220      	movs	r2, #32
 8002224:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	2220      	movs	r2, #32
 800222c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002230:	2300      	movs	r3, #0
 8002232:	4618      	mov	r0, r3
 8002234:	3708      	adds	r7, #8
 8002236:	46bd      	mov	sp, r7
 8002238:	bd80      	pop	{r7, pc}

0800223a <HAL_UART_Transmit>:
 800223a:	b580      	push	{r7, lr}
 800223c:	b08a      	sub	sp, #40	; 0x28
 800223e:	af02      	add	r7, sp, #8
 8002240:	60f8      	str	r0, [r7, #12]
 8002242:	60b9      	str	r1, [r7, #8]
 8002244:	603b      	str	r3, [r7, #0]
 8002246:	4613      	mov	r3, r2
 8002248:	80fb      	strh	r3, [r7, #6]
 800224a:	2300      	movs	r3, #0
 800224c:	617b      	str	r3, [r7, #20]
 800224e:	68fb      	ldr	r3, [r7, #12]
 8002250:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002254:	b2db      	uxtb	r3, r3
 8002256:	2b20      	cmp	r3, #32
 8002258:	d17c      	bne.n	8002354 <HAL_UART_Transmit+0x11a>
 800225a:	68bb      	ldr	r3, [r7, #8]
 800225c:	2b00      	cmp	r3, #0
 800225e:	d002      	beq.n	8002266 <HAL_UART_Transmit+0x2c>
 8002260:	88fb      	ldrh	r3, [r7, #6]
 8002262:	2b00      	cmp	r3, #0
 8002264:	d101      	bne.n	800226a <HAL_UART_Transmit+0x30>
 8002266:	2301      	movs	r3, #1
 8002268:	e075      	b.n	8002356 <HAL_UART_Transmit+0x11c>
 800226a:	68fb      	ldr	r3, [r7, #12]
 800226c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002270:	2b01      	cmp	r3, #1
 8002272:	d101      	bne.n	8002278 <HAL_UART_Transmit+0x3e>
 8002274:	2302      	movs	r3, #2
 8002276:	e06e      	b.n	8002356 <HAL_UART_Transmit+0x11c>
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	2201      	movs	r2, #1
 800227c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002280:	68fb      	ldr	r3, [r7, #12]
 8002282:	2200      	movs	r2, #0
 8002284:	641a      	str	r2, [r3, #64]	; 0x40
 8002286:	68fb      	ldr	r3, [r7, #12]
 8002288:	2221      	movs	r2, #33	; 0x21
 800228a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800228e:	f7fe ffcb 	bl	8001228 <HAL_GetTick>
 8002292:	6178      	str	r0, [r7, #20]
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	88fa      	ldrh	r2, [r7, #6]
 8002298:	849a      	strh	r2, [r3, #36]	; 0x24
 800229a:	68fb      	ldr	r3, [r7, #12]
 800229c:	88fa      	ldrh	r2, [r7, #6]
 800229e:	84da      	strh	r2, [r3, #38]	; 0x26
 80022a0:	68fb      	ldr	r3, [r7, #12]
 80022a2:	689b      	ldr	r3, [r3, #8]
 80022a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80022a8:	d108      	bne.n	80022bc <HAL_UART_Transmit+0x82>
 80022aa:	68fb      	ldr	r3, [r7, #12]
 80022ac:	691b      	ldr	r3, [r3, #16]
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d104      	bne.n	80022bc <HAL_UART_Transmit+0x82>
 80022b2:	2300      	movs	r3, #0
 80022b4:	61fb      	str	r3, [r7, #28]
 80022b6:	68bb      	ldr	r3, [r7, #8]
 80022b8:	61bb      	str	r3, [r7, #24]
 80022ba:	e003      	b.n	80022c4 <HAL_UART_Transmit+0x8a>
 80022bc:	68bb      	ldr	r3, [r7, #8]
 80022be:	61fb      	str	r3, [r7, #28]
 80022c0:	2300      	movs	r3, #0
 80022c2:	61bb      	str	r3, [r7, #24]
 80022c4:	68fb      	ldr	r3, [r7, #12]
 80022c6:	2200      	movs	r2, #0
 80022c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022cc:	e02a      	b.n	8002324 <HAL_UART_Transmit+0xea>
 80022ce:	683b      	ldr	r3, [r7, #0]
 80022d0:	9300      	str	r3, [sp, #0]
 80022d2:	697b      	ldr	r3, [r7, #20]
 80022d4:	2200      	movs	r2, #0
 80022d6:	2180      	movs	r1, #128	; 0x80
 80022d8:	68f8      	ldr	r0, [r7, #12]
 80022da:	f000 fab3 	bl	8002844 <UART_WaitOnFlagUntilTimeout>
 80022de:	4603      	mov	r3, r0
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	d001      	beq.n	80022e8 <HAL_UART_Transmit+0xae>
 80022e4:	2303      	movs	r3, #3
 80022e6:	e036      	b.n	8002356 <HAL_UART_Transmit+0x11c>
 80022e8:	69fb      	ldr	r3, [r7, #28]
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d10b      	bne.n	8002306 <HAL_UART_Transmit+0xcc>
 80022ee:	69bb      	ldr	r3, [r7, #24]
 80022f0:	881b      	ldrh	r3, [r3, #0]
 80022f2:	461a      	mov	r2, r3
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80022fc:	605a      	str	r2, [r3, #4]
 80022fe:	69bb      	ldr	r3, [r7, #24]
 8002300:	3302      	adds	r3, #2
 8002302:	61bb      	str	r3, [r7, #24]
 8002304:	e007      	b.n	8002316 <HAL_UART_Transmit+0xdc>
 8002306:	69fb      	ldr	r3, [r7, #28]
 8002308:	781a      	ldrb	r2, [r3, #0]
 800230a:	68fb      	ldr	r3, [r7, #12]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	605a      	str	r2, [r3, #4]
 8002310:	69fb      	ldr	r3, [r7, #28]
 8002312:	3301      	adds	r3, #1
 8002314:	61fb      	str	r3, [r7, #28]
 8002316:	68fb      	ldr	r3, [r7, #12]
 8002318:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800231a:	b29b      	uxth	r3, r3
 800231c:	3b01      	subs	r3, #1
 800231e:	b29a      	uxth	r2, r3
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	84da      	strh	r2, [r3, #38]	; 0x26
 8002324:	68fb      	ldr	r3, [r7, #12]
 8002326:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002328:	b29b      	uxth	r3, r3
 800232a:	2b00      	cmp	r3, #0
 800232c:	d1cf      	bne.n	80022ce <HAL_UART_Transmit+0x94>
 800232e:	683b      	ldr	r3, [r7, #0]
 8002330:	9300      	str	r3, [sp, #0]
 8002332:	697b      	ldr	r3, [r7, #20]
 8002334:	2200      	movs	r2, #0
 8002336:	2140      	movs	r1, #64	; 0x40
 8002338:	68f8      	ldr	r0, [r7, #12]
 800233a:	f000 fa83 	bl	8002844 <UART_WaitOnFlagUntilTimeout>
 800233e:	4603      	mov	r3, r0
 8002340:	2b00      	cmp	r3, #0
 8002342:	d001      	beq.n	8002348 <HAL_UART_Transmit+0x10e>
 8002344:	2303      	movs	r3, #3
 8002346:	e006      	b.n	8002356 <HAL_UART_Transmit+0x11c>
 8002348:	68fb      	ldr	r3, [r7, #12]
 800234a:	2220      	movs	r2, #32
 800234c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002350:	2300      	movs	r3, #0
 8002352:	e000      	b.n	8002356 <HAL_UART_Transmit+0x11c>
 8002354:	2302      	movs	r3, #2
 8002356:	4618      	mov	r0, r3
 8002358:	3720      	adds	r7, #32
 800235a:	46bd      	mov	sp, r7
 800235c:	bd80      	pop	{r7, pc}

0800235e <HAL_UART_Receive>:
 800235e:	b580      	push	{r7, lr}
 8002360:	b08a      	sub	sp, #40	; 0x28
 8002362:	af02      	add	r7, sp, #8
 8002364:	60f8      	str	r0, [r7, #12]
 8002366:	60b9      	str	r1, [r7, #8]
 8002368:	603b      	str	r3, [r7, #0]
 800236a:	4613      	mov	r3, r2
 800236c:	80fb      	strh	r3, [r7, #6]
 800236e:	2300      	movs	r3, #0
 8002370:	617b      	str	r3, [r7, #20]
 8002372:	68fb      	ldr	r3, [r7, #12]
 8002374:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002378:	b2db      	uxtb	r3, r3
 800237a:	2b20      	cmp	r3, #32
 800237c:	f040 808c 	bne.w	8002498 <HAL_UART_Receive+0x13a>
 8002380:	68bb      	ldr	r3, [r7, #8]
 8002382:	2b00      	cmp	r3, #0
 8002384:	d002      	beq.n	800238c <HAL_UART_Receive+0x2e>
 8002386:	88fb      	ldrh	r3, [r7, #6]
 8002388:	2b00      	cmp	r3, #0
 800238a:	d101      	bne.n	8002390 <HAL_UART_Receive+0x32>
 800238c:	2301      	movs	r3, #1
 800238e:	e084      	b.n	800249a <HAL_UART_Receive+0x13c>
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002396:	2b01      	cmp	r3, #1
 8002398:	d101      	bne.n	800239e <HAL_UART_Receive+0x40>
 800239a:	2302      	movs	r3, #2
 800239c:	e07d      	b.n	800249a <HAL_UART_Receive+0x13c>
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	2201      	movs	r2, #1
 80023a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023a6:	68fb      	ldr	r3, [r7, #12]
 80023a8:	2200      	movs	r2, #0
 80023aa:	641a      	str	r2, [r3, #64]	; 0x40
 80023ac:	68fb      	ldr	r3, [r7, #12]
 80023ae:	2222      	movs	r2, #34	; 0x22
 80023b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80023b4:	68fb      	ldr	r3, [r7, #12]
 80023b6:	2200      	movs	r2, #0
 80023b8:	631a      	str	r2, [r3, #48]	; 0x30
 80023ba:	f7fe ff35 	bl	8001228 <HAL_GetTick>
 80023be:	6178      	str	r0, [r7, #20]
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	88fa      	ldrh	r2, [r7, #6]
 80023c4:	859a      	strh	r2, [r3, #44]	; 0x2c
 80023c6:	68fb      	ldr	r3, [r7, #12]
 80023c8:	88fa      	ldrh	r2, [r7, #6]
 80023ca:	85da      	strh	r2, [r3, #46]	; 0x2e
 80023cc:	68fb      	ldr	r3, [r7, #12]
 80023ce:	689b      	ldr	r3, [r3, #8]
 80023d0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80023d4:	d108      	bne.n	80023e8 <HAL_UART_Receive+0x8a>
 80023d6:	68fb      	ldr	r3, [r7, #12]
 80023d8:	691b      	ldr	r3, [r3, #16]
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d104      	bne.n	80023e8 <HAL_UART_Receive+0x8a>
 80023de:	2300      	movs	r3, #0
 80023e0:	61fb      	str	r3, [r7, #28]
 80023e2:	68bb      	ldr	r3, [r7, #8]
 80023e4:	61bb      	str	r3, [r7, #24]
 80023e6:	e003      	b.n	80023f0 <HAL_UART_Receive+0x92>
 80023e8:	68bb      	ldr	r3, [r7, #8]
 80023ea:	61fb      	str	r3, [r7, #28]
 80023ec:	2300      	movs	r3, #0
 80023ee:	61bb      	str	r3, [r7, #24]
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	2200      	movs	r2, #0
 80023f4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023f8:	e043      	b.n	8002482 <HAL_UART_Receive+0x124>
 80023fa:	683b      	ldr	r3, [r7, #0]
 80023fc:	9300      	str	r3, [sp, #0]
 80023fe:	697b      	ldr	r3, [r7, #20]
 8002400:	2200      	movs	r2, #0
 8002402:	2120      	movs	r1, #32
 8002404:	68f8      	ldr	r0, [r7, #12]
 8002406:	f000 fa1d 	bl	8002844 <UART_WaitOnFlagUntilTimeout>
 800240a:	4603      	mov	r3, r0
 800240c:	2b00      	cmp	r3, #0
 800240e:	d001      	beq.n	8002414 <HAL_UART_Receive+0xb6>
 8002410:	2303      	movs	r3, #3
 8002412:	e042      	b.n	800249a <HAL_UART_Receive+0x13c>
 8002414:	69fb      	ldr	r3, [r7, #28]
 8002416:	2b00      	cmp	r3, #0
 8002418:	d10c      	bne.n	8002434 <HAL_UART_Receive+0xd6>
 800241a:	68fb      	ldr	r3, [r7, #12]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	685b      	ldr	r3, [r3, #4]
 8002420:	b29b      	uxth	r3, r3
 8002422:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002426:	b29a      	uxth	r2, r3
 8002428:	69bb      	ldr	r3, [r7, #24]
 800242a:	801a      	strh	r2, [r3, #0]
 800242c:	69bb      	ldr	r3, [r7, #24]
 800242e:	3302      	adds	r3, #2
 8002430:	61bb      	str	r3, [r7, #24]
 8002432:	e01f      	b.n	8002474 <HAL_UART_Receive+0x116>
 8002434:	68fb      	ldr	r3, [r7, #12]
 8002436:	689b      	ldr	r3, [r3, #8]
 8002438:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800243c:	d007      	beq.n	800244e <HAL_UART_Receive+0xf0>
 800243e:	68fb      	ldr	r3, [r7, #12]
 8002440:	689b      	ldr	r3, [r3, #8]
 8002442:	2b00      	cmp	r3, #0
 8002444:	d10a      	bne.n	800245c <HAL_UART_Receive+0xfe>
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	691b      	ldr	r3, [r3, #16]
 800244a:	2b00      	cmp	r3, #0
 800244c:	d106      	bne.n	800245c <HAL_UART_Receive+0xfe>
 800244e:	68fb      	ldr	r3, [r7, #12]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	685b      	ldr	r3, [r3, #4]
 8002454:	b2da      	uxtb	r2, r3
 8002456:	69fb      	ldr	r3, [r7, #28]
 8002458:	701a      	strb	r2, [r3, #0]
 800245a:	e008      	b.n	800246e <HAL_UART_Receive+0x110>
 800245c:	68fb      	ldr	r3, [r7, #12]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	685b      	ldr	r3, [r3, #4]
 8002462:	b2db      	uxtb	r3, r3
 8002464:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002468:	b2da      	uxtb	r2, r3
 800246a:	69fb      	ldr	r3, [r7, #28]
 800246c:	701a      	strb	r2, [r3, #0]
 800246e:	69fb      	ldr	r3, [r7, #28]
 8002470:	3301      	adds	r3, #1
 8002472:	61fb      	str	r3, [r7, #28]
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002478:	b29b      	uxth	r3, r3
 800247a:	3b01      	subs	r3, #1
 800247c:	b29a      	uxth	r2, r3
 800247e:	68fb      	ldr	r3, [r7, #12]
 8002480:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002482:	68fb      	ldr	r3, [r7, #12]
 8002484:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002486:	b29b      	uxth	r3, r3
 8002488:	2b00      	cmp	r3, #0
 800248a:	d1b6      	bne.n	80023fa <HAL_UART_Receive+0x9c>
 800248c:	68fb      	ldr	r3, [r7, #12]
 800248e:	2220      	movs	r2, #32
 8002490:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002494:	2300      	movs	r3, #0
 8002496:	e000      	b.n	800249a <HAL_UART_Receive+0x13c>
 8002498:	2302      	movs	r3, #2
 800249a:	4618      	mov	r0, r3
 800249c:	3720      	adds	r7, #32
 800249e:	46bd      	mov	sp, r7
 80024a0:	bd80      	pop	{r7, pc}
	...

080024a4 <HAL_UART_IRQHandler>:
 80024a4:	b580      	push	{r7, lr}
 80024a6:	b08a      	sub	sp, #40	; 0x28
 80024a8:	af00      	add	r7, sp, #0
 80024aa:	6078      	str	r0, [r7, #4]
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	627b      	str	r3, [r7, #36]	; 0x24
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	68db      	ldr	r3, [r3, #12]
 80024ba:	623b      	str	r3, [r7, #32]
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	695b      	ldr	r3, [r3, #20]
 80024c2:	61fb      	str	r3, [r7, #28]
 80024c4:	2300      	movs	r3, #0
 80024c6:	61bb      	str	r3, [r7, #24]
 80024c8:	2300      	movs	r3, #0
 80024ca:	617b      	str	r3, [r7, #20]
 80024cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024ce:	f003 030f 	and.w	r3, r3, #15
 80024d2:	61bb      	str	r3, [r7, #24]
 80024d4:	69bb      	ldr	r3, [r7, #24]
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d10d      	bne.n	80024f6 <HAL_UART_IRQHandler+0x52>
 80024da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024dc:	f003 0320 	and.w	r3, r3, #32
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d008      	beq.n	80024f6 <HAL_UART_IRQHandler+0x52>
 80024e4:	6a3b      	ldr	r3, [r7, #32]
 80024e6:	f003 0320 	and.w	r3, r3, #32
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d003      	beq.n	80024f6 <HAL_UART_IRQHandler+0x52>
 80024ee:	6878      	ldr	r0, [r7, #4]
 80024f0:	f000 fa99 	bl	8002a26 <UART_Receive_IT>
 80024f4:	e17b      	b.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80024f6:	69bb      	ldr	r3, [r7, #24]
 80024f8:	2b00      	cmp	r3, #0
 80024fa:	f000 80b1 	beq.w	8002660 <HAL_UART_IRQHandler+0x1bc>
 80024fe:	69fb      	ldr	r3, [r7, #28]
 8002500:	f003 0301 	and.w	r3, r3, #1
 8002504:	2b00      	cmp	r3, #0
 8002506:	d105      	bne.n	8002514 <HAL_UART_IRQHandler+0x70>
 8002508:	6a3b      	ldr	r3, [r7, #32]
 800250a:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800250e:	2b00      	cmp	r3, #0
 8002510:	f000 80a6 	beq.w	8002660 <HAL_UART_IRQHandler+0x1bc>
 8002514:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002516:	f003 0301 	and.w	r3, r3, #1
 800251a:	2b00      	cmp	r3, #0
 800251c:	d00a      	beq.n	8002534 <HAL_UART_IRQHandler+0x90>
 800251e:	6a3b      	ldr	r3, [r7, #32]
 8002520:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002524:	2b00      	cmp	r3, #0
 8002526:	d005      	beq.n	8002534 <HAL_UART_IRQHandler+0x90>
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800252c:	f043 0201 	orr.w	r2, r3, #1
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	641a      	str	r2, [r3, #64]	; 0x40
 8002534:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002536:	f003 0304 	and.w	r3, r3, #4
 800253a:	2b00      	cmp	r3, #0
 800253c:	d00a      	beq.n	8002554 <HAL_UART_IRQHandler+0xb0>
 800253e:	69fb      	ldr	r3, [r7, #28]
 8002540:	f003 0301 	and.w	r3, r3, #1
 8002544:	2b00      	cmp	r3, #0
 8002546:	d005      	beq.n	8002554 <HAL_UART_IRQHandler+0xb0>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800254c:	f043 0202 	orr.w	r2, r3, #2
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	641a      	str	r2, [r3, #64]	; 0x40
 8002554:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002556:	f003 0302 	and.w	r3, r3, #2
 800255a:	2b00      	cmp	r3, #0
 800255c:	d00a      	beq.n	8002574 <HAL_UART_IRQHandler+0xd0>
 800255e:	69fb      	ldr	r3, [r7, #28]
 8002560:	f003 0301 	and.w	r3, r3, #1
 8002564:	2b00      	cmp	r3, #0
 8002566:	d005      	beq.n	8002574 <HAL_UART_IRQHandler+0xd0>
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800256c:	f043 0204 	orr.w	r2, r3, #4
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	641a      	str	r2, [r3, #64]	; 0x40
 8002574:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002576:	f003 0308 	and.w	r3, r3, #8
 800257a:	2b00      	cmp	r3, #0
 800257c:	d00f      	beq.n	800259e <HAL_UART_IRQHandler+0xfa>
 800257e:	6a3b      	ldr	r3, [r7, #32]
 8002580:	f003 0320 	and.w	r3, r3, #32
 8002584:	2b00      	cmp	r3, #0
 8002586:	d104      	bne.n	8002592 <HAL_UART_IRQHandler+0xee>
 8002588:	69fb      	ldr	r3, [r7, #28]
 800258a:	f003 0301 	and.w	r3, r3, #1
 800258e:	2b00      	cmp	r3, #0
 8002590:	d005      	beq.n	800259e <HAL_UART_IRQHandler+0xfa>
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002596:	f043 0208 	orr.w	r2, r3, #8
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	641a      	str	r2, [r3, #64]	; 0x40
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	f000 811e 	beq.w	80027e4 <HAL_UART_IRQHandler+0x340>
 80025a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025aa:	f003 0320 	and.w	r3, r3, #32
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d007      	beq.n	80025c2 <HAL_UART_IRQHandler+0x11e>
 80025b2:	6a3b      	ldr	r3, [r7, #32]
 80025b4:	f003 0320 	and.w	r3, r3, #32
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d002      	beq.n	80025c2 <HAL_UART_IRQHandler+0x11e>
 80025bc:	6878      	ldr	r0, [r7, #4]
 80025be:	f000 fa32 	bl	8002a26 <UART_Receive_IT>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	695b      	ldr	r3, [r3, #20]
 80025c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	bf14      	ite	ne
 80025d0:	2301      	movne	r3, #1
 80025d2:	2300      	moveq	r3, #0
 80025d4:	b2db      	uxtb	r3, r3
 80025d6:	617b      	str	r3, [r7, #20]
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025dc:	f003 0308 	and.w	r3, r3, #8
 80025e0:	2b00      	cmp	r3, #0
 80025e2:	d102      	bne.n	80025ea <HAL_UART_IRQHandler+0x146>
 80025e4:	697b      	ldr	r3, [r7, #20]
 80025e6:	2b00      	cmp	r3, #0
 80025e8:	d031      	beq.n	800264e <HAL_UART_IRQHandler+0x1aa>
 80025ea:	6878      	ldr	r0, [r7, #4]
 80025ec:	f000 f974 	bl	80028d8 <UART_EndRxTransfer>
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	695b      	ldr	r3, [r3, #20]
 80025f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d023      	beq.n	8002646 <HAL_UART_IRQHandler+0x1a2>
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	695a      	ldr	r2, [r3, #20]
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800260c:	615a      	str	r2, [r3, #20]
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002612:	2b00      	cmp	r3, #0
 8002614:	d013      	beq.n	800263e <HAL_UART_IRQHandler+0x19a>
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800261a:	4a76      	ldr	r2, [pc, #472]	; (80027f4 <HAL_UART_IRQHandler+0x350>)
 800261c:	635a      	str	r2, [r3, #52]	; 0x34
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002622:	4618      	mov	r0, r3
 8002624:	f7fe ff76 	bl	8001514 <HAL_DMA_Abort_IT>
 8002628:	4603      	mov	r3, r0
 800262a:	2b00      	cmp	r3, #0
 800262c:	d016      	beq.n	800265c <HAL_UART_IRQHandler+0x1b8>
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002632:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002634:	687a      	ldr	r2, [r7, #4]
 8002636:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8002638:	4610      	mov	r0, r2
 800263a:	4798      	blx	r3
 800263c:	e00e      	b.n	800265c <HAL_UART_IRQHandler+0x1b8>
 800263e:	6878      	ldr	r0, [r7, #4]
 8002640:	f000 f8ec 	bl	800281c <HAL_UART_ErrorCallback>
 8002644:	e00a      	b.n	800265c <HAL_UART_IRQHandler+0x1b8>
 8002646:	6878      	ldr	r0, [r7, #4]
 8002648:	f000 f8e8 	bl	800281c <HAL_UART_ErrorCallback>
 800264c:	e006      	b.n	800265c <HAL_UART_IRQHandler+0x1b8>
 800264e:	6878      	ldr	r0, [r7, #4]
 8002650:	f000 f8e4 	bl	800281c <HAL_UART_ErrorCallback>
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	2200      	movs	r2, #0
 8002658:	641a      	str	r2, [r3, #64]	; 0x40
 800265a:	e0c3      	b.n	80027e4 <HAL_UART_IRQHandler+0x340>
 800265c:	bf00      	nop
 800265e:	e0c1      	b.n	80027e4 <HAL_UART_IRQHandler+0x340>
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002664:	2b01      	cmp	r3, #1
 8002666:	f040 80a1 	bne.w	80027ac <HAL_UART_IRQHandler+0x308>
 800266a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800266c:	f003 0310 	and.w	r3, r3, #16
 8002670:	2b00      	cmp	r3, #0
 8002672:	f000 809b 	beq.w	80027ac <HAL_UART_IRQHandler+0x308>
 8002676:	6a3b      	ldr	r3, [r7, #32]
 8002678:	f003 0310 	and.w	r3, r3, #16
 800267c:	2b00      	cmp	r3, #0
 800267e:	f000 8095 	beq.w	80027ac <HAL_UART_IRQHandler+0x308>
 8002682:	2300      	movs	r3, #0
 8002684:	60fb      	str	r3, [r7, #12]
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	60fb      	str	r3, [r7, #12]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	685b      	ldr	r3, [r3, #4]
 8002694:	60fb      	str	r3, [r7, #12]
 8002696:	68fb      	ldr	r3, [r7, #12]
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	695b      	ldr	r3, [r3, #20]
 800269e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80026a2:	2b00      	cmp	r3, #0
 80026a4:	d04e      	beq.n	8002744 <HAL_UART_IRQHandler+0x2a0>
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	685b      	ldr	r3, [r3, #4]
 80026ae:	823b      	strh	r3, [r7, #16]
 80026b0:	8a3b      	ldrh	r3, [r7, #16]
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	f000 8098 	beq.w	80027e8 <HAL_UART_IRQHandler+0x344>
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80026bc:	8a3a      	ldrh	r2, [r7, #16]
 80026be:	429a      	cmp	r2, r3
 80026c0:	f080 8092 	bcs.w	80027e8 <HAL_UART_IRQHandler+0x344>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	8a3a      	ldrh	r2, [r7, #16]
 80026c8:	85da      	strh	r2, [r3, #46]	; 0x2e
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80026ce:	699b      	ldr	r3, [r3, #24]
 80026d0:	2b20      	cmp	r3, #32
 80026d2:	d02b      	beq.n	800272c <HAL_UART_IRQHandler+0x288>
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	68da      	ldr	r2, [r3, #12]
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	681b      	ldr	r3, [r3, #0]
 80026de:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80026e2:	60da      	str	r2, [r3, #12]
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	695a      	ldr	r2, [r3, #20]
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	f022 0201 	bic.w	r2, r2, #1
 80026f2:	615a      	str	r2, [r3, #20]
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	695a      	ldr	r2, [r3, #20]
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002702:	615a      	str	r2, [r3, #20]
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	2220      	movs	r2, #32
 8002708:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	2200      	movs	r2, #0
 8002710:	631a      	str	r2, [r3, #48]	; 0x30
 8002712:	687b      	ldr	r3, [r7, #4]
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	68da      	ldr	r2, [r3, #12]
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	f022 0210 	bic.w	r2, r2, #16
 8002720:	60da      	str	r2, [r3, #12]
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002726:	4618      	mov	r0, r3
 8002728:	f7fe feb9 	bl	800149e <HAL_DMA_Abort>
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002734:	b29b      	uxth	r3, r3
 8002736:	1ad3      	subs	r3, r2, r3
 8002738:	b29b      	uxth	r3, r3
 800273a:	4619      	mov	r1, r3
 800273c:	6878      	ldr	r0, [r7, #4]
 800273e:	f000 f876 	bl	800282e <HAL_UARTEx_RxEventCallback>
 8002742:	e051      	b.n	80027e8 <HAL_UART_IRQHandler+0x344>
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800274c:	b29b      	uxth	r3, r3
 800274e:	1ad3      	subs	r3, r2, r3
 8002750:	827b      	strh	r3, [r7, #18]
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002756:	b29b      	uxth	r3, r3
 8002758:	2b00      	cmp	r3, #0
 800275a:	d047      	beq.n	80027ec <HAL_UART_IRQHandler+0x348>
 800275c:	8a7b      	ldrh	r3, [r7, #18]
 800275e:	2b00      	cmp	r3, #0
 8002760:	d044      	beq.n	80027ec <HAL_UART_IRQHandler+0x348>
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	681b      	ldr	r3, [r3, #0]
 8002766:	68da      	ldr	r2, [r3, #12]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8002770:	60da      	str	r2, [r3, #12]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	695a      	ldr	r2, [r3, #20]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	f022 0201 	bic.w	r2, r2, #1
 8002780:	615a      	str	r2, [r3, #20]
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	2220      	movs	r2, #32
 8002786:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	2200      	movs	r2, #0
 800278e:	631a      	str	r2, [r3, #48]	; 0x30
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	68da      	ldr	r2, [r3, #12]
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	f022 0210 	bic.w	r2, r2, #16
 800279e:	60da      	str	r2, [r3, #12]
 80027a0:	8a7b      	ldrh	r3, [r7, #18]
 80027a2:	4619      	mov	r1, r3
 80027a4:	6878      	ldr	r0, [r7, #4]
 80027a6:	f000 f842 	bl	800282e <HAL_UARTEx_RxEventCallback>
 80027aa:	e01f      	b.n	80027ec <HAL_UART_IRQHandler+0x348>
 80027ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027ae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d008      	beq.n	80027c8 <HAL_UART_IRQHandler+0x324>
 80027b6:	6a3b      	ldr	r3, [r7, #32]
 80027b8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d003      	beq.n	80027c8 <HAL_UART_IRQHandler+0x324>
 80027c0:	6878      	ldr	r0, [r7, #4]
 80027c2:	f000 f8c9 	bl	8002958 <UART_Transmit_IT>
 80027c6:	e012      	b.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80027c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027ca:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	d00d      	beq.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80027d2:	6a3b      	ldr	r3, [r7, #32]
 80027d4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80027d8:	2b00      	cmp	r3, #0
 80027da:	d008      	beq.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80027dc:	6878      	ldr	r0, [r7, #4]
 80027de:	f000 f90a 	bl	80029f6 <UART_EndTransmit_IT>
 80027e2:	e004      	b.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80027e4:	bf00      	nop
 80027e6:	e002      	b.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80027e8:	bf00      	nop
 80027ea:	e000      	b.n	80027ee <HAL_UART_IRQHandler+0x34a>
 80027ec:	bf00      	nop
 80027ee:	3728      	adds	r7, #40	; 0x28
 80027f0:	46bd      	mov	sp, r7
 80027f2:	bd80      	pop	{r7, pc}
 80027f4:	08002931 	.word	0x08002931

080027f8 <HAL_UART_TxCpltCallback>:
 80027f8:	b480      	push	{r7}
 80027fa:	b083      	sub	sp, #12
 80027fc:	af00      	add	r7, sp, #0
 80027fe:	6078      	str	r0, [r7, #4]
 8002800:	bf00      	nop
 8002802:	370c      	adds	r7, #12
 8002804:	46bd      	mov	sp, r7
 8002806:	bc80      	pop	{r7}
 8002808:	4770      	bx	lr

0800280a <HAL_UART_RxCpltCallback>:
 800280a:	b480      	push	{r7}
 800280c:	b083      	sub	sp, #12
 800280e:	af00      	add	r7, sp, #0
 8002810:	6078      	str	r0, [r7, #4]
 8002812:	bf00      	nop
 8002814:	370c      	adds	r7, #12
 8002816:	46bd      	mov	sp, r7
 8002818:	bc80      	pop	{r7}
 800281a:	4770      	bx	lr

0800281c <HAL_UART_ErrorCallback>:
 800281c:	b480      	push	{r7}
 800281e:	b083      	sub	sp, #12
 8002820:	af00      	add	r7, sp, #0
 8002822:	6078      	str	r0, [r7, #4]
 8002824:	bf00      	nop
 8002826:	370c      	adds	r7, #12
 8002828:	46bd      	mov	sp, r7
 800282a:	bc80      	pop	{r7}
 800282c:	4770      	bx	lr

0800282e <HAL_UARTEx_RxEventCallback>:
 800282e:	b480      	push	{r7}
 8002830:	b083      	sub	sp, #12
 8002832:	af00      	add	r7, sp, #0
 8002834:	6078      	str	r0, [r7, #4]
 8002836:	460b      	mov	r3, r1
 8002838:	807b      	strh	r3, [r7, #2]
 800283a:	bf00      	nop
 800283c:	370c      	adds	r7, #12
 800283e:	46bd      	mov	sp, r7
 8002840:	bc80      	pop	{r7}
 8002842:	4770      	bx	lr

08002844 <UART_WaitOnFlagUntilTimeout>:
 8002844:	b580      	push	{r7, lr}
 8002846:	b084      	sub	sp, #16
 8002848:	af00      	add	r7, sp, #0
 800284a:	60f8      	str	r0, [r7, #12]
 800284c:	60b9      	str	r1, [r7, #8]
 800284e:	603b      	str	r3, [r7, #0]
 8002850:	4613      	mov	r3, r2
 8002852:	71fb      	strb	r3, [r7, #7]
 8002854:	e02c      	b.n	80028b0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002856:	69bb      	ldr	r3, [r7, #24]
 8002858:	f1b3 3fff 	cmp.w	r3, #4294967295
 800285c:	d028      	beq.n	80028b0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800285e:	69bb      	ldr	r3, [r7, #24]
 8002860:	2b00      	cmp	r3, #0
 8002862:	d007      	beq.n	8002874 <UART_WaitOnFlagUntilTimeout+0x30>
 8002864:	f7fe fce0 	bl	8001228 <HAL_GetTick>
 8002868:	4602      	mov	r2, r0
 800286a:	683b      	ldr	r3, [r7, #0]
 800286c:	1ad3      	subs	r3, r2, r3
 800286e:	69ba      	ldr	r2, [r7, #24]
 8002870:	429a      	cmp	r2, r3
 8002872:	d21d      	bcs.n	80028b0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002874:	68fb      	ldr	r3, [r7, #12]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	68da      	ldr	r2, [r3, #12]
 800287a:	68fb      	ldr	r3, [r7, #12]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002882:	60da      	str	r2, [r3, #12]
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	695a      	ldr	r2, [r3, #20]
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	f022 0201 	bic.w	r2, r2, #1
 8002892:	615a      	str	r2, [r3, #20]
 8002894:	68fb      	ldr	r3, [r7, #12]
 8002896:	2220      	movs	r2, #32
 8002898:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	2220      	movs	r2, #32
 80028a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80028a4:	68fb      	ldr	r3, [r7, #12]
 80028a6:	2200      	movs	r2, #0
 80028a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028ac:	2303      	movs	r3, #3
 80028ae:	e00f      	b.n	80028d0 <UART_WaitOnFlagUntilTimeout+0x8c>
 80028b0:	68fb      	ldr	r3, [r7, #12]
 80028b2:	681b      	ldr	r3, [r3, #0]
 80028b4:	681a      	ldr	r2, [r3, #0]
 80028b6:	68bb      	ldr	r3, [r7, #8]
 80028b8:	4013      	ands	r3, r2
 80028ba:	68ba      	ldr	r2, [r7, #8]
 80028bc:	429a      	cmp	r2, r3
 80028be:	bf0c      	ite	eq
 80028c0:	2301      	moveq	r3, #1
 80028c2:	2300      	movne	r3, #0
 80028c4:	b2db      	uxtb	r3, r3
 80028c6:	461a      	mov	r2, r3
 80028c8:	79fb      	ldrb	r3, [r7, #7]
 80028ca:	429a      	cmp	r2, r3
 80028cc:	d0c3      	beq.n	8002856 <UART_WaitOnFlagUntilTimeout+0x12>
 80028ce:	2300      	movs	r3, #0
 80028d0:	4618      	mov	r0, r3
 80028d2:	3710      	adds	r7, #16
 80028d4:	46bd      	mov	sp, r7
 80028d6:	bd80      	pop	{r7, pc}

080028d8 <UART_EndRxTransfer>:
 80028d8:	b480      	push	{r7}
 80028da:	b083      	sub	sp, #12
 80028dc:	af00      	add	r7, sp, #0
 80028de:	6078      	str	r0, [r7, #4]
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	681b      	ldr	r3, [r3, #0]
 80028e4:	68da      	ldr	r2, [r3, #12]
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80028ee:	60da      	str	r2, [r3, #12]
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	695a      	ldr	r2, [r3, #20]
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	f022 0201 	bic.w	r2, r2, #1
 80028fe:	615a      	str	r2, [r3, #20]
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002904:	2b01      	cmp	r3, #1
 8002906:	d107      	bne.n	8002918 <UART_EndRxTransfer+0x40>
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	68da      	ldr	r2, [r3, #12]
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	f022 0210 	bic.w	r2, r2, #16
 8002916:	60da      	str	r2, [r3, #12]
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	2220      	movs	r2, #32
 800291c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	2200      	movs	r2, #0
 8002924:	631a      	str	r2, [r3, #48]	; 0x30
 8002926:	bf00      	nop
 8002928:	370c      	adds	r7, #12
 800292a:	46bd      	mov	sp, r7
 800292c:	bc80      	pop	{r7}
 800292e:	4770      	bx	lr

08002930 <UART_DMAAbortOnError>:
 8002930:	b580      	push	{r7, lr}
 8002932:	b084      	sub	sp, #16
 8002934:	af00      	add	r7, sp, #0
 8002936:	6078      	str	r0, [r7, #4]
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800293c:	60fb      	str	r3, [r7, #12]
 800293e:	68fb      	ldr	r3, [r7, #12]
 8002940:	2200      	movs	r2, #0
 8002942:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002944:	68fb      	ldr	r3, [r7, #12]
 8002946:	2200      	movs	r2, #0
 8002948:	84da      	strh	r2, [r3, #38]	; 0x26
 800294a:	68f8      	ldr	r0, [r7, #12]
 800294c:	f7ff ff66 	bl	800281c <HAL_UART_ErrorCallback>
 8002950:	bf00      	nop
 8002952:	3710      	adds	r7, #16
 8002954:	46bd      	mov	sp, r7
 8002956:	bd80      	pop	{r7, pc}

08002958 <UART_Transmit_IT>:
 8002958:	b480      	push	{r7}
 800295a:	b085      	sub	sp, #20
 800295c:	af00      	add	r7, sp, #0
 800295e:	6078      	str	r0, [r7, #4]
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002966:	b2db      	uxtb	r3, r3
 8002968:	2b21      	cmp	r3, #33	; 0x21
 800296a:	d13e      	bne.n	80029ea <UART_Transmit_IT+0x92>
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	689b      	ldr	r3, [r3, #8]
 8002970:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002974:	d114      	bne.n	80029a0 <UART_Transmit_IT+0x48>
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	691b      	ldr	r3, [r3, #16]
 800297a:	2b00      	cmp	r3, #0
 800297c:	d110      	bne.n	80029a0 <UART_Transmit_IT+0x48>
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	6a1b      	ldr	r3, [r3, #32]
 8002982:	60fb      	str	r3, [r7, #12]
 8002984:	68fb      	ldr	r3, [r7, #12]
 8002986:	881b      	ldrh	r3, [r3, #0]
 8002988:	461a      	mov	r2, r3
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002992:	605a      	str	r2, [r3, #4]
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	6a1b      	ldr	r3, [r3, #32]
 8002998:	1c9a      	adds	r2, r3, #2
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	621a      	str	r2, [r3, #32]
 800299e:	e008      	b.n	80029b2 <UART_Transmit_IT+0x5a>
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	6a1b      	ldr	r3, [r3, #32]
 80029a4:	1c59      	adds	r1, r3, #1
 80029a6:	687a      	ldr	r2, [r7, #4]
 80029a8:	6211      	str	r1, [r2, #32]
 80029aa:	781a      	ldrb	r2, [r3, #0]
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	605a      	str	r2, [r3, #4]
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80029b6:	b29b      	uxth	r3, r3
 80029b8:	3b01      	subs	r3, #1
 80029ba:	b29b      	uxth	r3, r3
 80029bc:	687a      	ldr	r2, [r7, #4]
 80029be:	4619      	mov	r1, r3
 80029c0:	84d1      	strh	r1, [r2, #38]	; 0x26
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d10f      	bne.n	80029e6 <UART_Transmit_IT+0x8e>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	68da      	ldr	r2, [r3, #12]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80029d4:	60da      	str	r2, [r3, #12]
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	68da      	ldr	r2, [r3, #12]
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80029e4:	60da      	str	r2, [r3, #12]
 80029e6:	2300      	movs	r3, #0
 80029e8:	e000      	b.n	80029ec <UART_Transmit_IT+0x94>
 80029ea:	2302      	movs	r3, #2
 80029ec:	4618      	mov	r0, r3
 80029ee:	3714      	adds	r7, #20
 80029f0:	46bd      	mov	sp, r7
 80029f2:	bc80      	pop	{r7}
 80029f4:	4770      	bx	lr

080029f6 <UART_EndTransmit_IT>:
 80029f6:	b580      	push	{r7, lr}
 80029f8:	b082      	sub	sp, #8
 80029fa:	af00      	add	r7, sp, #0
 80029fc:	6078      	str	r0, [r7, #4]
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	68da      	ldr	r2, [r3, #12]
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002a0c:	60da      	str	r2, [r3, #12]
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	2220      	movs	r2, #32
 8002a12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a16:	6878      	ldr	r0, [r7, #4]
 8002a18:	f7ff feee 	bl	80027f8 <HAL_UART_TxCpltCallback>
 8002a1c:	2300      	movs	r3, #0
 8002a1e:	4618      	mov	r0, r3
 8002a20:	3708      	adds	r7, #8
 8002a22:	46bd      	mov	sp, r7
 8002a24:	bd80      	pop	{r7, pc}

08002a26 <UART_Receive_IT>:
 8002a26:	b580      	push	{r7, lr}
 8002a28:	b086      	sub	sp, #24
 8002a2a:	af00      	add	r7, sp, #0
 8002a2c:	6078      	str	r0, [r7, #4]
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002a34:	b2db      	uxtb	r3, r3
 8002a36:	2b22      	cmp	r3, #34	; 0x22
 8002a38:	f040 8099 	bne.w	8002b6e <UART_Receive_IT+0x148>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	689b      	ldr	r3, [r3, #8]
 8002a40:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a44:	d117      	bne.n	8002a76 <UART_Receive_IT+0x50>
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	691b      	ldr	r3, [r3, #16]
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d113      	bne.n	8002a76 <UART_Receive_IT+0x50>
 8002a4e:	2300      	movs	r3, #0
 8002a50:	617b      	str	r3, [r7, #20]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a56:	613b      	str	r3, [r7, #16]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	685b      	ldr	r3, [r3, #4]
 8002a5e:	b29b      	uxth	r3, r3
 8002a60:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002a64:	b29a      	uxth	r2, r3
 8002a66:	693b      	ldr	r3, [r7, #16]
 8002a68:	801a      	strh	r2, [r3, #0]
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a6e:	1c9a      	adds	r2, r3, #2
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	629a      	str	r2, [r3, #40]	; 0x28
 8002a74:	e026      	b.n	8002ac4 <UART_Receive_IT+0x9e>
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a7a:	617b      	str	r3, [r7, #20]
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	613b      	str	r3, [r7, #16]
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	689b      	ldr	r3, [r3, #8]
 8002a84:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a88:	d007      	beq.n	8002a9a <UART_Receive_IT+0x74>
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	689b      	ldr	r3, [r3, #8]
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d10a      	bne.n	8002aa8 <UART_Receive_IT+0x82>
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	691b      	ldr	r3, [r3, #16]
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d106      	bne.n	8002aa8 <UART_Receive_IT+0x82>
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	685b      	ldr	r3, [r3, #4]
 8002aa0:	b2da      	uxtb	r2, r3
 8002aa2:	697b      	ldr	r3, [r7, #20]
 8002aa4:	701a      	strb	r2, [r3, #0]
 8002aa6:	e008      	b.n	8002aba <UART_Receive_IT+0x94>
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	685b      	ldr	r3, [r3, #4]
 8002aae:	b2db      	uxtb	r3, r3
 8002ab0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002ab4:	b2da      	uxtb	r2, r3
 8002ab6:	697b      	ldr	r3, [r7, #20]
 8002ab8:	701a      	strb	r2, [r3, #0]
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002abe:	1c5a      	adds	r2, r3, #1
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	629a      	str	r2, [r3, #40]	; 0x28
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002ac8:	b29b      	uxth	r3, r3
 8002aca:	3b01      	subs	r3, #1
 8002acc:	b29b      	uxth	r3, r3
 8002ace:	687a      	ldr	r2, [r7, #4]
 8002ad0:	4619      	mov	r1, r3
 8002ad2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d148      	bne.n	8002b6a <UART_Receive_IT+0x144>
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	68da      	ldr	r2, [r3, #12]
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	f022 0220 	bic.w	r2, r2, #32
 8002ae6:	60da      	str	r2, [r3, #12]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	68da      	ldr	r2, [r3, #12]
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002af6:	60da      	str	r2, [r3, #12]
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	695a      	ldr	r2, [r3, #20]
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	f022 0201 	bic.w	r2, r2, #1
 8002b06:	615a      	str	r2, [r3, #20]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	2220      	movs	r2, #32
 8002b0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b14:	2b01      	cmp	r3, #1
 8002b16:	d123      	bne.n	8002b60 <UART_Receive_IT+0x13a>
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	631a      	str	r2, [r3, #48]	; 0x30
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	68da      	ldr	r2, [r3, #12]
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	f022 0210 	bic.w	r2, r2, #16
 8002b2c:	60da      	str	r2, [r3, #12]
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	f003 0310 	and.w	r3, r3, #16
 8002b38:	2b10      	cmp	r3, #16
 8002b3a:	d10a      	bne.n	8002b52 <UART_Receive_IT+0x12c>
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	60fb      	str	r3, [r7, #12]
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	60fb      	str	r3, [r7, #12]
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	685b      	ldr	r3, [r3, #4]
 8002b4e:	60fb      	str	r3, [r7, #12]
 8002b50:	68fb      	ldr	r3, [r7, #12]
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8002b56:	4619      	mov	r1, r3
 8002b58:	6878      	ldr	r0, [r7, #4]
 8002b5a:	f7ff fe68 	bl	800282e <HAL_UARTEx_RxEventCallback>
 8002b5e:	e002      	b.n	8002b66 <UART_Receive_IT+0x140>
 8002b60:	6878      	ldr	r0, [r7, #4]
 8002b62:	f7ff fe52 	bl	800280a <HAL_UART_RxCpltCallback>
 8002b66:	2300      	movs	r3, #0
 8002b68:	e002      	b.n	8002b70 <UART_Receive_IT+0x14a>
 8002b6a:	2300      	movs	r3, #0
 8002b6c:	e000      	b.n	8002b70 <UART_Receive_IT+0x14a>
 8002b6e:	2302      	movs	r3, #2
 8002b70:	4618      	mov	r0, r3
 8002b72:	3718      	adds	r7, #24
 8002b74:	46bd      	mov	sp, r7
 8002b76:	bd80      	pop	{r7, pc}

08002b78 <UART_SetConfig>:
 8002b78:	b580      	push	{r7, lr}
 8002b7a:	b084      	sub	sp, #16
 8002b7c:	af00      	add	r7, sp, #0
 8002b7e:	6078      	str	r0, [r7, #4]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	691b      	ldr	r3, [r3, #16]
 8002b86:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	68da      	ldr	r2, [r3, #12]
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	430a      	orrs	r2, r1
 8002b94:	611a      	str	r2, [r3, #16]
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	689a      	ldr	r2, [r3, #8]
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	691b      	ldr	r3, [r3, #16]
 8002b9e:	431a      	orrs	r2, r3
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	695b      	ldr	r3, [r3, #20]
 8002ba4:	4313      	orrs	r3, r2
 8002ba6:	60bb      	str	r3, [r7, #8]
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	68db      	ldr	r3, [r3, #12]
 8002bae:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002bb2:	f023 030c 	bic.w	r3, r3, #12
 8002bb6:	687a      	ldr	r2, [r7, #4]
 8002bb8:	6812      	ldr	r2, [r2, #0]
 8002bba:	68b9      	ldr	r1, [r7, #8]
 8002bbc:	430b      	orrs	r3, r1
 8002bbe:	60d3      	str	r3, [r2, #12]
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	695b      	ldr	r3, [r3, #20]
 8002bc6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	699a      	ldr	r2, [r3, #24]
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	430a      	orrs	r2, r1
 8002bd4:	615a      	str	r2, [r3, #20]
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	4a2c      	ldr	r2, [pc, #176]	; (8002c8c <UART_SetConfig+0x114>)
 8002bdc:	4293      	cmp	r3, r2
 8002bde:	d103      	bne.n	8002be8 <UART_SetConfig+0x70>
 8002be0:	f7ff faac 	bl	800213c <HAL_RCC_GetPCLK2Freq>
 8002be4:	60f8      	str	r0, [r7, #12]
 8002be6:	e002      	b.n	8002bee <UART_SetConfig+0x76>
 8002be8:	f7ff fa94 	bl	8002114 <HAL_RCC_GetPCLK1Freq>
 8002bec:	60f8      	str	r0, [r7, #12]
 8002bee:	68fa      	ldr	r2, [r7, #12]
 8002bf0:	4613      	mov	r3, r2
 8002bf2:	009b      	lsls	r3, r3, #2
 8002bf4:	4413      	add	r3, r2
 8002bf6:	009a      	lsls	r2, r3, #2
 8002bf8:	441a      	add	r2, r3
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	685b      	ldr	r3, [r3, #4]
 8002bfe:	009b      	lsls	r3, r3, #2
 8002c00:	fbb2 f3f3 	udiv	r3, r2, r3
 8002c04:	4a22      	ldr	r2, [pc, #136]	; (8002c90 <UART_SetConfig+0x118>)
 8002c06:	fba2 2303 	umull	r2, r3, r2, r3
 8002c0a:	095b      	lsrs	r3, r3, #5
 8002c0c:	0119      	lsls	r1, r3, #4
 8002c0e:	68fa      	ldr	r2, [r7, #12]
 8002c10:	4613      	mov	r3, r2
 8002c12:	009b      	lsls	r3, r3, #2
 8002c14:	4413      	add	r3, r2
 8002c16:	009a      	lsls	r2, r3, #2
 8002c18:	441a      	add	r2, r3
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	685b      	ldr	r3, [r3, #4]
 8002c1e:	009b      	lsls	r3, r3, #2
 8002c20:	fbb2 f2f3 	udiv	r2, r2, r3
 8002c24:	4b1a      	ldr	r3, [pc, #104]	; (8002c90 <UART_SetConfig+0x118>)
 8002c26:	fba3 0302 	umull	r0, r3, r3, r2
 8002c2a:	095b      	lsrs	r3, r3, #5
 8002c2c:	2064      	movs	r0, #100	; 0x64
 8002c2e:	fb00 f303 	mul.w	r3, r0, r3
 8002c32:	1ad3      	subs	r3, r2, r3
 8002c34:	011b      	lsls	r3, r3, #4
 8002c36:	3332      	adds	r3, #50	; 0x32
 8002c38:	4a15      	ldr	r2, [pc, #84]	; (8002c90 <UART_SetConfig+0x118>)
 8002c3a:	fba2 2303 	umull	r2, r3, r2, r3
 8002c3e:	095b      	lsrs	r3, r3, #5
 8002c40:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002c44:	4419      	add	r1, r3
 8002c46:	68fa      	ldr	r2, [r7, #12]
 8002c48:	4613      	mov	r3, r2
 8002c4a:	009b      	lsls	r3, r3, #2
 8002c4c:	4413      	add	r3, r2
 8002c4e:	009a      	lsls	r2, r3, #2
 8002c50:	441a      	add	r2, r3
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	685b      	ldr	r3, [r3, #4]
 8002c56:	009b      	lsls	r3, r3, #2
 8002c58:	fbb2 f2f3 	udiv	r2, r2, r3
 8002c5c:	4b0c      	ldr	r3, [pc, #48]	; (8002c90 <UART_SetConfig+0x118>)
 8002c5e:	fba3 0302 	umull	r0, r3, r3, r2
 8002c62:	095b      	lsrs	r3, r3, #5
 8002c64:	2064      	movs	r0, #100	; 0x64
 8002c66:	fb00 f303 	mul.w	r3, r0, r3
 8002c6a:	1ad3      	subs	r3, r2, r3
 8002c6c:	011b      	lsls	r3, r3, #4
 8002c6e:	3332      	adds	r3, #50	; 0x32
 8002c70:	4a07      	ldr	r2, [pc, #28]	; (8002c90 <UART_SetConfig+0x118>)
 8002c72:	fba2 2303 	umull	r2, r3, r2, r3
 8002c76:	095b      	lsrs	r3, r3, #5
 8002c78:	f003 020f 	and.w	r2, r3, #15
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	440a      	add	r2, r1
 8002c82:	609a      	str	r2, [r3, #8]
 8002c84:	bf00      	nop
 8002c86:	3710      	adds	r7, #16
 8002c88:	46bd      	mov	sp, r7
 8002c8a:	bd80      	pop	{r7, pc}
 8002c8c:	40013800 	.word	0x40013800
 8002c90:	51eb851f 	.word	0x51eb851f

08002c94 <__errno>:
 8002c94:	4b01      	ldr	r3, [pc, #4]	; (8002c9c <__errno+0x8>)
 8002c96:	6818      	ldr	r0, [r3, #0]
 8002c98:	4770      	bx	lr
 8002c9a:	bf00      	nop
 8002c9c:	2000000c 	.word	0x2000000c

08002ca0 <__sflush_r>:
 8002ca0:	898a      	ldrh	r2, [r1, #12]
 8002ca2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ca4:	4605      	mov	r5, r0
 8002ca6:	0710      	lsls	r0, r2, #28
 8002ca8:	460c      	mov	r4, r1
 8002caa:	d457      	bmi.n	8002d5c <__sflush_r+0xbc>
 8002cac:	684b      	ldr	r3, [r1, #4]
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	dc04      	bgt.n	8002cbc <__sflush_r+0x1c>
 8002cb2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	dc01      	bgt.n	8002cbc <__sflush_r+0x1c>
 8002cb8:	2000      	movs	r0, #0
 8002cba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002cbc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8002cbe:	2e00      	cmp	r6, #0
 8002cc0:	d0fa      	beq.n	8002cb8 <__sflush_r+0x18>
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8002cc8:	682f      	ldr	r7, [r5, #0]
 8002cca:	602b      	str	r3, [r5, #0]
 8002ccc:	d032      	beq.n	8002d34 <__sflush_r+0x94>
 8002cce:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8002cd0:	89a3      	ldrh	r3, [r4, #12]
 8002cd2:	075a      	lsls	r2, r3, #29
 8002cd4:	d505      	bpl.n	8002ce2 <__sflush_r+0x42>
 8002cd6:	6863      	ldr	r3, [r4, #4]
 8002cd8:	1ac0      	subs	r0, r0, r3
 8002cda:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002cdc:	b10b      	cbz	r3, 8002ce2 <__sflush_r+0x42>
 8002cde:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002ce0:	1ac0      	subs	r0, r0, r3
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	4602      	mov	r2, r0
 8002ce6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8002ce8:	4628      	mov	r0, r5
 8002cea:	6a21      	ldr	r1, [r4, #32]
 8002cec:	47b0      	blx	r6
 8002cee:	1c43      	adds	r3, r0, #1
 8002cf0:	89a3      	ldrh	r3, [r4, #12]
 8002cf2:	d106      	bne.n	8002d02 <__sflush_r+0x62>
 8002cf4:	6829      	ldr	r1, [r5, #0]
 8002cf6:	291d      	cmp	r1, #29
 8002cf8:	d82c      	bhi.n	8002d54 <__sflush_r+0xb4>
 8002cfa:	4a29      	ldr	r2, [pc, #164]	; (8002da0 <__sflush_r+0x100>)
 8002cfc:	40ca      	lsrs	r2, r1
 8002cfe:	07d6      	lsls	r6, r2, #31
 8002d00:	d528      	bpl.n	8002d54 <__sflush_r+0xb4>
 8002d02:	2200      	movs	r2, #0
 8002d04:	6062      	str	r2, [r4, #4]
 8002d06:	6922      	ldr	r2, [r4, #16]
 8002d08:	04d9      	lsls	r1, r3, #19
 8002d0a:	6022      	str	r2, [r4, #0]
 8002d0c:	d504      	bpl.n	8002d18 <__sflush_r+0x78>
 8002d0e:	1c42      	adds	r2, r0, #1
 8002d10:	d101      	bne.n	8002d16 <__sflush_r+0x76>
 8002d12:	682b      	ldr	r3, [r5, #0]
 8002d14:	b903      	cbnz	r3, 8002d18 <__sflush_r+0x78>
 8002d16:	6560      	str	r0, [r4, #84]	; 0x54
 8002d18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002d1a:	602f      	str	r7, [r5, #0]
 8002d1c:	2900      	cmp	r1, #0
 8002d1e:	d0cb      	beq.n	8002cb8 <__sflush_r+0x18>
 8002d20:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002d24:	4299      	cmp	r1, r3
 8002d26:	d002      	beq.n	8002d2e <__sflush_r+0x8e>
 8002d28:	4628      	mov	r0, r5
 8002d2a:	f000 f9dd 	bl	80030e8 <_free_r>
 8002d2e:	2000      	movs	r0, #0
 8002d30:	6360      	str	r0, [r4, #52]	; 0x34
 8002d32:	e7c2      	b.n	8002cba <__sflush_r+0x1a>
 8002d34:	6a21      	ldr	r1, [r4, #32]
 8002d36:	2301      	movs	r3, #1
 8002d38:	4628      	mov	r0, r5
 8002d3a:	47b0      	blx	r6
 8002d3c:	1c41      	adds	r1, r0, #1
 8002d3e:	d1c7      	bne.n	8002cd0 <__sflush_r+0x30>
 8002d40:	682b      	ldr	r3, [r5, #0]
 8002d42:	2b00      	cmp	r3, #0
 8002d44:	d0c4      	beq.n	8002cd0 <__sflush_r+0x30>
 8002d46:	2b1d      	cmp	r3, #29
 8002d48:	d001      	beq.n	8002d4e <__sflush_r+0xae>
 8002d4a:	2b16      	cmp	r3, #22
 8002d4c:	d101      	bne.n	8002d52 <__sflush_r+0xb2>
 8002d4e:	602f      	str	r7, [r5, #0]
 8002d50:	e7b2      	b.n	8002cb8 <__sflush_r+0x18>
 8002d52:	89a3      	ldrh	r3, [r4, #12]
 8002d54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002d58:	81a3      	strh	r3, [r4, #12]
 8002d5a:	e7ae      	b.n	8002cba <__sflush_r+0x1a>
 8002d5c:	690f      	ldr	r7, [r1, #16]
 8002d5e:	2f00      	cmp	r7, #0
 8002d60:	d0aa      	beq.n	8002cb8 <__sflush_r+0x18>
 8002d62:	0793      	lsls	r3, r2, #30
 8002d64:	bf18      	it	ne
 8002d66:	2300      	movne	r3, #0
 8002d68:	680e      	ldr	r6, [r1, #0]
 8002d6a:	bf08      	it	eq
 8002d6c:	694b      	ldreq	r3, [r1, #20]
 8002d6e:	1bf6      	subs	r6, r6, r7
 8002d70:	600f      	str	r7, [r1, #0]
 8002d72:	608b      	str	r3, [r1, #8]
 8002d74:	2e00      	cmp	r6, #0
 8002d76:	dd9f      	ble.n	8002cb8 <__sflush_r+0x18>
 8002d78:	4633      	mov	r3, r6
 8002d7a:	463a      	mov	r2, r7
 8002d7c:	4628      	mov	r0, r5
 8002d7e:	6a21      	ldr	r1, [r4, #32]
 8002d80:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8002d84:	47e0      	blx	ip
 8002d86:	2800      	cmp	r0, #0
 8002d88:	dc06      	bgt.n	8002d98 <__sflush_r+0xf8>
 8002d8a:	89a3      	ldrh	r3, [r4, #12]
 8002d8c:	f04f 30ff 	mov.w	r0, #4294967295
 8002d90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002d94:	81a3      	strh	r3, [r4, #12]
 8002d96:	e790      	b.n	8002cba <__sflush_r+0x1a>
 8002d98:	4407      	add	r7, r0
 8002d9a:	1a36      	subs	r6, r6, r0
 8002d9c:	e7ea      	b.n	8002d74 <__sflush_r+0xd4>
 8002d9e:	bf00      	nop
 8002da0:	20400001 	.word	0x20400001

08002da4 <_fflush_r>:
 8002da4:	b538      	push	{r3, r4, r5, lr}
 8002da6:	690b      	ldr	r3, [r1, #16]
 8002da8:	4605      	mov	r5, r0
 8002daa:	460c      	mov	r4, r1
 8002dac:	b913      	cbnz	r3, 8002db4 <_fflush_r+0x10>
 8002dae:	2500      	movs	r5, #0
 8002db0:	4628      	mov	r0, r5
 8002db2:	bd38      	pop	{r3, r4, r5, pc}
 8002db4:	b118      	cbz	r0, 8002dbe <_fflush_r+0x1a>
 8002db6:	6983      	ldr	r3, [r0, #24]
 8002db8:	b90b      	cbnz	r3, 8002dbe <_fflush_r+0x1a>
 8002dba:	f000 f899 	bl	8002ef0 <__sinit>
 8002dbe:	4b14      	ldr	r3, [pc, #80]	; (8002e10 <_fflush_r+0x6c>)
 8002dc0:	429c      	cmp	r4, r3
 8002dc2:	d11b      	bne.n	8002dfc <_fflush_r+0x58>
 8002dc4:	686c      	ldr	r4, [r5, #4]
 8002dc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d0ef      	beq.n	8002dae <_fflush_r+0xa>
 8002dce:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8002dd0:	07d0      	lsls	r0, r2, #31
 8002dd2:	d404      	bmi.n	8002dde <_fflush_r+0x3a>
 8002dd4:	0599      	lsls	r1, r3, #22
 8002dd6:	d402      	bmi.n	8002dde <_fflush_r+0x3a>
 8002dd8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002dda:	f000 f97a 	bl	80030d2 <__retarget_lock_acquire_recursive>
 8002dde:	4628      	mov	r0, r5
 8002de0:	4621      	mov	r1, r4
 8002de2:	f7ff ff5d 	bl	8002ca0 <__sflush_r>
 8002de6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002de8:	4605      	mov	r5, r0
 8002dea:	07da      	lsls	r2, r3, #31
 8002dec:	d4e0      	bmi.n	8002db0 <_fflush_r+0xc>
 8002dee:	89a3      	ldrh	r3, [r4, #12]
 8002df0:	059b      	lsls	r3, r3, #22
 8002df2:	d4dd      	bmi.n	8002db0 <_fflush_r+0xc>
 8002df4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002df6:	f000 f96d 	bl	80030d4 <__retarget_lock_release_recursive>
 8002dfa:	e7d9      	b.n	8002db0 <_fflush_r+0xc>
 8002dfc:	4b05      	ldr	r3, [pc, #20]	; (8002e14 <_fflush_r+0x70>)
 8002dfe:	429c      	cmp	r4, r3
 8002e00:	d101      	bne.n	8002e06 <_fflush_r+0x62>
 8002e02:	68ac      	ldr	r4, [r5, #8]
 8002e04:	e7df      	b.n	8002dc6 <_fflush_r+0x22>
 8002e06:	4b04      	ldr	r3, [pc, #16]	; (8002e18 <_fflush_r+0x74>)
 8002e08:	429c      	cmp	r4, r3
 8002e0a:	bf08      	it	eq
 8002e0c:	68ec      	ldreq	r4, [r5, #12]
 8002e0e:	e7da      	b.n	8002dc6 <_fflush_r+0x22>
 8002e10:	0800562c 	.word	0x0800562c
 8002e14:	0800564c 	.word	0x0800564c
 8002e18:	0800560c 	.word	0x0800560c

08002e1c <fflush>:
 8002e1c:	4601      	mov	r1, r0
 8002e1e:	b920      	cbnz	r0, 8002e2a <fflush+0xe>
 8002e20:	4b04      	ldr	r3, [pc, #16]	; (8002e34 <fflush+0x18>)
 8002e22:	4905      	ldr	r1, [pc, #20]	; (8002e38 <fflush+0x1c>)
 8002e24:	6818      	ldr	r0, [r3, #0]
 8002e26:	f000 b8fe 	b.w	8003026 <_fwalk_reent>
 8002e2a:	4b04      	ldr	r3, [pc, #16]	; (8002e3c <fflush+0x20>)
 8002e2c:	6818      	ldr	r0, [r3, #0]
 8002e2e:	f7ff bfb9 	b.w	8002da4 <_fflush_r>
 8002e32:	bf00      	nop
 8002e34:	0800566c 	.word	0x0800566c
 8002e38:	08002da5 	.word	0x08002da5
 8002e3c:	2000000c 	.word	0x2000000c

08002e40 <std>:
 8002e40:	2300      	movs	r3, #0
 8002e42:	b510      	push	{r4, lr}
 8002e44:	4604      	mov	r4, r0
 8002e46:	e9c0 3300 	strd	r3, r3, [r0]
 8002e4a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002e4e:	6083      	str	r3, [r0, #8]
 8002e50:	8181      	strh	r1, [r0, #12]
 8002e52:	6643      	str	r3, [r0, #100]	; 0x64
 8002e54:	81c2      	strh	r2, [r0, #14]
 8002e56:	6183      	str	r3, [r0, #24]
 8002e58:	4619      	mov	r1, r3
 8002e5a:	2208      	movs	r2, #8
 8002e5c:	305c      	adds	r0, #92	; 0x5c
 8002e5e:	f000 f93a 	bl	80030d6 <memset>
 8002e62:	4b05      	ldr	r3, [pc, #20]	; (8002e78 <std+0x38>)
 8002e64:	6224      	str	r4, [r4, #32]
 8002e66:	6263      	str	r3, [r4, #36]	; 0x24
 8002e68:	4b04      	ldr	r3, [pc, #16]	; (8002e7c <std+0x3c>)
 8002e6a:	62a3      	str	r3, [r4, #40]	; 0x28
 8002e6c:	4b04      	ldr	r3, [pc, #16]	; (8002e80 <std+0x40>)
 8002e6e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002e70:	4b04      	ldr	r3, [pc, #16]	; (8002e84 <std+0x44>)
 8002e72:	6323      	str	r3, [r4, #48]	; 0x30
 8002e74:	bd10      	pop	{r4, pc}
 8002e76:	bf00      	nop
 8002e78:	080035d9 	.word	0x080035d9
 8002e7c:	080035fb 	.word	0x080035fb
 8002e80:	08003633 	.word	0x08003633
 8002e84:	08003657 	.word	0x08003657

08002e88 <_cleanup_r>:
 8002e88:	4901      	ldr	r1, [pc, #4]	; (8002e90 <_cleanup_r+0x8>)
 8002e8a:	f000 b8cc 	b.w	8003026 <_fwalk_reent>
 8002e8e:	bf00      	nop
 8002e90:	08002da5 	.word	0x08002da5

08002e94 <__sfmoreglue>:
 8002e94:	2268      	movs	r2, #104	; 0x68
 8002e96:	b570      	push	{r4, r5, r6, lr}
 8002e98:	1e4d      	subs	r5, r1, #1
 8002e9a:	4355      	muls	r5, r2
 8002e9c:	460e      	mov	r6, r1
 8002e9e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002ea2:	f000 f989 	bl	80031b8 <_malloc_r>
 8002ea6:	4604      	mov	r4, r0
 8002ea8:	b140      	cbz	r0, 8002ebc <__sfmoreglue+0x28>
 8002eaa:	2100      	movs	r1, #0
 8002eac:	e9c0 1600 	strd	r1, r6, [r0]
 8002eb0:	300c      	adds	r0, #12
 8002eb2:	60a0      	str	r0, [r4, #8]
 8002eb4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002eb8:	f000 f90d 	bl	80030d6 <memset>
 8002ebc:	4620      	mov	r0, r4
 8002ebe:	bd70      	pop	{r4, r5, r6, pc}

08002ec0 <__sfp_lock_acquire>:
 8002ec0:	4801      	ldr	r0, [pc, #4]	; (8002ec8 <__sfp_lock_acquire+0x8>)
 8002ec2:	f000 b906 	b.w	80030d2 <__retarget_lock_acquire_recursive>
 8002ec6:	bf00      	nop
 8002ec8:	2000011d 	.word	0x2000011d

08002ecc <__sfp_lock_release>:
 8002ecc:	4801      	ldr	r0, [pc, #4]	; (8002ed4 <__sfp_lock_release+0x8>)
 8002ece:	f000 b901 	b.w	80030d4 <__retarget_lock_release_recursive>
 8002ed2:	bf00      	nop
 8002ed4:	2000011d 	.word	0x2000011d

08002ed8 <__sinit_lock_acquire>:
 8002ed8:	4801      	ldr	r0, [pc, #4]	; (8002ee0 <__sinit_lock_acquire+0x8>)
 8002eda:	f000 b8fa 	b.w	80030d2 <__retarget_lock_acquire_recursive>
 8002ede:	bf00      	nop
 8002ee0:	2000011e 	.word	0x2000011e

08002ee4 <__sinit_lock_release>:
 8002ee4:	4801      	ldr	r0, [pc, #4]	; (8002eec <__sinit_lock_release+0x8>)
 8002ee6:	f000 b8f5 	b.w	80030d4 <__retarget_lock_release_recursive>
 8002eea:	bf00      	nop
 8002eec:	2000011e 	.word	0x2000011e

08002ef0 <__sinit>:
 8002ef0:	b510      	push	{r4, lr}
 8002ef2:	4604      	mov	r4, r0
 8002ef4:	f7ff fff0 	bl	8002ed8 <__sinit_lock_acquire>
 8002ef8:	69a3      	ldr	r3, [r4, #24]
 8002efa:	b11b      	cbz	r3, 8002f04 <__sinit+0x14>
 8002efc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f00:	f7ff bff0 	b.w	8002ee4 <__sinit_lock_release>
 8002f04:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002f08:	6523      	str	r3, [r4, #80]	; 0x50
 8002f0a:	4b13      	ldr	r3, [pc, #76]	; (8002f58 <__sinit+0x68>)
 8002f0c:	4a13      	ldr	r2, [pc, #76]	; (8002f5c <__sinit+0x6c>)
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	62a2      	str	r2, [r4, #40]	; 0x28
 8002f12:	42a3      	cmp	r3, r4
 8002f14:	bf08      	it	eq
 8002f16:	2301      	moveq	r3, #1
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bf08      	it	eq
 8002f1c:	61a3      	streq	r3, [r4, #24]
 8002f1e:	f000 f81f 	bl	8002f60 <__sfp>
 8002f22:	6060      	str	r0, [r4, #4]
 8002f24:	4620      	mov	r0, r4
 8002f26:	f000 f81b 	bl	8002f60 <__sfp>
 8002f2a:	60a0      	str	r0, [r4, #8]
 8002f2c:	4620      	mov	r0, r4
 8002f2e:	f000 f817 	bl	8002f60 <__sfp>
 8002f32:	2200      	movs	r2, #0
 8002f34:	2104      	movs	r1, #4
 8002f36:	60e0      	str	r0, [r4, #12]
 8002f38:	6860      	ldr	r0, [r4, #4]
 8002f3a:	f7ff ff81 	bl	8002e40 <std>
 8002f3e:	2201      	movs	r2, #1
 8002f40:	2109      	movs	r1, #9
 8002f42:	68a0      	ldr	r0, [r4, #8]
 8002f44:	f7ff ff7c 	bl	8002e40 <std>
 8002f48:	2202      	movs	r2, #2
 8002f4a:	2112      	movs	r1, #18
 8002f4c:	68e0      	ldr	r0, [r4, #12]
 8002f4e:	f7ff ff77 	bl	8002e40 <std>
 8002f52:	2301      	movs	r3, #1
 8002f54:	61a3      	str	r3, [r4, #24]
 8002f56:	e7d1      	b.n	8002efc <__sinit+0xc>
 8002f58:	0800566c 	.word	0x0800566c
 8002f5c:	08002e89 	.word	0x08002e89

08002f60 <__sfp>:
 8002f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f62:	4607      	mov	r7, r0
 8002f64:	f7ff ffac 	bl	8002ec0 <__sfp_lock_acquire>
 8002f68:	4b1e      	ldr	r3, [pc, #120]	; (8002fe4 <__sfp+0x84>)
 8002f6a:	681e      	ldr	r6, [r3, #0]
 8002f6c:	69b3      	ldr	r3, [r6, #24]
 8002f6e:	b913      	cbnz	r3, 8002f76 <__sfp+0x16>
 8002f70:	4630      	mov	r0, r6
 8002f72:	f7ff ffbd 	bl	8002ef0 <__sinit>
 8002f76:	3648      	adds	r6, #72	; 0x48
 8002f78:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8002f7c:	3b01      	subs	r3, #1
 8002f7e:	d503      	bpl.n	8002f88 <__sfp+0x28>
 8002f80:	6833      	ldr	r3, [r6, #0]
 8002f82:	b30b      	cbz	r3, 8002fc8 <__sfp+0x68>
 8002f84:	6836      	ldr	r6, [r6, #0]
 8002f86:	e7f7      	b.n	8002f78 <__sfp+0x18>
 8002f88:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8002f8c:	b9d5      	cbnz	r5, 8002fc4 <__sfp+0x64>
 8002f8e:	4b16      	ldr	r3, [pc, #88]	; (8002fe8 <__sfp+0x88>)
 8002f90:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002f94:	60e3      	str	r3, [r4, #12]
 8002f96:	6665      	str	r5, [r4, #100]	; 0x64
 8002f98:	f000 f89a 	bl	80030d0 <__retarget_lock_init_recursive>
 8002f9c:	f7ff ff96 	bl	8002ecc <__sfp_lock_release>
 8002fa0:	2208      	movs	r2, #8
 8002fa2:	4629      	mov	r1, r5
 8002fa4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002fa8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002fac:	6025      	str	r5, [r4, #0]
 8002fae:	61a5      	str	r5, [r4, #24]
 8002fb0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002fb4:	f000 f88f 	bl	80030d6 <memset>
 8002fb8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8002fbc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002fc0:	4620      	mov	r0, r4
 8002fc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002fc4:	3468      	adds	r4, #104	; 0x68
 8002fc6:	e7d9      	b.n	8002f7c <__sfp+0x1c>
 8002fc8:	2104      	movs	r1, #4
 8002fca:	4638      	mov	r0, r7
 8002fcc:	f7ff ff62 	bl	8002e94 <__sfmoreglue>
 8002fd0:	4604      	mov	r4, r0
 8002fd2:	6030      	str	r0, [r6, #0]
 8002fd4:	2800      	cmp	r0, #0
 8002fd6:	d1d5      	bne.n	8002f84 <__sfp+0x24>
 8002fd8:	f7ff ff78 	bl	8002ecc <__sfp_lock_release>
 8002fdc:	230c      	movs	r3, #12
 8002fde:	603b      	str	r3, [r7, #0]
 8002fe0:	e7ee      	b.n	8002fc0 <__sfp+0x60>
 8002fe2:	bf00      	nop
 8002fe4:	0800566c 	.word	0x0800566c
 8002fe8:	ffff0001 	.word	0xffff0001

08002fec <_fwalk>:
 8002fec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ff0:	460f      	mov	r7, r1
 8002ff2:	2600      	movs	r6, #0
 8002ff4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002ff8:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 8002ffc:	f1b8 0801 	subs.w	r8, r8, #1
 8003000:	d505      	bpl.n	800300e <_fwalk+0x22>
 8003002:	6824      	ldr	r4, [r4, #0]
 8003004:	2c00      	cmp	r4, #0
 8003006:	d1f7      	bne.n	8002ff8 <_fwalk+0xc>
 8003008:	4630      	mov	r0, r6
 800300a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800300e:	89ab      	ldrh	r3, [r5, #12]
 8003010:	2b01      	cmp	r3, #1
 8003012:	d906      	bls.n	8003022 <_fwalk+0x36>
 8003014:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003018:	3301      	adds	r3, #1
 800301a:	d002      	beq.n	8003022 <_fwalk+0x36>
 800301c:	4628      	mov	r0, r5
 800301e:	47b8      	blx	r7
 8003020:	4306      	orrs	r6, r0
 8003022:	3568      	adds	r5, #104	; 0x68
 8003024:	e7ea      	b.n	8002ffc <_fwalk+0x10>

08003026 <_fwalk_reent>:
 8003026:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800302a:	4606      	mov	r6, r0
 800302c:	4688      	mov	r8, r1
 800302e:	2700      	movs	r7, #0
 8003030:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003034:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003038:	f1b9 0901 	subs.w	r9, r9, #1
 800303c:	d505      	bpl.n	800304a <_fwalk_reent+0x24>
 800303e:	6824      	ldr	r4, [r4, #0]
 8003040:	2c00      	cmp	r4, #0
 8003042:	d1f7      	bne.n	8003034 <_fwalk_reent+0xe>
 8003044:	4638      	mov	r0, r7
 8003046:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800304a:	89ab      	ldrh	r3, [r5, #12]
 800304c:	2b01      	cmp	r3, #1
 800304e:	d907      	bls.n	8003060 <_fwalk_reent+0x3a>
 8003050:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003054:	3301      	adds	r3, #1
 8003056:	d003      	beq.n	8003060 <_fwalk_reent+0x3a>
 8003058:	4629      	mov	r1, r5
 800305a:	4630      	mov	r0, r6
 800305c:	47c0      	blx	r8
 800305e:	4307      	orrs	r7, r0
 8003060:	3568      	adds	r5, #104	; 0x68
 8003062:	e7e9      	b.n	8003038 <_fwalk_reent+0x12>

08003064 <getchar>:
 8003064:	4b07      	ldr	r3, [pc, #28]	; (8003084 <getchar+0x20>)
 8003066:	b510      	push	{r4, lr}
 8003068:	681c      	ldr	r4, [r3, #0]
 800306a:	b124      	cbz	r4, 8003076 <getchar+0x12>
 800306c:	69a3      	ldr	r3, [r4, #24]
 800306e:	b913      	cbnz	r3, 8003076 <getchar+0x12>
 8003070:	4620      	mov	r0, r4
 8003072:	f7ff ff3d 	bl	8002ef0 <__sinit>
 8003076:	4620      	mov	r0, r4
 8003078:	6861      	ldr	r1, [r4, #4]
 800307a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800307e:	f000 bbe5 	b.w	800384c <_getc_r>
 8003082:	bf00      	nop
 8003084:	2000000c 	.word	0x2000000c

08003088 <__libc_init_array>:
 8003088:	b570      	push	{r4, r5, r6, lr}
 800308a:	2600      	movs	r6, #0
 800308c:	4d0c      	ldr	r5, [pc, #48]	; (80030c0 <__libc_init_array+0x38>)
 800308e:	4c0d      	ldr	r4, [pc, #52]	; (80030c4 <__libc_init_array+0x3c>)
 8003090:	1b64      	subs	r4, r4, r5
 8003092:	10a4      	asrs	r4, r4, #2
 8003094:	42a6      	cmp	r6, r4
 8003096:	d109      	bne.n	80030ac <__libc_init_array+0x24>
 8003098:	f001 ff6c 	bl	8004f74 <_init>
 800309c:	2600      	movs	r6, #0
 800309e:	4d0a      	ldr	r5, [pc, #40]	; (80030c8 <__libc_init_array+0x40>)
 80030a0:	4c0a      	ldr	r4, [pc, #40]	; (80030cc <__libc_init_array+0x44>)
 80030a2:	1b64      	subs	r4, r4, r5
 80030a4:	10a4      	asrs	r4, r4, #2
 80030a6:	42a6      	cmp	r6, r4
 80030a8:	d105      	bne.n	80030b6 <__libc_init_array+0x2e>
 80030aa:	bd70      	pop	{r4, r5, r6, pc}
 80030ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80030b0:	4798      	blx	r3
 80030b2:	3601      	adds	r6, #1
 80030b4:	e7ee      	b.n	8003094 <__libc_init_array+0xc>
 80030b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80030ba:	4798      	blx	r3
 80030bc:	3601      	adds	r6, #1
 80030be:	e7f2      	b.n	80030a6 <__libc_init_array+0x1e>
 80030c0:	080057c0 	.word	0x080057c0
 80030c4:	080057c0 	.word	0x080057c0
 80030c8:	080057c0 	.word	0x080057c0
 80030cc:	080057c4 	.word	0x080057c4

080030d0 <__retarget_lock_init_recursive>:
 80030d0:	4770      	bx	lr

080030d2 <__retarget_lock_acquire_recursive>:
 80030d2:	4770      	bx	lr

080030d4 <__retarget_lock_release_recursive>:
 80030d4:	4770      	bx	lr

080030d6 <memset>:
 80030d6:	4603      	mov	r3, r0
 80030d8:	4402      	add	r2, r0
 80030da:	4293      	cmp	r3, r2
 80030dc:	d100      	bne.n	80030e0 <memset+0xa>
 80030de:	4770      	bx	lr
 80030e0:	f803 1b01 	strb.w	r1, [r3], #1
 80030e4:	e7f9      	b.n	80030da <memset+0x4>
	...

080030e8 <_free_r>:
 80030e8:	b538      	push	{r3, r4, r5, lr}
 80030ea:	4605      	mov	r5, r0
 80030ec:	2900      	cmp	r1, #0
 80030ee:	d040      	beq.n	8003172 <_free_r+0x8a>
 80030f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80030f4:	1f0c      	subs	r4, r1, #4
 80030f6:	2b00      	cmp	r3, #0
 80030f8:	bfb8      	it	lt
 80030fa:	18e4      	addlt	r4, r4, r3
 80030fc:	f000 fc66 	bl	80039cc <__malloc_lock>
 8003100:	4a1c      	ldr	r2, [pc, #112]	; (8003174 <_free_r+0x8c>)
 8003102:	6813      	ldr	r3, [r2, #0]
 8003104:	b933      	cbnz	r3, 8003114 <_free_r+0x2c>
 8003106:	6063      	str	r3, [r4, #4]
 8003108:	6014      	str	r4, [r2, #0]
 800310a:	4628      	mov	r0, r5
 800310c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003110:	f000 bc62 	b.w	80039d8 <__malloc_unlock>
 8003114:	42a3      	cmp	r3, r4
 8003116:	d908      	bls.n	800312a <_free_r+0x42>
 8003118:	6820      	ldr	r0, [r4, #0]
 800311a:	1821      	adds	r1, r4, r0
 800311c:	428b      	cmp	r3, r1
 800311e:	bf01      	itttt	eq
 8003120:	6819      	ldreq	r1, [r3, #0]
 8003122:	685b      	ldreq	r3, [r3, #4]
 8003124:	1809      	addeq	r1, r1, r0
 8003126:	6021      	streq	r1, [r4, #0]
 8003128:	e7ed      	b.n	8003106 <_free_r+0x1e>
 800312a:	461a      	mov	r2, r3
 800312c:	685b      	ldr	r3, [r3, #4]
 800312e:	b10b      	cbz	r3, 8003134 <_free_r+0x4c>
 8003130:	42a3      	cmp	r3, r4
 8003132:	d9fa      	bls.n	800312a <_free_r+0x42>
 8003134:	6811      	ldr	r1, [r2, #0]
 8003136:	1850      	adds	r0, r2, r1
 8003138:	42a0      	cmp	r0, r4
 800313a:	d10b      	bne.n	8003154 <_free_r+0x6c>
 800313c:	6820      	ldr	r0, [r4, #0]
 800313e:	4401      	add	r1, r0
 8003140:	1850      	adds	r0, r2, r1
 8003142:	4283      	cmp	r3, r0
 8003144:	6011      	str	r1, [r2, #0]
 8003146:	d1e0      	bne.n	800310a <_free_r+0x22>
 8003148:	6818      	ldr	r0, [r3, #0]
 800314a:	685b      	ldr	r3, [r3, #4]
 800314c:	4401      	add	r1, r0
 800314e:	6011      	str	r1, [r2, #0]
 8003150:	6053      	str	r3, [r2, #4]
 8003152:	e7da      	b.n	800310a <_free_r+0x22>
 8003154:	d902      	bls.n	800315c <_free_r+0x74>
 8003156:	230c      	movs	r3, #12
 8003158:	602b      	str	r3, [r5, #0]
 800315a:	e7d6      	b.n	800310a <_free_r+0x22>
 800315c:	6820      	ldr	r0, [r4, #0]
 800315e:	1821      	adds	r1, r4, r0
 8003160:	428b      	cmp	r3, r1
 8003162:	bf01      	itttt	eq
 8003164:	6819      	ldreq	r1, [r3, #0]
 8003166:	685b      	ldreq	r3, [r3, #4]
 8003168:	1809      	addeq	r1, r1, r0
 800316a:	6021      	streq	r1, [r4, #0]
 800316c:	6063      	str	r3, [r4, #4]
 800316e:	6054      	str	r4, [r2, #4]
 8003170:	e7cb      	b.n	800310a <_free_r+0x22>
 8003172:	bd38      	pop	{r3, r4, r5, pc}
 8003174:	20000120 	.word	0x20000120

08003178 <sbrk_aligned>:
 8003178:	b570      	push	{r4, r5, r6, lr}
 800317a:	4e0e      	ldr	r6, [pc, #56]	; (80031b4 <sbrk_aligned+0x3c>)
 800317c:	460c      	mov	r4, r1
 800317e:	6831      	ldr	r1, [r6, #0]
 8003180:	4605      	mov	r5, r0
 8003182:	b911      	cbnz	r1, 800318a <sbrk_aligned+0x12>
 8003184:	f000 f91a 	bl	80033bc <_sbrk_r>
 8003188:	6030      	str	r0, [r6, #0]
 800318a:	4621      	mov	r1, r4
 800318c:	4628      	mov	r0, r5
 800318e:	f000 f915 	bl	80033bc <_sbrk_r>
 8003192:	1c43      	adds	r3, r0, #1
 8003194:	d00a      	beq.n	80031ac <sbrk_aligned+0x34>
 8003196:	1cc4      	adds	r4, r0, #3
 8003198:	f024 0403 	bic.w	r4, r4, #3
 800319c:	42a0      	cmp	r0, r4
 800319e:	d007      	beq.n	80031b0 <sbrk_aligned+0x38>
 80031a0:	1a21      	subs	r1, r4, r0
 80031a2:	4628      	mov	r0, r5
 80031a4:	f000 f90a 	bl	80033bc <_sbrk_r>
 80031a8:	3001      	adds	r0, #1
 80031aa:	d101      	bne.n	80031b0 <sbrk_aligned+0x38>
 80031ac:	f04f 34ff 	mov.w	r4, #4294967295
 80031b0:	4620      	mov	r0, r4
 80031b2:	bd70      	pop	{r4, r5, r6, pc}
 80031b4:	20000124 	.word	0x20000124

080031b8 <_malloc_r>:
 80031b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031bc:	1ccd      	adds	r5, r1, #3
 80031be:	f025 0503 	bic.w	r5, r5, #3
 80031c2:	3508      	adds	r5, #8
 80031c4:	2d0c      	cmp	r5, #12
 80031c6:	bf38      	it	cc
 80031c8:	250c      	movcc	r5, #12
 80031ca:	2d00      	cmp	r5, #0
 80031cc:	4607      	mov	r7, r0
 80031ce:	db01      	blt.n	80031d4 <_malloc_r+0x1c>
 80031d0:	42a9      	cmp	r1, r5
 80031d2:	d905      	bls.n	80031e0 <_malloc_r+0x28>
 80031d4:	230c      	movs	r3, #12
 80031d6:	2600      	movs	r6, #0
 80031d8:	603b      	str	r3, [r7, #0]
 80031da:	4630      	mov	r0, r6
 80031dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80031e0:	4e2e      	ldr	r6, [pc, #184]	; (800329c <_malloc_r+0xe4>)
 80031e2:	f000 fbf3 	bl	80039cc <__malloc_lock>
 80031e6:	6833      	ldr	r3, [r6, #0]
 80031e8:	461c      	mov	r4, r3
 80031ea:	bb34      	cbnz	r4, 800323a <_malloc_r+0x82>
 80031ec:	4629      	mov	r1, r5
 80031ee:	4638      	mov	r0, r7
 80031f0:	f7ff ffc2 	bl	8003178 <sbrk_aligned>
 80031f4:	1c43      	adds	r3, r0, #1
 80031f6:	4604      	mov	r4, r0
 80031f8:	d14d      	bne.n	8003296 <_malloc_r+0xde>
 80031fa:	6834      	ldr	r4, [r6, #0]
 80031fc:	4626      	mov	r6, r4
 80031fe:	2e00      	cmp	r6, #0
 8003200:	d140      	bne.n	8003284 <_malloc_r+0xcc>
 8003202:	6823      	ldr	r3, [r4, #0]
 8003204:	4631      	mov	r1, r6
 8003206:	4638      	mov	r0, r7
 8003208:	eb04 0803 	add.w	r8, r4, r3
 800320c:	f000 f8d6 	bl	80033bc <_sbrk_r>
 8003210:	4580      	cmp	r8, r0
 8003212:	d13a      	bne.n	800328a <_malloc_r+0xd2>
 8003214:	6821      	ldr	r1, [r4, #0]
 8003216:	3503      	adds	r5, #3
 8003218:	1a6d      	subs	r5, r5, r1
 800321a:	f025 0503 	bic.w	r5, r5, #3
 800321e:	3508      	adds	r5, #8
 8003220:	2d0c      	cmp	r5, #12
 8003222:	bf38      	it	cc
 8003224:	250c      	movcc	r5, #12
 8003226:	4638      	mov	r0, r7
 8003228:	4629      	mov	r1, r5
 800322a:	f7ff ffa5 	bl	8003178 <sbrk_aligned>
 800322e:	3001      	adds	r0, #1
 8003230:	d02b      	beq.n	800328a <_malloc_r+0xd2>
 8003232:	6823      	ldr	r3, [r4, #0]
 8003234:	442b      	add	r3, r5
 8003236:	6023      	str	r3, [r4, #0]
 8003238:	e00e      	b.n	8003258 <_malloc_r+0xa0>
 800323a:	6822      	ldr	r2, [r4, #0]
 800323c:	1b52      	subs	r2, r2, r5
 800323e:	d41e      	bmi.n	800327e <_malloc_r+0xc6>
 8003240:	2a0b      	cmp	r2, #11
 8003242:	d916      	bls.n	8003272 <_malloc_r+0xba>
 8003244:	1961      	adds	r1, r4, r5
 8003246:	42a3      	cmp	r3, r4
 8003248:	6025      	str	r5, [r4, #0]
 800324a:	bf18      	it	ne
 800324c:	6059      	strne	r1, [r3, #4]
 800324e:	6863      	ldr	r3, [r4, #4]
 8003250:	bf08      	it	eq
 8003252:	6031      	streq	r1, [r6, #0]
 8003254:	5162      	str	r2, [r4, r5]
 8003256:	604b      	str	r3, [r1, #4]
 8003258:	4638      	mov	r0, r7
 800325a:	f104 060b 	add.w	r6, r4, #11
 800325e:	f000 fbbb 	bl	80039d8 <__malloc_unlock>
 8003262:	f026 0607 	bic.w	r6, r6, #7
 8003266:	1d23      	adds	r3, r4, #4
 8003268:	1af2      	subs	r2, r6, r3
 800326a:	d0b6      	beq.n	80031da <_malloc_r+0x22>
 800326c:	1b9b      	subs	r3, r3, r6
 800326e:	50a3      	str	r3, [r4, r2]
 8003270:	e7b3      	b.n	80031da <_malloc_r+0x22>
 8003272:	6862      	ldr	r2, [r4, #4]
 8003274:	42a3      	cmp	r3, r4
 8003276:	bf0c      	ite	eq
 8003278:	6032      	streq	r2, [r6, #0]
 800327a:	605a      	strne	r2, [r3, #4]
 800327c:	e7ec      	b.n	8003258 <_malloc_r+0xa0>
 800327e:	4623      	mov	r3, r4
 8003280:	6864      	ldr	r4, [r4, #4]
 8003282:	e7b2      	b.n	80031ea <_malloc_r+0x32>
 8003284:	4634      	mov	r4, r6
 8003286:	6876      	ldr	r6, [r6, #4]
 8003288:	e7b9      	b.n	80031fe <_malloc_r+0x46>
 800328a:	230c      	movs	r3, #12
 800328c:	4638      	mov	r0, r7
 800328e:	603b      	str	r3, [r7, #0]
 8003290:	f000 fba2 	bl	80039d8 <__malloc_unlock>
 8003294:	e7a1      	b.n	80031da <_malloc_r+0x22>
 8003296:	6025      	str	r5, [r4, #0]
 8003298:	e7de      	b.n	8003258 <_malloc_r+0xa0>
 800329a:	bf00      	nop
 800329c:	20000120 	.word	0x20000120

080032a0 <iprintf>:
 80032a0:	b40f      	push	{r0, r1, r2, r3}
 80032a2:	4b0a      	ldr	r3, [pc, #40]	; (80032cc <iprintf+0x2c>)
 80032a4:	b513      	push	{r0, r1, r4, lr}
 80032a6:	681c      	ldr	r4, [r3, #0]
 80032a8:	b124      	cbz	r4, 80032b4 <iprintf+0x14>
 80032aa:	69a3      	ldr	r3, [r4, #24]
 80032ac:	b913      	cbnz	r3, 80032b4 <iprintf+0x14>
 80032ae:	4620      	mov	r0, r4
 80032b0:	f7ff fe1e 	bl	8002ef0 <__sinit>
 80032b4:	ab05      	add	r3, sp, #20
 80032b6:	4620      	mov	r0, r4
 80032b8:	9a04      	ldr	r2, [sp, #16]
 80032ba:	68a1      	ldr	r1, [r4, #8]
 80032bc:	9301      	str	r3, [sp, #4]
 80032be:	f000 fd15 	bl	8003cec <_vfiprintf_r>
 80032c2:	b002      	add	sp, #8
 80032c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80032c8:	b004      	add	sp, #16
 80032ca:	4770      	bx	lr
 80032cc:	2000000c 	.word	0x2000000c

080032d0 <_puts_r>:
 80032d0:	b570      	push	{r4, r5, r6, lr}
 80032d2:	460e      	mov	r6, r1
 80032d4:	4605      	mov	r5, r0
 80032d6:	b118      	cbz	r0, 80032e0 <_puts_r+0x10>
 80032d8:	6983      	ldr	r3, [r0, #24]
 80032da:	b90b      	cbnz	r3, 80032e0 <_puts_r+0x10>
 80032dc:	f7ff fe08 	bl	8002ef0 <__sinit>
 80032e0:	69ab      	ldr	r3, [r5, #24]
 80032e2:	68ac      	ldr	r4, [r5, #8]
 80032e4:	b913      	cbnz	r3, 80032ec <_puts_r+0x1c>
 80032e6:	4628      	mov	r0, r5
 80032e8:	f7ff fe02 	bl	8002ef0 <__sinit>
 80032ec:	4b2c      	ldr	r3, [pc, #176]	; (80033a0 <_puts_r+0xd0>)
 80032ee:	429c      	cmp	r4, r3
 80032f0:	d120      	bne.n	8003334 <_puts_r+0x64>
 80032f2:	686c      	ldr	r4, [r5, #4]
 80032f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80032f6:	07db      	lsls	r3, r3, #31
 80032f8:	d405      	bmi.n	8003306 <_puts_r+0x36>
 80032fa:	89a3      	ldrh	r3, [r4, #12]
 80032fc:	0598      	lsls	r0, r3, #22
 80032fe:	d402      	bmi.n	8003306 <_puts_r+0x36>
 8003300:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003302:	f7ff fee6 	bl	80030d2 <__retarget_lock_acquire_recursive>
 8003306:	89a3      	ldrh	r3, [r4, #12]
 8003308:	0719      	lsls	r1, r3, #28
 800330a:	d51d      	bpl.n	8003348 <_puts_r+0x78>
 800330c:	6923      	ldr	r3, [r4, #16]
 800330e:	b1db      	cbz	r3, 8003348 <_puts_r+0x78>
 8003310:	3e01      	subs	r6, #1
 8003312:	68a3      	ldr	r3, [r4, #8]
 8003314:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003318:	3b01      	subs	r3, #1
 800331a:	60a3      	str	r3, [r4, #8]
 800331c:	bb39      	cbnz	r1, 800336e <_puts_r+0x9e>
 800331e:	2b00      	cmp	r3, #0
 8003320:	da38      	bge.n	8003394 <_puts_r+0xc4>
 8003322:	4622      	mov	r2, r4
 8003324:	210a      	movs	r1, #10
 8003326:	4628      	mov	r0, r5
 8003328:	f000 f9ae 	bl	8003688 <__swbuf_r>
 800332c:	3001      	adds	r0, #1
 800332e:	d011      	beq.n	8003354 <_puts_r+0x84>
 8003330:	250a      	movs	r5, #10
 8003332:	e011      	b.n	8003358 <_puts_r+0x88>
 8003334:	4b1b      	ldr	r3, [pc, #108]	; (80033a4 <_puts_r+0xd4>)
 8003336:	429c      	cmp	r4, r3
 8003338:	d101      	bne.n	800333e <_puts_r+0x6e>
 800333a:	68ac      	ldr	r4, [r5, #8]
 800333c:	e7da      	b.n	80032f4 <_puts_r+0x24>
 800333e:	4b1a      	ldr	r3, [pc, #104]	; (80033a8 <_puts_r+0xd8>)
 8003340:	429c      	cmp	r4, r3
 8003342:	bf08      	it	eq
 8003344:	68ec      	ldreq	r4, [r5, #12]
 8003346:	e7d5      	b.n	80032f4 <_puts_r+0x24>
 8003348:	4621      	mov	r1, r4
 800334a:	4628      	mov	r0, r5
 800334c:	f000 fa00 	bl	8003750 <__swsetup_r>
 8003350:	2800      	cmp	r0, #0
 8003352:	d0dd      	beq.n	8003310 <_puts_r+0x40>
 8003354:	f04f 35ff 	mov.w	r5, #4294967295
 8003358:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800335a:	07da      	lsls	r2, r3, #31
 800335c:	d405      	bmi.n	800336a <_puts_r+0x9a>
 800335e:	89a3      	ldrh	r3, [r4, #12]
 8003360:	059b      	lsls	r3, r3, #22
 8003362:	d402      	bmi.n	800336a <_puts_r+0x9a>
 8003364:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003366:	f7ff feb5 	bl	80030d4 <__retarget_lock_release_recursive>
 800336a:	4628      	mov	r0, r5
 800336c:	bd70      	pop	{r4, r5, r6, pc}
 800336e:	2b00      	cmp	r3, #0
 8003370:	da04      	bge.n	800337c <_puts_r+0xac>
 8003372:	69a2      	ldr	r2, [r4, #24]
 8003374:	429a      	cmp	r2, r3
 8003376:	dc06      	bgt.n	8003386 <_puts_r+0xb6>
 8003378:	290a      	cmp	r1, #10
 800337a:	d004      	beq.n	8003386 <_puts_r+0xb6>
 800337c:	6823      	ldr	r3, [r4, #0]
 800337e:	1c5a      	adds	r2, r3, #1
 8003380:	6022      	str	r2, [r4, #0]
 8003382:	7019      	strb	r1, [r3, #0]
 8003384:	e7c5      	b.n	8003312 <_puts_r+0x42>
 8003386:	4622      	mov	r2, r4
 8003388:	4628      	mov	r0, r5
 800338a:	f000 f97d 	bl	8003688 <__swbuf_r>
 800338e:	3001      	adds	r0, #1
 8003390:	d1bf      	bne.n	8003312 <_puts_r+0x42>
 8003392:	e7df      	b.n	8003354 <_puts_r+0x84>
 8003394:	250a      	movs	r5, #10
 8003396:	6823      	ldr	r3, [r4, #0]
 8003398:	1c5a      	adds	r2, r3, #1
 800339a:	6022      	str	r2, [r4, #0]
 800339c:	701d      	strb	r5, [r3, #0]
 800339e:	e7db      	b.n	8003358 <_puts_r+0x88>
 80033a0:	0800562c 	.word	0x0800562c
 80033a4:	0800564c 	.word	0x0800564c
 80033a8:	0800560c 	.word	0x0800560c

080033ac <puts>:
 80033ac:	4b02      	ldr	r3, [pc, #8]	; (80033b8 <puts+0xc>)
 80033ae:	4601      	mov	r1, r0
 80033b0:	6818      	ldr	r0, [r3, #0]
 80033b2:	f7ff bf8d 	b.w	80032d0 <_puts_r>
 80033b6:	bf00      	nop
 80033b8:	2000000c 	.word	0x2000000c

080033bc <_sbrk_r>:
 80033bc:	b538      	push	{r3, r4, r5, lr}
 80033be:	2300      	movs	r3, #0
 80033c0:	4d05      	ldr	r5, [pc, #20]	; (80033d8 <_sbrk_r+0x1c>)
 80033c2:	4604      	mov	r4, r0
 80033c4:	4608      	mov	r0, r1
 80033c6:	602b      	str	r3, [r5, #0]
 80033c8:	f7fd fe74 	bl	80010b4 <_sbrk>
 80033cc:	1c43      	adds	r3, r0, #1
 80033ce:	d102      	bne.n	80033d6 <_sbrk_r+0x1a>
 80033d0:	682b      	ldr	r3, [r5, #0]
 80033d2:	b103      	cbz	r3, 80033d6 <_sbrk_r+0x1a>
 80033d4:	6023      	str	r3, [r4, #0]
 80033d6:	bd38      	pop	{r3, r4, r5, pc}
 80033d8:	20000128 	.word	0x20000128

080033dc <iscanf>:
 80033dc:	b40f      	push	{r0, r1, r2, r3}
 80033de:	4b0a      	ldr	r3, [pc, #40]	; (8003408 <iscanf+0x2c>)
 80033e0:	b513      	push	{r0, r1, r4, lr}
 80033e2:	681c      	ldr	r4, [r3, #0]
 80033e4:	b124      	cbz	r4, 80033f0 <iscanf+0x14>
 80033e6:	69a3      	ldr	r3, [r4, #24]
 80033e8:	b913      	cbnz	r3, 80033f0 <iscanf+0x14>
 80033ea:	4620      	mov	r0, r4
 80033ec:	f7ff fd80 	bl	8002ef0 <__sinit>
 80033f0:	ab05      	add	r3, sp, #20
 80033f2:	4620      	mov	r0, r4
 80033f4:	9a04      	ldr	r2, [sp, #16]
 80033f6:	6861      	ldr	r1, [r4, #4]
 80033f8:	9301      	str	r3, [sp, #4]
 80033fa:	f001 f8e3 	bl	80045c4 <_vfiscanf_r>
 80033fe:	b002      	add	sp, #8
 8003400:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003404:	b004      	add	sp, #16
 8003406:	4770      	bx	lr
 8003408:	2000000c 	.word	0x2000000c

0800340c <setvbuf>:
 800340c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003410:	461d      	mov	r5, r3
 8003412:	4b5d      	ldr	r3, [pc, #372]	; (8003588 <setvbuf+0x17c>)
 8003414:	4604      	mov	r4, r0
 8003416:	681f      	ldr	r7, [r3, #0]
 8003418:	460e      	mov	r6, r1
 800341a:	4690      	mov	r8, r2
 800341c:	b127      	cbz	r7, 8003428 <setvbuf+0x1c>
 800341e:	69bb      	ldr	r3, [r7, #24]
 8003420:	b913      	cbnz	r3, 8003428 <setvbuf+0x1c>
 8003422:	4638      	mov	r0, r7
 8003424:	f7ff fd64 	bl	8002ef0 <__sinit>
 8003428:	4b58      	ldr	r3, [pc, #352]	; (800358c <setvbuf+0x180>)
 800342a:	429c      	cmp	r4, r3
 800342c:	d167      	bne.n	80034fe <setvbuf+0xf2>
 800342e:	687c      	ldr	r4, [r7, #4]
 8003430:	f1b8 0f02 	cmp.w	r8, #2
 8003434:	d006      	beq.n	8003444 <setvbuf+0x38>
 8003436:	f1b8 0f01 	cmp.w	r8, #1
 800343a:	f200 809f 	bhi.w	800357c <setvbuf+0x170>
 800343e:	2d00      	cmp	r5, #0
 8003440:	f2c0 809c 	blt.w	800357c <setvbuf+0x170>
 8003444:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003446:	07db      	lsls	r3, r3, #31
 8003448:	d405      	bmi.n	8003456 <setvbuf+0x4a>
 800344a:	89a3      	ldrh	r3, [r4, #12]
 800344c:	0598      	lsls	r0, r3, #22
 800344e:	d402      	bmi.n	8003456 <setvbuf+0x4a>
 8003450:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003452:	f7ff fe3e 	bl	80030d2 <__retarget_lock_acquire_recursive>
 8003456:	4621      	mov	r1, r4
 8003458:	4638      	mov	r0, r7
 800345a:	f7ff fca3 	bl	8002da4 <_fflush_r>
 800345e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003460:	b141      	cbz	r1, 8003474 <setvbuf+0x68>
 8003462:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003466:	4299      	cmp	r1, r3
 8003468:	d002      	beq.n	8003470 <setvbuf+0x64>
 800346a:	4638      	mov	r0, r7
 800346c:	f7ff fe3c 	bl	80030e8 <_free_r>
 8003470:	2300      	movs	r3, #0
 8003472:	6363      	str	r3, [r4, #52]	; 0x34
 8003474:	2300      	movs	r3, #0
 8003476:	61a3      	str	r3, [r4, #24]
 8003478:	6063      	str	r3, [r4, #4]
 800347a:	89a3      	ldrh	r3, [r4, #12]
 800347c:	0619      	lsls	r1, r3, #24
 800347e:	d503      	bpl.n	8003488 <setvbuf+0x7c>
 8003480:	4638      	mov	r0, r7
 8003482:	6921      	ldr	r1, [r4, #16]
 8003484:	f7ff fe30 	bl	80030e8 <_free_r>
 8003488:	89a3      	ldrh	r3, [r4, #12]
 800348a:	f1b8 0f02 	cmp.w	r8, #2
 800348e:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 8003492:	f023 0303 	bic.w	r3, r3, #3
 8003496:	81a3      	strh	r3, [r4, #12]
 8003498:	d06c      	beq.n	8003574 <setvbuf+0x168>
 800349a:	ab01      	add	r3, sp, #4
 800349c:	466a      	mov	r2, sp
 800349e:	4621      	mov	r1, r4
 80034a0:	4638      	mov	r0, r7
 80034a2:	f000 fa25 	bl	80038f0 <__swhatbuf_r>
 80034a6:	89a3      	ldrh	r3, [r4, #12]
 80034a8:	4318      	orrs	r0, r3
 80034aa:	81a0      	strh	r0, [r4, #12]
 80034ac:	2d00      	cmp	r5, #0
 80034ae:	d130      	bne.n	8003512 <setvbuf+0x106>
 80034b0:	9d00      	ldr	r5, [sp, #0]
 80034b2:	4628      	mov	r0, r5
 80034b4:	f000 fa82 	bl	80039bc <malloc>
 80034b8:	4606      	mov	r6, r0
 80034ba:	2800      	cmp	r0, #0
 80034bc:	d155      	bne.n	800356a <setvbuf+0x15e>
 80034be:	f8dd 9000 	ldr.w	r9, [sp]
 80034c2:	45a9      	cmp	r9, r5
 80034c4:	d14a      	bne.n	800355c <setvbuf+0x150>
 80034c6:	f04f 35ff 	mov.w	r5, #4294967295
 80034ca:	2200      	movs	r2, #0
 80034cc:	60a2      	str	r2, [r4, #8]
 80034ce:	f104 0247 	add.w	r2, r4, #71	; 0x47
 80034d2:	6022      	str	r2, [r4, #0]
 80034d4:	6122      	str	r2, [r4, #16]
 80034d6:	2201      	movs	r2, #1
 80034d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80034dc:	6162      	str	r2, [r4, #20]
 80034de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80034e0:	f043 0302 	orr.w	r3, r3, #2
 80034e4:	07d2      	lsls	r2, r2, #31
 80034e6:	81a3      	strh	r3, [r4, #12]
 80034e8:	d405      	bmi.n	80034f6 <setvbuf+0xea>
 80034ea:	f413 7f00 	tst.w	r3, #512	; 0x200
 80034ee:	d102      	bne.n	80034f6 <setvbuf+0xea>
 80034f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80034f2:	f7ff fdef 	bl	80030d4 <__retarget_lock_release_recursive>
 80034f6:	4628      	mov	r0, r5
 80034f8:	b003      	add	sp, #12
 80034fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80034fe:	4b24      	ldr	r3, [pc, #144]	; (8003590 <setvbuf+0x184>)
 8003500:	429c      	cmp	r4, r3
 8003502:	d101      	bne.n	8003508 <setvbuf+0xfc>
 8003504:	68bc      	ldr	r4, [r7, #8]
 8003506:	e793      	b.n	8003430 <setvbuf+0x24>
 8003508:	4b22      	ldr	r3, [pc, #136]	; (8003594 <setvbuf+0x188>)
 800350a:	429c      	cmp	r4, r3
 800350c:	bf08      	it	eq
 800350e:	68fc      	ldreq	r4, [r7, #12]
 8003510:	e78e      	b.n	8003430 <setvbuf+0x24>
 8003512:	2e00      	cmp	r6, #0
 8003514:	d0cd      	beq.n	80034b2 <setvbuf+0xa6>
 8003516:	69bb      	ldr	r3, [r7, #24]
 8003518:	b913      	cbnz	r3, 8003520 <setvbuf+0x114>
 800351a:	4638      	mov	r0, r7
 800351c:	f7ff fce8 	bl	8002ef0 <__sinit>
 8003520:	f1b8 0f01 	cmp.w	r8, #1
 8003524:	bf08      	it	eq
 8003526:	89a3      	ldrheq	r3, [r4, #12]
 8003528:	e9c4 6504 	strd	r6, r5, [r4, #16]
 800352c:	bf04      	itt	eq
 800352e:	f043 0301 	orreq.w	r3, r3, #1
 8003532:	81a3      	strheq	r3, [r4, #12]
 8003534:	89a2      	ldrh	r2, [r4, #12]
 8003536:	6026      	str	r6, [r4, #0]
 8003538:	f012 0308 	ands.w	r3, r2, #8
 800353c:	d01c      	beq.n	8003578 <setvbuf+0x16c>
 800353e:	07d3      	lsls	r3, r2, #31
 8003540:	bf41      	itttt	mi
 8003542:	2300      	movmi	r3, #0
 8003544:	426d      	negmi	r5, r5
 8003546:	60a3      	strmi	r3, [r4, #8]
 8003548:	61a5      	strmi	r5, [r4, #24]
 800354a:	bf58      	it	pl
 800354c:	60a5      	strpl	r5, [r4, #8]
 800354e:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8003550:	f015 0501 	ands.w	r5, r5, #1
 8003554:	d115      	bne.n	8003582 <setvbuf+0x176>
 8003556:	f412 7f00 	tst.w	r2, #512	; 0x200
 800355a:	e7c8      	b.n	80034ee <setvbuf+0xe2>
 800355c:	4648      	mov	r0, r9
 800355e:	f000 fa2d 	bl	80039bc <malloc>
 8003562:	4606      	mov	r6, r0
 8003564:	2800      	cmp	r0, #0
 8003566:	d0ae      	beq.n	80034c6 <setvbuf+0xba>
 8003568:	464d      	mov	r5, r9
 800356a:	89a3      	ldrh	r3, [r4, #12]
 800356c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003570:	81a3      	strh	r3, [r4, #12]
 8003572:	e7d0      	b.n	8003516 <setvbuf+0x10a>
 8003574:	2500      	movs	r5, #0
 8003576:	e7a8      	b.n	80034ca <setvbuf+0xbe>
 8003578:	60a3      	str	r3, [r4, #8]
 800357a:	e7e8      	b.n	800354e <setvbuf+0x142>
 800357c:	f04f 35ff 	mov.w	r5, #4294967295
 8003580:	e7b9      	b.n	80034f6 <setvbuf+0xea>
 8003582:	2500      	movs	r5, #0
 8003584:	e7b7      	b.n	80034f6 <setvbuf+0xea>
 8003586:	bf00      	nop
 8003588:	2000000c 	.word	0x2000000c
 800358c:	0800562c 	.word	0x0800562c
 8003590:	0800564c 	.word	0x0800564c
 8003594:	0800560c 	.word	0x0800560c

08003598 <siprintf>:
 8003598:	b40e      	push	{r1, r2, r3}
 800359a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800359e:	b500      	push	{lr}
 80035a0:	b09c      	sub	sp, #112	; 0x70
 80035a2:	ab1d      	add	r3, sp, #116	; 0x74
 80035a4:	9002      	str	r0, [sp, #8]
 80035a6:	9006      	str	r0, [sp, #24]
 80035a8:	9107      	str	r1, [sp, #28]
 80035aa:	9104      	str	r1, [sp, #16]
 80035ac:	4808      	ldr	r0, [pc, #32]	; (80035d0 <siprintf+0x38>)
 80035ae:	4909      	ldr	r1, [pc, #36]	; (80035d4 <siprintf+0x3c>)
 80035b0:	f853 2b04 	ldr.w	r2, [r3], #4
 80035b4:	9105      	str	r1, [sp, #20]
 80035b6:	6800      	ldr	r0, [r0, #0]
 80035b8:	a902      	add	r1, sp, #8
 80035ba:	9301      	str	r3, [sp, #4]
 80035bc:	f000 fa6e 	bl	8003a9c <_svfiprintf_r>
 80035c0:	2200      	movs	r2, #0
 80035c2:	9b02      	ldr	r3, [sp, #8]
 80035c4:	701a      	strb	r2, [r3, #0]
 80035c6:	b01c      	add	sp, #112	; 0x70
 80035c8:	f85d eb04 	ldr.w	lr, [sp], #4
 80035cc:	b003      	add	sp, #12
 80035ce:	4770      	bx	lr
 80035d0:	2000000c 	.word	0x2000000c
 80035d4:	ffff0208 	.word	0xffff0208

080035d8 <__sread>:
 80035d8:	b510      	push	{r4, lr}
 80035da:	460c      	mov	r4, r1
 80035dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80035e0:	f001 f96a 	bl	80048b8 <_read_r>
 80035e4:	2800      	cmp	r0, #0
 80035e6:	bfab      	itete	ge
 80035e8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80035ea:	89a3      	ldrhlt	r3, [r4, #12]
 80035ec:	181b      	addge	r3, r3, r0
 80035ee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80035f2:	bfac      	ite	ge
 80035f4:	6563      	strge	r3, [r4, #84]	; 0x54
 80035f6:	81a3      	strhlt	r3, [r4, #12]
 80035f8:	bd10      	pop	{r4, pc}

080035fa <__swrite>:
 80035fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80035fe:	461f      	mov	r7, r3
 8003600:	898b      	ldrh	r3, [r1, #12]
 8003602:	4605      	mov	r5, r0
 8003604:	05db      	lsls	r3, r3, #23
 8003606:	460c      	mov	r4, r1
 8003608:	4616      	mov	r6, r2
 800360a:	d505      	bpl.n	8003618 <__swrite+0x1e>
 800360c:	2302      	movs	r3, #2
 800360e:	2200      	movs	r2, #0
 8003610:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003614:	f000 f95a 	bl	80038cc <_lseek_r>
 8003618:	89a3      	ldrh	r3, [r4, #12]
 800361a:	4632      	mov	r2, r6
 800361c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003620:	81a3      	strh	r3, [r4, #12]
 8003622:	4628      	mov	r0, r5
 8003624:	463b      	mov	r3, r7
 8003626:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800362a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800362e:	f000 b87d 	b.w	800372c <_write_r>

08003632 <__sseek>:
 8003632:	b510      	push	{r4, lr}
 8003634:	460c      	mov	r4, r1
 8003636:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800363a:	f000 f947 	bl	80038cc <_lseek_r>
 800363e:	1c43      	adds	r3, r0, #1
 8003640:	89a3      	ldrh	r3, [r4, #12]
 8003642:	bf15      	itete	ne
 8003644:	6560      	strne	r0, [r4, #84]	; 0x54
 8003646:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800364a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800364e:	81a3      	strheq	r3, [r4, #12]
 8003650:	bf18      	it	ne
 8003652:	81a3      	strhne	r3, [r4, #12]
 8003654:	bd10      	pop	{r4, pc}

08003656 <__sclose>:
 8003656:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800365a:	f000 b8e7 	b.w	800382c <_close_r>

0800365e <strncmp>:
 800365e:	4603      	mov	r3, r0
 8003660:	b510      	push	{r4, lr}
 8003662:	b172      	cbz	r2, 8003682 <strncmp+0x24>
 8003664:	3901      	subs	r1, #1
 8003666:	1884      	adds	r4, r0, r2
 8003668:	f813 0b01 	ldrb.w	r0, [r3], #1
 800366c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8003670:	4290      	cmp	r0, r2
 8003672:	d101      	bne.n	8003678 <strncmp+0x1a>
 8003674:	42a3      	cmp	r3, r4
 8003676:	d101      	bne.n	800367c <strncmp+0x1e>
 8003678:	1a80      	subs	r0, r0, r2
 800367a:	bd10      	pop	{r4, pc}
 800367c:	2800      	cmp	r0, #0
 800367e:	d1f3      	bne.n	8003668 <strncmp+0xa>
 8003680:	e7fa      	b.n	8003678 <strncmp+0x1a>
 8003682:	4610      	mov	r0, r2
 8003684:	e7f9      	b.n	800367a <strncmp+0x1c>
	...

08003688 <__swbuf_r>:
 8003688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800368a:	460e      	mov	r6, r1
 800368c:	4614      	mov	r4, r2
 800368e:	4605      	mov	r5, r0
 8003690:	b118      	cbz	r0, 800369a <__swbuf_r+0x12>
 8003692:	6983      	ldr	r3, [r0, #24]
 8003694:	b90b      	cbnz	r3, 800369a <__swbuf_r+0x12>
 8003696:	f7ff fc2b 	bl	8002ef0 <__sinit>
 800369a:	4b21      	ldr	r3, [pc, #132]	; (8003720 <__swbuf_r+0x98>)
 800369c:	429c      	cmp	r4, r3
 800369e:	d12b      	bne.n	80036f8 <__swbuf_r+0x70>
 80036a0:	686c      	ldr	r4, [r5, #4]
 80036a2:	69a3      	ldr	r3, [r4, #24]
 80036a4:	60a3      	str	r3, [r4, #8]
 80036a6:	89a3      	ldrh	r3, [r4, #12]
 80036a8:	071a      	lsls	r2, r3, #28
 80036aa:	d52f      	bpl.n	800370c <__swbuf_r+0x84>
 80036ac:	6923      	ldr	r3, [r4, #16]
 80036ae:	b36b      	cbz	r3, 800370c <__swbuf_r+0x84>
 80036b0:	6923      	ldr	r3, [r4, #16]
 80036b2:	6820      	ldr	r0, [r4, #0]
 80036b4:	b2f6      	uxtb	r6, r6
 80036b6:	1ac0      	subs	r0, r0, r3
 80036b8:	6963      	ldr	r3, [r4, #20]
 80036ba:	4637      	mov	r7, r6
 80036bc:	4283      	cmp	r3, r0
 80036be:	dc04      	bgt.n	80036ca <__swbuf_r+0x42>
 80036c0:	4621      	mov	r1, r4
 80036c2:	4628      	mov	r0, r5
 80036c4:	f7ff fb6e 	bl	8002da4 <_fflush_r>
 80036c8:	bb30      	cbnz	r0, 8003718 <__swbuf_r+0x90>
 80036ca:	68a3      	ldr	r3, [r4, #8]
 80036cc:	3001      	adds	r0, #1
 80036ce:	3b01      	subs	r3, #1
 80036d0:	60a3      	str	r3, [r4, #8]
 80036d2:	6823      	ldr	r3, [r4, #0]
 80036d4:	1c5a      	adds	r2, r3, #1
 80036d6:	6022      	str	r2, [r4, #0]
 80036d8:	701e      	strb	r6, [r3, #0]
 80036da:	6963      	ldr	r3, [r4, #20]
 80036dc:	4283      	cmp	r3, r0
 80036de:	d004      	beq.n	80036ea <__swbuf_r+0x62>
 80036e0:	89a3      	ldrh	r3, [r4, #12]
 80036e2:	07db      	lsls	r3, r3, #31
 80036e4:	d506      	bpl.n	80036f4 <__swbuf_r+0x6c>
 80036e6:	2e0a      	cmp	r6, #10
 80036e8:	d104      	bne.n	80036f4 <__swbuf_r+0x6c>
 80036ea:	4621      	mov	r1, r4
 80036ec:	4628      	mov	r0, r5
 80036ee:	f7ff fb59 	bl	8002da4 <_fflush_r>
 80036f2:	b988      	cbnz	r0, 8003718 <__swbuf_r+0x90>
 80036f4:	4638      	mov	r0, r7
 80036f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80036f8:	4b0a      	ldr	r3, [pc, #40]	; (8003724 <__swbuf_r+0x9c>)
 80036fa:	429c      	cmp	r4, r3
 80036fc:	d101      	bne.n	8003702 <__swbuf_r+0x7a>
 80036fe:	68ac      	ldr	r4, [r5, #8]
 8003700:	e7cf      	b.n	80036a2 <__swbuf_r+0x1a>
 8003702:	4b09      	ldr	r3, [pc, #36]	; (8003728 <__swbuf_r+0xa0>)
 8003704:	429c      	cmp	r4, r3
 8003706:	bf08      	it	eq
 8003708:	68ec      	ldreq	r4, [r5, #12]
 800370a:	e7ca      	b.n	80036a2 <__swbuf_r+0x1a>
 800370c:	4621      	mov	r1, r4
 800370e:	4628      	mov	r0, r5
 8003710:	f000 f81e 	bl	8003750 <__swsetup_r>
 8003714:	2800      	cmp	r0, #0
 8003716:	d0cb      	beq.n	80036b0 <__swbuf_r+0x28>
 8003718:	f04f 37ff 	mov.w	r7, #4294967295
 800371c:	e7ea      	b.n	80036f4 <__swbuf_r+0x6c>
 800371e:	bf00      	nop
 8003720:	0800562c 	.word	0x0800562c
 8003724:	0800564c 	.word	0x0800564c
 8003728:	0800560c 	.word	0x0800560c

0800372c <_write_r>:
 800372c:	b538      	push	{r3, r4, r5, lr}
 800372e:	4604      	mov	r4, r0
 8003730:	4608      	mov	r0, r1
 8003732:	4611      	mov	r1, r2
 8003734:	2200      	movs	r2, #0
 8003736:	4d05      	ldr	r5, [pc, #20]	; (800374c <_write_r+0x20>)
 8003738:	602a      	str	r2, [r5, #0]
 800373a:	461a      	mov	r2, r3
 800373c:	f7fd fc6d 	bl	800101a <_write>
 8003740:	1c43      	adds	r3, r0, #1
 8003742:	d102      	bne.n	800374a <_write_r+0x1e>
 8003744:	682b      	ldr	r3, [r5, #0]
 8003746:	b103      	cbz	r3, 800374a <_write_r+0x1e>
 8003748:	6023      	str	r3, [r4, #0]
 800374a:	bd38      	pop	{r3, r4, r5, pc}
 800374c:	20000128 	.word	0x20000128

08003750 <__swsetup_r>:
 8003750:	4b32      	ldr	r3, [pc, #200]	; (800381c <__swsetup_r+0xcc>)
 8003752:	b570      	push	{r4, r5, r6, lr}
 8003754:	681d      	ldr	r5, [r3, #0]
 8003756:	4606      	mov	r6, r0
 8003758:	460c      	mov	r4, r1
 800375a:	b125      	cbz	r5, 8003766 <__swsetup_r+0x16>
 800375c:	69ab      	ldr	r3, [r5, #24]
 800375e:	b913      	cbnz	r3, 8003766 <__swsetup_r+0x16>
 8003760:	4628      	mov	r0, r5
 8003762:	f7ff fbc5 	bl	8002ef0 <__sinit>
 8003766:	4b2e      	ldr	r3, [pc, #184]	; (8003820 <__swsetup_r+0xd0>)
 8003768:	429c      	cmp	r4, r3
 800376a:	d10f      	bne.n	800378c <__swsetup_r+0x3c>
 800376c:	686c      	ldr	r4, [r5, #4]
 800376e:	89a3      	ldrh	r3, [r4, #12]
 8003770:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003774:	0719      	lsls	r1, r3, #28
 8003776:	d42c      	bmi.n	80037d2 <__swsetup_r+0x82>
 8003778:	06dd      	lsls	r5, r3, #27
 800377a:	d411      	bmi.n	80037a0 <__swsetup_r+0x50>
 800377c:	2309      	movs	r3, #9
 800377e:	6033      	str	r3, [r6, #0]
 8003780:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003784:	f04f 30ff 	mov.w	r0, #4294967295
 8003788:	81a3      	strh	r3, [r4, #12]
 800378a:	e03e      	b.n	800380a <__swsetup_r+0xba>
 800378c:	4b25      	ldr	r3, [pc, #148]	; (8003824 <__swsetup_r+0xd4>)
 800378e:	429c      	cmp	r4, r3
 8003790:	d101      	bne.n	8003796 <__swsetup_r+0x46>
 8003792:	68ac      	ldr	r4, [r5, #8]
 8003794:	e7eb      	b.n	800376e <__swsetup_r+0x1e>
 8003796:	4b24      	ldr	r3, [pc, #144]	; (8003828 <__swsetup_r+0xd8>)
 8003798:	429c      	cmp	r4, r3
 800379a:	bf08      	it	eq
 800379c:	68ec      	ldreq	r4, [r5, #12]
 800379e:	e7e6      	b.n	800376e <__swsetup_r+0x1e>
 80037a0:	0758      	lsls	r0, r3, #29
 80037a2:	d512      	bpl.n	80037ca <__swsetup_r+0x7a>
 80037a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80037a6:	b141      	cbz	r1, 80037ba <__swsetup_r+0x6a>
 80037a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80037ac:	4299      	cmp	r1, r3
 80037ae:	d002      	beq.n	80037b6 <__swsetup_r+0x66>
 80037b0:	4630      	mov	r0, r6
 80037b2:	f7ff fc99 	bl	80030e8 <_free_r>
 80037b6:	2300      	movs	r3, #0
 80037b8:	6363      	str	r3, [r4, #52]	; 0x34
 80037ba:	89a3      	ldrh	r3, [r4, #12]
 80037bc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80037c0:	81a3      	strh	r3, [r4, #12]
 80037c2:	2300      	movs	r3, #0
 80037c4:	6063      	str	r3, [r4, #4]
 80037c6:	6923      	ldr	r3, [r4, #16]
 80037c8:	6023      	str	r3, [r4, #0]
 80037ca:	89a3      	ldrh	r3, [r4, #12]
 80037cc:	f043 0308 	orr.w	r3, r3, #8
 80037d0:	81a3      	strh	r3, [r4, #12]
 80037d2:	6923      	ldr	r3, [r4, #16]
 80037d4:	b94b      	cbnz	r3, 80037ea <__swsetup_r+0x9a>
 80037d6:	89a3      	ldrh	r3, [r4, #12]
 80037d8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80037dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80037e0:	d003      	beq.n	80037ea <__swsetup_r+0x9a>
 80037e2:	4621      	mov	r1, r4
 80037e4:	4630      	mov	r0, r6
 80037e6:	f000 f8a9 	bl	800393c <__smakebuf_r>
 80037ea:	89a0      	ldrh	r0, [r4, #12]
 80037ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80037f0:	f010 0301 	ands.w	r3, r0, #1
 80037f4:	d00a      	beq.n	800380c <__swsetup_r+0xbc>
 80037f6:	2300      	movs	r3, #0
 80037f8:	60a3      	str	r3, [r4, #8]
 80037fa:	6963      	ldr	r3, [r4, #20]
 80037fc:	425b      	negs	r3, r3
 80037fe:	61a3      	str	r3, [r4, #24]
 8003800:	6923      	ldr	r3, [r4, #16]
 8003802:	b943      	cbnz	r3, 8003816 <__swsetup_r+0xc6>
 8003804:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003808:	d1ba      	bne.n	8003780 <__swsetup_r+0x30>
 800380a:	bd70      	pop	{r4, r5, r6, pc}
 800380c:	0781      	lsls	r1, r0, #30
 800380e:	bf58      	it	pl
 8003810:	6963      	ldrpl	r3, [r4, #20]
 8003812:	60a3      	str	r3, [r4, #8]
 8003814:	e7f4      	b.n	8003800 <__swsetup_r+0xb0>
 8003816:	2000      	movs	r0, #0
 8003818:	e7f7      	b.n	800380a <__swsetup_r+0xba>
 800381a:	bf00      	nop
 800381c:	2000000c 	.word	0x2000000c
 8003820:	0800562c 	.word	0x0800562c
 8003824:	0800564c 	.word	0x0800564c
 8003828:	0800560c 	.word	0x0800560c

0800382c <_close_r>:
 800382c:	b538      	push	{r3, r4, r5, lr}
 800382e:	2300      	movs	r3, #0
 8003830:	4d05      	ldr	r5, [pc, #20]	; (8003848 <_close_r+0x1c>)
 8003832:	4604      	mov	r4, r0
 8003834:	4608      	mov	r0, r1
 8003836:	602b      	str	r3, [r5, #0]
 8003838:	f7fd fc0b 	bl	8001052 <_close>
 800383c:	1c43      	adds	r3, r0, #1
 800383e:	d102      	bne.n	8003846 <_close_r+0x1a>
 8003840:	682b      	ldr	r3, [r5, #0]
 8003842:	b103      	cbz	r3, 8003846 <_close_r+0x1a>
 8003844:	6023      	str	r3, [r4, #0]
 8003846:	bd38      	pop	{r3, r4, r5, pc}
 8003848:	20000128 	.word	0x20000128

0800384c <_getc_r>:
 800384c:	b538      	push	{r3, r4, r5, lr}
 800384e:	460c      	mov	r4, r1
 8003850:	4605      	mov	r5, r0
 8003852:	b118      	cbz	r0, 800385c <_getc_r+0x10>
 8003854:	6983      	ldr	r3, [r0, #24]
 8003856:	b90b      	cbnz	r3, 800385c <_getc_r+0x10>
 8003858:	f7ff fb4a 	bl	8002ef0 <__sinit>
 800385c:	4b18      	ldr	r3, [pc, #96]	; (80038c0 <_getc_r+0x74>)
 800385e:	429c      	cmp	r4, r3
 8003860:	d11e      	bne.n	80038a0 <_getc_r+0x54>
 8003862:	686c      	ldr	r4, [r5, #4]
 8003864:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003866:	07d8      	lsls	r0, r3, #31
 8003868:	d405      	bmi.n	8003876 <_getc_r+0x2a>
 800386a:	89a3      	ldrh	r3, [r4, #12]
 800386c:	0599      	lsls	r1, r3, #22
 800386e:	d402      	bmi.n	8003876 <_getc_r+0x2a>
 8003870:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003872:	f7ff fc2e 	bl	80030d2 <__retarget_lock_acquire_recursive>
 8003876:	6863      	ldr	r3, [r4, #4]
 8003878:	3b01      	subs	r3, #1
 800387a:	2b00      	cmp	r3, #0
 800387c:	6063      	str	r3, [r4, #4]
 800387e:	da19      	bge.n	80038b4 <_getc_r+0x68>
 8003880:	4628      	mov	r0, r5
 8003882:	4621      	mov	r1, r4
 8003884:	f001 f8c0 	bl	8004a08 <__srget_r>
 8003888:	4605      	mov	r5, r0
 800388a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800388c:	07da      	lsls	r2, r3, #31
 800388e:	d405      	bmi.n	800389c <_getc_r+0x50>
 8003890:	89a3      	ldrh	r3, [r4, #12]
 8003892:	059b      	lsls	r3, r3, #22
 8003894:	d402      	bmi.n	800389c <_getc_r+0x50>
 8003896:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003898:	f7ff fc1c 	bl	80030d4 <__retarget_lock_release_recursive>
 800389c:	4628      	mov	r0, r5
 800389e:	bd38      	pop	{r3, r4, r5, pc}
 80038a0:	4b08      	ldr	r3, [pc, #32]	; (80038c4 <_getc_r+0x78>)
 80038a2:	429c      	cmp	r4, r3
 80038a4:	d101      	bne.n	80038aa <_getc_r+0x5e>
 80038a6:	68ac      	ldr	r4, [r5, #8]
 80038a8:	e7dc      	b.n	8003864 <_getc_r+0x18>
 80038aa:	4b07      	ldr	r3, [pc, #28]	; (80038c8 <_getc_r+0x7c>)
 80038ac:	429c      	cmp	r4, r3
 80038ae:	bf08      	it	eq
 80038b0:	68ec      	ldreq	r4, [r5, #12]
 80038b2:	e7d7      	b.n	8003864 <_getc_r+0x18>
 80038b4:	6823      	ldr	r3, [r4, #0]
 80038b6:	1c5a      	adds	r2, r3, #1
 80038b8:	6022      	str	r2, [r4, #0]
 80038ba:	781d      	ldrb	r5, [r3, #0]
 80038bc:	e7e5      	b.n	800388a <_getc_r+0x3e>
 80038be:	bf00      	nop
 80038c0:	0800562c 	.word	0x0800562c
 80038c4:	0800564c 	.word	0x0800564c
 80038c8:	0800560c 	.word	0x0800560c

080038cc <_lseek_r>:
 80038cc:	b538      	push	{r3, r4, r5, lr}
 80038ce:	4604      	mov	r4, r0
 80038d0:	4608      	mov	r0, r1
 80038d2:	4611      	mov	r1, r2
 80038d4:	2200      	movs	r2, #0
 80038d6:	4d05      	ldr	r5, [pc, #20]	; (80038ec <_lseek_r+0x20>)
 80038d8:	602a      	str	r2, [r5, #0]
 80038da:	461a      	mov	r2, r3
 80038dc:	f7fd fbdd 	bl	800109a <_lseek>
 80038e0:	1c43      	adds	r3, r0, #1
 80038e2:	d102      	bne.n	80038ea <_lseek_r+0x1e>
 80038e4:	682b      	ldr	r3, [r5, #0]
 80038e6:	b103      	cbz	r3, 80038ea <_lseek_r+0x1e>
 80038e8:	6023      	str	r3, [r4, #0]
 80038ea:	bd38      	pop	{r3, r4, r5, pc}
 80038ec:	20000128 	.word	0x20000128

080038f0 <__swhatbuf_r>:
 80038f0:	b570      	push	{r4, r5, r6, lr}
 80038f2:	460e      	mov	r6, r1
 80038f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80038f8:	4614      	mov	r4, r2
 80038fa:	2900      	cmp	r1, #0
 80038fc:	461d      	mov	r5, r3
 80038fe:	b096      	sub	sp, #88	; 0x58
 8003900:	da08      	bge.n	8003914 <__swhatbuf_r+0x24>
 8003902:	2200      	movs	r2, #0
 8003904:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003908:	602a      	str	r2, [r5, #0]
 800390a:	061a      	lsls	r2, r3, #24
 800390c:	d410      	bmi.n	8003930 <__swhatbuf_r+0x40>
 800390e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003912:	e00e      	b.n	8003932 <__swhatbuf_r+0x42>
 8003914:	466a      	mov	r2, sp
 8003916:	f001 fa9d 	bl	8004e54 <_fstat_r>
 800391a:	2800      	cmp	r0, #0
 800391c:	dbf1      	blt.n	8003902 <__swhatbuf_r+0x12>
 800391e:	9a01      	ldr	r2, [sp, #4]
 8003920:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003924:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003928:	425a      	negs	r2, r3
 800392a:	415a      	adcs	r2, r3
 800392c:	602a      	str	r2, [r5, #0]
 800392e:	e7ee      	b.n	800390e <__swhatbuf_r+0x1e>
 8003930:	2340      	movs	r3, #64	; 0x40
 8003932:	2000      	movs	r0, #0
 8003934:	6023      	str	r3, [r4, #0]
 8003936:	b016      	add	sp, #88	; 0x58
 8003938:	bd70      	pop	{r4, r5, r6, pc}
	...

0800393c <__smakebuf_r>:
 800393c:	898b      	ldrh	r3, [r1, #12]
 800393e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003940:	079d      	lsls	r5, r3, #30
 8003942:	4606      	mov	r6, r0
 8003944:	460c      	mov	r4, r1
 8003946:	d507      	bpl.n	8003958 <__smakebuf_r+0x1c>
 8003948:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800394c:	6023      	str	r3, [r4, #0]
 800394e:	6123      	str	r3, [r4, #16]
 8003950:	2301      	movs	r3, #1
 8003952:	6163      	str	r3, [r4, #20]
 8003954:	b002      	add	sp, #8
 8003956:	bd70      	pop	{r4, r5, r6, pc}
 8003958:	466a      	mov	r2, sp
 800395a:	ab01      	add	r3, sp, #4
 800395c:	f7ff ffc8 	bl	80038f0 <__swhatbuf_r>
 8003960:	9900      	ldr	r1, [sp, #0]
 8003962:	4605      	mov	r5, r0
 8003964:	4630      	mov	r0, r6
 8003966:	f7ff fc27 	bl	80031b8 <_malloc_r>
 800396a:	b948      	cbnz	r0, 8003980 <__smakebuf_r+0x44>
 800396c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003970:	059a      	lsls	r2, r3, #22
 8003972:	d4ef      	bmi.n	8003954 <__smakebuf_r+0x18>
 8003974:	f023 0303 	bic.w	r3, r3, #3
 8003978:	f043 0302 	orr.w	r3, r3, #2
 800397c:	81a3      	strh	r3, [r4, #12]
 800397e:	e7e3      	b.n	8003948 <__smakebuf_r+0xc>
 8003980:	4b0d      	ldr	r3, [pc, #52]	; (80039b8 <__smakebuf_r+0x7c>)
 8003982:	62b3      	str	r3, [r6, #40]	; 0x28
 8003984:	89a3      	ldrh	r3, [r4, #12]
 8003986:	6020      	str	r0, [r4, #0]
 8003988:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800398c:	81a3      	strh	r3, [r4, #12]
 800398e:	9b00      	ldr	r3, [sp, #0]
 8003990:	6120      	str	r0, [r4, #16]
 8003992:	6163      	str	r3, [r4, #20]
 8003994:	9b01      	ldr	r3, [sp, #4]
 8003996:	b15b      	cbz	r3, 80039b0 <__smakebuf_r+0x74>
 8003998:	4630      	mov	r0, r6
 800399a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800399e:	f001 fa6b 	bl	8004e78 <_isatty_r>
 80039a2:	b128      	cbz	r0, 80039b0 <__smakebuf_r+0x74>
 80039a4:	89a3      	ldrh	r3, [r4, #12]
 80039a6:	f023 0303 	bic.w	r3, r3, #3
 80039aa:	f043 0301 	orr.w	r3, r3, #1
 80039ae:	81a3      	strh	r3, [r4, #12]
 80039b0:	89a0      	ldrh	r0, [r4, #12]
 80039b2:	4305      	orrs	r5, r0
 80039b4:	81a5      	strh	r5, [r4, #12]
 80039b6:	e7cd      	b.n	8003954 <__smakebuf_r+0x18>
 80039b8:	08002e89 	.word	0x08002e89

080039bc <malloc>:
 80039bc:	4b02      	ldr	r3, [pc, #8]	; (80039c8 <malloc+0xc>)
 80039be:	4601      	mov	r1, r0
 80039c0:	6818      	ldr	r0, [r3, #0]
 80039c2:	f7ff bbf9 	b.w	80031b8 <_malloc_r>
 80039c6:	bf00      	nop
 80039c8:	2000000c 	.word	0x2000000c

080039cc <__malloc_lock>:
 80039cc:	4801      	ldr	r0, [pc, #4]	; (80039d4 <__malloc_lock+0x8>)
 80039ce:	f7ff bb80 	b.w	80030d2 <__retarget_lock_acquire_recursive>
 80039d2:	bf00      	nop
 80039d4:	2000011c 	.word	0x2000011c

080039d8 <__malloc_unlock>:
 80039d8:	4801      	ldr	r0, [pc, #4]	; (80039e0 <__malloc_unlock+0x8>)
 80039da:	f7ff bb7b 	b.w	80030d4 <__retarget_lock_release_recursive>
 80039de:	bf00      	nop
 80039e0:	2000011c 	.word	0x2000011c

080039e4 <__ssputs_r>:
 80039e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039e8:	688e      	ldr	r6, [r1, #8]
 80039ea:	4682      	mov	sl, r0
 80039ec:	429e      	cmp	r6, r3
 80039ee:	460c      	mov	r4, r1
 80039f0:	4690      	mov	r8, r2
 80039f2:	461f      	mov	r7, r3
 80039f4:	d838      	bhi.n	8003a68 <__ssputs_r+0x84>
 80039f6:	898a      	ldrh	r2, [r1, #12]
 80039f8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80039fc:	d032      	beq.n	8003a64 <__ssputs_r+0x80>
 80039fe:	6825      	ldr	r5, [r4, #0]
 8003a00:	6909      	ldr	r1, [r1, #16]
 8003a02:	3301      	adds	r3, #1
 8003a04:	eba5 0901 	sub.w	r9, r5, r1
 8003a08:	6965      	ldr	r5, [r4, #20]
 8003a0a:	444b      	add	r3, r9
 8003a0c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003a10:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003a14:	106d      	asrs	r5, r5, #1
 8003a16:	429d      	cmp	r5, r3
 8003a18:	bf38      	it	cc
 8003a1a:	461d      	movcc	r5, r3
 8003a1c:	0553      	lsls	r3, r2, #21
 8003a1e:	d531      	bpl.n	8003a84 <__ssputs_r+0xa0>
 8003a20:	4629      	mov	r1, r5
 8003a22:	f7ff fbc9 	bl	80031b8 <_malloc_r>
 8003a26:	4606      	mov	r6, r0
 8003a28:	b950      	cbnz	r0, 8003a40 <__ssputs_r+0x5c>
 8003a2a:	230c      	movs	r3, #12
 8003a2c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a30:	f8ca 3000 	str.w	r3, [sl]
 8003a34:	89a3      	ldrh	r3, [r4, #12]
 8003a36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003a3a:	81a3      	strh	r3, [r4, #12]
 8003a3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a40:	464a      	mov	r2, r9
 8003a42:	6921      	ldr	r1, [r4, #16]
 8003a44:	f001 fa36 	bl	8004eb4 <memcpy>
 8003a48:	89a3      	ldrh	r3, [r4, #12]
 8003a4a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003a4e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003a52:	81a3      	strh	r3, [r4, #12]
 8003a54:	6126      	str	r6, [r4, #16]
 8003a56:	444e      	add	r6, r9
 8003a58:	6026      	str	r6, [r4, #0]
 8003a5a:	463e      	mov	r6, r7
 8003a5c:	6165      	str	r5, [r4, #20]
 8003a5e:	eba5 0509 	sub.w	r5, r5, r9
 8003a62:	60a5      	str	r5, [r4, #8]
 8003a64:	42be      	cmp	r6, r7
 8003a66:	d900      	bls.n	8003a6a <__ssputs_r+0x86>
 8003a68:	463e      	mov	r6, r7
 8003a6a:	4632      	mov	r2, r6
 8003a6c:	4641      	mov	r1, r8
 8003a6e:	6820      	ldr	r0, [r4, #0]
 8003a70:	f001 fa2e 	bl	8004ed0 <memmove>
 8003a74:	68a3      	ldr	r3, [r4, #8]
 8003a76:	2000      	movs	r0, #0
 8003a78:	1b9b      	subs	r3, r3, r6
 8003a7a:	60a3      	str	r3, [r4, #8]
 8003a7c:	6823      	ldr	r3, [r4, #0]
 8003a7e:	4433      	add	r3, r6
 8003a80:	6023      	str	r3, [r4, #0]
 8003a82:	e7db      	b.n	8003a3c <__ssputs_r+0x58>
 8003a84:	462a      	mov	r2, r5
 8003a86:	f001 fa3d 	bl	8004f04 <_realloc_r>
 8003a8a:	4606      	mov	r6, r0
 8003a8c:	2800      	cmp	r0, #0
 8003a8e:	d1e1      	bne.n	8003a54 <__ssputs_r+0x70>
 8003a90:	4650      	mov	r0, sl
 8003a92:	6921      	ldr	r1, [r4, #16]
 8003a94:	f7ff fb28 	bl	80030e8 <_free_r>
 8003a98:	e7c7      	b.n	8003a2a <__ssputs_r+0x46>
	...

08003a9c <_svfiprintf_r>:
 8003a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003aa0:	4698      	mov	r8, r3
 8003aa2:	898b      	ldrh	r3, [r1, #12]
 8003aa4:	4607      	mov	r7, r0
 8003aa6:	061b      	lsls	r3, r3, #24
 8003aa8:	460d      	mov	r5, r1
 8003aaa:	4614      	mov	r4, r2
 8003aac:	b09d      	sub	sp, #116	; 0x74
 8003aae:	d50e      	bpl.n	8003ace <_svfiprintf_r+0x32>
 8003ab0:	690b      	ldr	r3, [r1, #16]
 8003ab2:	b963      	cbnz	r3, 8003ace <_svfiprintf_r+0x32>
 8003ab4:	2140      	movs	r1, #64	; 0x40
 8003ab6:	f7ff fb7f 	bl	80031b8 <_malloc_r>
 8003aba:	6028      	str	r0, [r5, #0]
 8003abc:	6128      	str	r0, [r5, #16]
 8003abe:	b920      	cbnz	r0, 8003aca <_svfiprintf_r+0x2e>
 8003ac0:	230c      	movs	r3, #12
 8003ac2:	603b      	str	r3, [r7, #0]
 8003ac4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ac8:	e0d1      	b.n	8003c6e <_svfiprintf_r+0x1d2>
 8003aca:	2340      	movs	r3, #64	; 0x40
 8003acc:	616b      	str	r3, [r5, #20]
 8003ace:	2300      	movs	r3, #0
 8003ad0:	9309      	str	r3, [sp, #36]	; 0x24
 8003ad2:	2320      	movs	r3, #32
 8003ad4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003ad8:	2330      	movs	r3, #48	; 0x30
 8003ada:	f04f 0901 	mov.w	r9, #1
 8003ade:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ae2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003c88 <_svfiprintf_r+0x1ec>
 8003ae6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003aea:	4623      	mov	r3, r4
 8003aec:	469a      	mov	sl, r3
 8003aee:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003af2:	b10a      	cbz	r2, 8003af8 <_svfiprintf_r+0x5c>
 8003af4:	2a25      	cmp	r2, #37	; 0x25
 8003af6:	d1f9      	bne.n	8003aec <_svfiprintf_r+0x50>
 8003af8:	ebba 0b04 	subs.w	fp, sl, r4
 8003afc:	d00b      	beq.n	8003b16 <_svfiprintf_r+0x7a>
 8003afe:	465b      	mov	r3, fp
 8003b00:	4622      	mov	r2, r4
 8003b02:	4629      	mov	r1, r5
 8003b04:	4638      	mov	r0, r7
 8003b06:	f7ff ff6d 	bl	80039e4 <__ssputs_r>
 8003b0a:	3001      	adds	r0, #1
 8003b0c:	f000 80aa 	beq.w	8003c64 <_svfiprintf_r+0x1c8>
 8003b10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b12:	445a      	add	r2, fp
 8003b14:	9209      	str	r2, [sp, #36]	; 0x24
 8003b16:	f89a 3000 	ldrb.w	r3, [sl]
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	f000 80a2 	beq.w	8003c64 <_svfiprintf_r+0x1c8>
 8003b20:	2300      	movs	r3, #0
 8003b22:	f04f 32ff 	mov.w	r2, #4294967295
 8003b26:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003b2a:	f10a 0a01 	add.w	sl, sl, #1
 8003b2e:	9304      	str	r3, [sp, #16]
 8003b30:	9307      	str	r3, [sp, #28]
 8003b32:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003b36:	931a      	str	r3, [sp, #104]	; 0x68
 8003b38:	4654      	mov	r4, sl
 8003b3a:	2205      	movs	r2, #5
 8003b3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b40:	4851      	ldr	r0, [pc, #324]	; (8003c88 <_svfiprintf_r+0x1ec>)
 8003b42:	f001 f9a9 	bl	8004e98 <memchr>
 8003b46:	9a04      	ldr	r2, [sp, #16]
 8003b48:	b9d8      	cbnz	r0, 8003b82 <_svfiprintf_r+0xe6>
 8003b4a:	06d0      	lsls	r0, r2, #27
 8003b4c:	bf44      	itt	mi
 8003b4e:	2320      	movmi	r3, #32
 8003b50:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003b54:	0711      	lsls	r1, r2, #28
 8003b56:	bf44      	itt	mi
 8003b58:	232b      	movmi	r3, #43	; 0x2b
 8003b5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003b5e:	f89a 3000 	ldrb.w	r3, [sl]
 8003b62:	2b2a      	cmp	r3, #42	; 0x2a
 8003b64:	d015      	beq.n	8003b92 <_svfiprintf_r+0xf6>
 8003b66:	4654      	mov	r4, sl
 8003b68:	2000      	movs	r0, #0
 8003b6a:	f04f 0c0a 	mov.w	ip, #10
 8003b6e:	9a07      	ldr	r2, [sp, #28]
 8003b70:	4621      	mov	r1, r4
 8003b72:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003b76:	3b30      	subs	r3, #48	; 0x30
 8003b78:	2b09      	cmp	r3, #9
 8003b7a:	d94e      	bls.n	8003c1a <_svfiprintf_r+0x17e>
 8003b7c:	b1b0      	cbz	r0, 8003bac <_svfiprintf_r+0x110>
 8003b7e:	9207      	str	r2, [sp, #28]
 8003b80:	e014      	b.n	8003bac <_svfiprintf_r+0x110>
 8003b82:	eba0 0308 	sub.w	r3, r0, r8
 8003b86:	fa09 f303 	lsl.w	r3, r9, r3
 8003b8a:	4313      	orrs	r3, r2
 8003b8c:	46a2      	mov	sl, r4
 8003b8e:	9304      	str	r3, [sp, #16]
 8003b90:	e7d2      	b.n	8003b38 <_svfiprintf_r+0x9c>
 8003b92:	9b03      	ldr	r3, [sp, #12]
 8003b94:	1d19      	adds	r1, r3, #4
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	9103      	str	r1, [sp, #12]
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	bfbb      	ittet	lt
 8003b9e:	425b      	neglt	r3, r3
 8003ba0:	f042 0202 	orrlt.w	r2, r2, #2
 8003ba4:	9307      	strge	r3, [sp, #28]
 8003ba6:	9307      	strlt	r3, [sp, #28]
 8003ba8:	bfb8      	it	lt
 8003baa:	9204      	strlt	r2, [sp, #16]
 8003bac:	7823      	ldrb	r3, [r4, #0]
 8003bae:	2b2e      	cmp	r3, #46	; 0x2e
 8003bb0:	d10c      	bne.n	8003bcc <_svfiprintf_r+0x130>
 8003bb2:	7863      	ldrb	r3, [r4, #1]
 8003bb4:	2b2a      	cmp	r3, #42	; 0x2a
 8003bb6:	d135      	bne.n	8003c24 <_svfiprintf_r+0x188>
 8003bb8:	9b03      	ldr	r3, [sp, #12]
 8003bba:	3402      	adds	r4, #2
 8003bbc:	1d1a      	adds	r2, r3, #4
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	9203      	str	r2, [sp, #12]
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	bfb8      	it	lt
 8003bc6:	f04f 33ff 	movlt.w	r3, #4294967295
 8003bca:	9305      	str	r3, [sp, #20]
 8003bcc:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8003c8c <_svfiprintf_r+0x1f0>
 8003bd0:	2203      	movs	r2, #3
 8003bd2:	4650      	mov	r0, sl
 8003bd4:	7821      	ldrb	r1, [r4, #0]
 8003bd6:	f001 f95f 	bl	8004e98 <memchr>
 8003bda:	b140      	cbz	r0, 8003bee <_svfiprintf_r+0x152>
 8003bdc:	2340      	movs	r3, #64	; 0x40
 8003bde:	eba0 000a 	sub.w	r0, r0, sl
 8003be2:	fa03 f000 	lsl.w	r0, r3, r0
 8003be6:	9b04      	ldr	r3, [sp, #16]
 8003be8:	3401      	adds	r4, #1
 8003bea:	4303      	orrs	r3, r0
 8003bec:	9304      	str	r3, [sp, #16]
 8003bee:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bf2:	2206      	movs	r2, #6
 8003bf4:	4826      	ldr	r0, [pc, #152]	; (8003c90 <_svfiprintf_r+0x1f4>)
 8003bf6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003bfa:	f001 f94d 	bl	8004e98 <memchr>
 8003bfe:	2800      	cmp	r0, #0
 8003c00:	d038      	beq.n	8003c74 <_svfiprintf_r+0x1d8>
 8003c02:	4b24      	ldr	r3, [pc, #144]	; (8003c94 <_svfiprintf_r+0x1f8>)
 8003c04:	bb1b      	cbnz	r3, 8003c4e <_svfiprintf_r+0x1b2>
 8003c06:	9b03      	ldr	r3, [sp, #12]
 8003c08:	3307      	adds	r3, #7
 8003c0a:	f023 0307 	bic.w	r3, r3, #7
 8003c0e:	3308      	adds	r3, #8
 8003c10:	9303      	str	r3, [sp, #12]
 8003c12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c14:	4433      	add	r3, r6
 8003c16:	9309      	str	r3, [sp, #36]	; 0x24
 8003c18:	e767      	b.n	8003aea <_svfiprintf_r+0x4e>
 8003c1a:	460c      	mov	r4, r1
 8003c1c:	2001      	movs	r0, #1
 8003c1e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c22:	e7a5      	b.n	8003b70 <_svfiprintf_r+0xd4>
 8003c24:	2300      	movs	r3, #0
 8003c26:	f04f 0c0a 	mov.w	ip, #10
 8003c2a:	4619      	mov	r1, r3
 8003c2c:	3401      	adds	r4, #1
 8003c2e:	9305      	str	r3, [sp, #20]
 8003c30:	4620      	mov	r0, r4
 8003c32:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003c36:	3a30      	subs	r2, #48	; 0x30
 8003c38:	2a09      	cmp	r2, #9
 8003c3a:	d903      	bls.n	8003c44 <_svfiprintf_r+0x1a8>
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d0c5      	beq.n	8003bcc <_svfiprintf_r+0x130>
 8003c40:	9105      	str	r1, [sp, #20]
 8003c42:	e7c3      	b.n	8003bcc <_svfiprintf_r+0x130>
 8003c44:	4604      	mov	r4, r0
 8003c46:	2301      	movs	r3, #1
 8003c48:	fb0c 2101 	mla	r1, ip, r1, r2
 8003c4c:	e7f0      	b.n	8003c30 <_svfiprintf_r+0x194>
 8003c4e:	ab03      	add	r3, sp, #12
 8003c50:	9300      	str	r3, [sp, #0]
 8003c52:	462a      	mov	r2, r5
 8003c54:	4638      	mov	r0, r7
 8003c56:	4b10      	ldr	r3, [pc, #64]	; (8003c98 <_svfiprintf_r+0x1fc>)
 8003c58:	a904      	add	r1, sp, #16
 8003c5a:	f3af 8000 	nop.w
 8003c5e:	1c42      	adds	r2, r0, #1
 8003c60:	4606      	mov	r6, r0
 8003c62:	d1d6      	bne.n	8003c12 <_svfiprintf_r+0x176>
 8003c64:	89ab      	ldrh	r3, [r5, #12]
 8003c66:	065b      	lsls	r3, r3, #25
 8003c68:	f53f af2c 	bmi.w	8003ac4 <_svfiprintf_r+0x28>
 8003c6c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003c6e:	b01d      	add	sp, #116	; 0x74
 8003c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c74:	ab03      	add	r3, sp, #12
 8003c76:	9300      	str	r3, [sp, #0]
 8003c78:	462a      	mov	r2, r5
 8003c7a:	4638      	mov	r0, r7
 8003c7c:	4b06      	ldr	r3, [pc, #24]	; (8003c98 <_svfiprintf_r+0x1fc>)
 8003c7e:	a904      	add	r1, sp, #16
 8003c80:	f000 f9d4 	bl	800402c <_printf_i>
 8003c84:	e7eb      	b.n	8003c5e <_svfiprintf_r+0x1c2>
 8003c86:	bf00      	nop
 8003c88:	08005670 	.word	0x08005670
 8003c8c:	08005676 	.word	0x08005676
 8003c90:	0800567a 	.word	0x0800567a
 8003c94:	00000000 	.word	0x00000000
 8003c98:	080039e5 	.word	0x080039e5

08003c9c <__sfputc_r>:
 8003c9c:	6893      	ldr	r3, [r2, #8]
 8003c9e:	b410      	push	{r4}
 8003ca0:	3b01      	subs	r3, #1
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	6093      	str	r3, [r2, #8]
 8003ca6:	da07      	bge.n	8003cb8 <__sfputc_r+0x1c>
 8003ca8:	6994      	ldr	r4, [r2, #24]
 8003caa:	42a3      	cmp	r3, r4
 8003cac:	db01      	blt.n	8003cb2 <__sfputc_r+0x16>
 8003cae:	290a      	cmp	r1, #10
 8003cb0:	d102      	bne.n	8003cb8 <__sfputc_r+0x1c>
 8003cb2:	bc10      	pop	{r4}
 8003cb4:	f7ff bce8 	b.w	8003688 <__swbuf_r>
 8003cb8:	6813      	ldr	r3, [r2, #0]
 8003cba:	1c58      	adds	r0, r3, #1
 8003cbc:	6010      	str	r0, [r2, #0]
 8003cbe:	7019      	strb	r1, [r3, #0]
 8003cc0:	4608      	mov	r0, r1
 8003cc2:	bc10      	pop	{r4}
 8003cc4:	4770      	bx	lr

08003cc6 <__sfputs_r>:
 8003cc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cc8:	4606      	mov	r6, r0
 8003cca:	460f      	mov	r7, r1
 8003ccc:	4614      	mov	r4, r2
 8003cce:	18d5      	adds	r5, r2, r3
 8003cd0:	42ac      	cmp	r4, r5
 8003cd2:	d101      	bne.n	8003cd8 <__sfputs_r+0x12>
 8003cd4:	2000      	movs	r0, #0
 8003cd6:	e007      	b.n	8003ce8 <__sfputs_r+0x22>
 8003cd8:	463a      	mov	r2, r7
 8003cda:	4630      	mov	r0, r6
 8003cdc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ce0:	f7ff ffdc 	bl	8003c9c <__sfputc_r>
 8003ce4:	1c43      	adds	r3, r0, #1
 8003ce6:	d1f3      	bne.n	8003cd0 <__sfputs_r+0xa>
 8003ce8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003cec <_vfiprintf_r>:
 8003cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cf0:	460d      	mov	r5, r1
 8003cf2:	4614      	mov	r4, r2
 8003cf4:	4698      	mov	r8, r3
 8003cf6:	4606      	mov	r6, r0
 8003cf8:	b09d      	sub	sp, #116	; 0x74
 8003cfa:	b118      	cbz	r0, 8003d04 <_vfiprintf_r+0x18>
 8003cfc:	6983      	ldr	r3, [r0, #24]
 8003cfe:	b90b      	cbnz	r3, 8003d04 <_vfiprintf_r+0x18>
 8003d00:	f7ff f8f6 	bl	8002ef0 <__sinit>
 8003d04:	4b89      	ldr	r3, [pc, #548]	; (8003f2c <_vfiprintf_r+0x240>)
 8003d06:	429d      	cmp	r5, r3
 8003d08:	d11b      	bne.n	8003d42 <_vfiprintf_r+0x56>
 8003d0a:	6875      	ldr	r5, [r6, #4]
 8003d0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003d0e:	07d9      	lsls	r1, r3, #31
 8003d10:	d405      	bmi.n	8003d1e <_vfiprintf_r+0x32>
 8003d12:	89ab      	ldrh	r3, [r5, #12]
 8003d14:	059a      	lsls	r2, r3, #22
 8003d16:	d402      	bmi.n	8003d1e <_vfiprintf_r+0x32>
 8003d18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003d1a:	f7ff f9da 	bl	80030d2 <__retarget_lock_acquire_recursive>
 8003d1e:	89ab      	ldrh	r3, [r5, #12]
 8003d20:	071b      	lsls	r3, r3, #28
 8003d22:	d501      	bpl.n	8003d28 <_vfiprintf_r+0x3c>
 8003d24:	692b      	ldr	r3, [r5, #16]
 8003d26:	b9eb      	cbnz	r3, 8003d64 <_vfiprintf_r+0x78>
 8003d28:	4629      	mov	r1, r5
 8003d2a:	4630      	mov	r0, r6
 8003d2c:	f7ff fd10 	bl	8003750 <__swsetup_r>
 8003d30:	b1c0      	cbz	r0, 8003d64 <_vfiprintf_r+0x78>
 8003d32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003d34:	07dc      	lsls	r4, r3, #31
 8003d36:	d50e      	bpl.n	8003d56 <_vfiprintf_r+0x6a>
 8003d38:	f04f 30ff 	mov.w	r0, #4294967295
 8003d3c:	b01d      	add	sp, #116	; 0x74
 8003d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d42:	4b7b      	ldr	r3, [pc, #492]	; (8003f30 <_vfiprintf_r+0x244>)
 8003d44:	429d      	cmp	r5, r3
 8003d46:	d101      	bne.n	8003d4c <_vfiprintf_r+0x60>
 8003d48:	68b5      	ldr	r5, [r6, #8]
 8003d4a:	e7df      	b.n	8003d0c <_vfiprintf_r+0x20>
 8003d4c:	4b79      	ldr	r3, [pc, #484]	; (8003f34 <_vfiprintf_r+0x248>)
 8003d4e:	429d      	cmp	r5, r3
 8003d50:	bf08      	it	eq
 8003d52:	68f5      	ldreq	r5, [r6, #12]
 8003d54:	e7da      	b.n	8003d0c <_vfiprintf_r+0x20>
 8003d56:	89ab      	ldrh	r3, [r5, #12]
 8003d58:	0598      	lsls	r0, r3, #22
 8003d5a:	d4ed      	bmi.n	8003d38 <_vfiprintf_r+0x4c>
 8003d5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003d5e:	f7ff f9b9 	bl	80030d4 <__retarget_lock_release_recursive>
 8003d62:	e7e9      	b.n	8003d38 <_vfiprintf_r+0x4c>
 8003d64:	2300      	movs	r3, #0
 8003d66:	9309      	str	r3, [sp, #36]	; 0x24
 8003d68:	2320      	movs	r3, #32
 8003d6a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003d6e:	2330      	movs	r3, #48	; 0x30
 8003d70:	f04f 0901 	mov.w	r9, #1
 8003d74:	f8cd 800c 	str.w	r8, [sp, #12]
 8003d78:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8003f38 <_vfiprintf_r+0x24c>
 8003d7c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003d80:	4623      	mov	r3, r4
 8003d82:	469a      	mov	sl, r3
 8003d84:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003d88:	b10a      	cbz	r2, 8003d8e <_vfiprintf_r+0xa2>
 8003d8a:	2a25      	cmp	r2, #37	; 0x25
 8003d8c:	d1f9      	bne.n	8003d82 <_vfiprintf_r+0x96>
 8003d8e:	ebba 0b04 	subs.w	fp, sl, r4
 8003d92:	d00b      	beq.n	8003dac <_vfiprintf_r+0xc0>
 8003d94:	465b      	mov	r3, fp
 8003d96:	4622      	mov	r2, r4
 8003d98:	4629      	mov	r1, r5
 8003d9a:	4630      	mov	r0, r6
 8003d9c:	f7ff ff93 	bl	8003cc6 <__sfputs_r>
 8003da0:	3001      	adds	r0, #1
 8003da2:	f000 80aa 	beq.w	8003efa <_vfiprintf_r+0x20e>
 8003da6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003da8:	445a      	add	r2, fp
 8003daa:	9209      	str	r2, [sp, #36]	; 0x24
 8003dac:	f89a 3000 	ldrb.w	r3, [sl]
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	f000 80a2 	beq.w	8003efa <_vfiprintf_r+0x20e>
 8003db6:	2300      	movs	r3, #0
 8003db8:	f04f 32ff 	mov.w	r2, #4294967295
 8003dbc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003dc0:	f10a 0a01 	add.w	sl, sl, #1
 8003dc4:	9304      	str	r3, [sp, #16]
 8003dc6:	9307      	str	r3, [sp, #28]
 8003dc8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003dcc:	931a      	str	r3, [sp, #104]	; 0x68
 8003dce:	4654      	mov	r4, sl
 8003dd0:	2205      	movs	r2, #5
 8003dd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003dd6:	4858      	ldr	r0, [pc, #352]	; (8003f38 <_vfiprintf_r+0x24c>)
 8003dd8:	f001 f85e 	bl	8004e98 <memchr>
 8003ddc:	9a04      	ldr	r2, [sp, #16]
 8003dde:	b9d8      	cbnz	r0, 8003e18 <_vfiprintf_r+0x12c>
 8003de0:	06d1      	lsls	r1, r2, #27
 8003de2:	bf44      	itt	mi
 8003de4:	2320      	movmi	r3, #32
 8003de6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003dea:	0713      	lsls	r3, r2, #28
 8003dec:	bf44      	itt	mi
 8003dee:	232b      	movmi	r3, #43	; 0x2b
 8003df0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003df4:	f89a 3000 	ldrb.w	r3, [sl]
 8003df8:	2b2a      	cmp	r3, #42	; 0x2a
 8003dfa:	d015      	beq.n	8003e28 <_vfiprintf_r+0x13c>
 8003dfc:	4654      	mov	r4, sl
 8003dfe:	2000      	movs	r0, #0
 8003e00:	f04f 0c0a 	mov.w	ip, #10
 8003e04:	9a07      	ldr	r2, [sp, #28]
 8003e06:	4621      	mov	r1, r4
 8003e08:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003e0c:	3b30      	subs	r3, #48	; 0x30
 8003e0e:	2b09      	cmp	r3, #9
 8003e10:	d94e      	bls.n	8003eb0 <_vfiprintf_r+0x1c4>
 8003e12:	b1b0      	cbz	r0, 8003e42 <_vfiprintf_r+0x156>
 8003e14:	9207      	str	r2, [sp, #28]
 8003e16:	e014      	b.n	8003e42 <_vfiprintf_r+0x156>
 8003e18:	eba0 0308 	sub.w	r3, r0, r8
 8003e1c:	fa09 f303 	lsl.w	r3, r9, r3
 8003e20:	4313      	orrs	r3, r2
 8003e22:	46a2      	mov	sl, r4
 8003e24:	9304      	str	r3, [sp, #16]
 8003e26:	e7d2      	b.n	8003dce <_vfiprintf_r+0xe2>
 8003e28:	9b03      	ldr	r3, [sp, #12]
 8003e2a:	1d19      	adds	r1, r3, #4
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	9103      	str	r1, [sp, #12]
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	bfbb      	ittet	lt
 8003e34:	425b      	neglt	r3, r3
 8003e36:	f042 0202 	orrlt.w	r2, r2, #2
 8003e3a:	9307      	strge	r3, [sp, #28]
 8003e3c:	9307      	strlt	r3, [sp, #28]
 8003e3e:	bfb8      	it	lt
 8003e40:	9204      	strlt	r2, [sp, #16]
 8003e42:	7823      	ldrb	r3, [r4, #0]
 8003e44:	2b2e      	cmp	r3, #46	; 0x2e
 8003e46:	d10c      	bne.n	8003e62 <_vfiprintf_r+0x176>
 8003e48:	7863      	ldrb	r3, [r4, #1]
 8003e4a:	2b2a      	cmp	r3, #42	; 0x2a
 8003e4c:	d135      	bne.n	8003eba <_vfiprintf_r+0x1ce>
 8003e4e:	9b03      	ldr	r3, [sp, #12]
 8003e50:	3402      	adds	r4, #2
 8003e52:	1d1a      	adds	r2, r3, #4
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	9203      	str	r2, [sp, #12]
 8003e58:	2b00      	cmp	r3, #0
 8003e5a:	bfb8      	it	lt
 8003e5c:	f04f 33ff 	movlt.w	r3, #4294967295
 8003e60:	9305      	str	r3, [sp, #20]
 8003e62:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8003f3c <_vfiprintf_r+0x250>
 8003e66:	2203      	movs	r2, #3
 8003e68:	4650      	mov	r0, sl
 8003e6a:	7821      	ldrb	r1, [r4, #0]
 8003e6c:	f001 f814 	bl	8004e98 <memchr>
 8003e70:	b140      	cbz	r0, 8003e84 <_vfiprintf_r+0x198>
 8003e72:	2340      	movs	r3, #64	; 0x40
 8003e74:	eba0 000a 	sub.w	r0, r0, sl
 8003e78:	fa03 f000 	lsl.w	r0, r3, r0
 8003e7c:	9b04      	ldr	r3, [sp, #16]
 8003e7e:	3401      	adds	r4, #1
 8003e80:	4303      	orrs	r3, r0
 8003e82:	9304      	str	r3, [sp, #16]
 8003e84:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e88:	2206      	movs	r2, #6
 8003e8a:	482d      	ldr	r0, [pc, #180]	; (8003f40 <_vfiprintf_r+0x254>)
 8003e8c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003e90:	f001 f802 	bl	8004e98 <memchr>
 8003e94:	2800      	cmp	r0, #0
 8003e96:	d03f      	beq.n	8003f18 <_vfiprintf_r+0x22c>
 8003e98:	4b2a      	ldr	r3, [pc, #168]	; (8003f44 <_vfiprintf_r+0x258>)
 8003e9a:	bb1b      	cbnz	r3, 8003ee4 <_vfiprintf_r+0x1f8>
 8003e9c:	9b03      	ldr	r3, [sp, #12]
 8003e9e:	3307      	adds	r3, #7
 8003ea0:	f023 0307 	bic.w	r3, r3, #7
 8003ea4:	3308      	adds	r3, #8
 8003ea6:	9303      	str	r3, [sp, #12]
 8003ea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003eaa:	443b      	add	r3, r7
 8003eac:	9309      	str	r3, [sp, #36]	; 0x24
 8003eae:	e767      	b.n	8003d80 <_vfiprintf_r+0x94>
 8003eb0:	460c      	mov	r4, r1
 8003eb2:	2001      	movs	r0, #1
 8003eb4:	fb0c 3202 	mla	r2, ip, r2, r3
 8003eb8:	e7a5      	b.n	8003e06 <_vfiprintf_r+0x11a>
 8003eba:	2300      	movs	r3, #0
 8003ebc:	f04f 0c0a 	mov.w	ip, #10
 8003ec0:	4619      	mov	r1, r3
 8003ec2:	3401      	adds	r4, #1
 8003ec4:	9305      	str	r3, [sp, #20]
 8003ec6:	4620      	mov	r0, r4
 8003ec8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ecc:	3a30      	subs	r2, #48	; 0x30
 8003ece:	2a09      	cmp	r2, #9
 8003ed0:	d903      	bls.n	8003eda <_vfiprintf_r+0x1ee>
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d0c5      	beq.n	8003e62 <_vfiprintf_r+0x176>
 8003ed6:	9105      	str	r1, [sp, #20]
 8003ed8:	e7c3      	b.n	8003e62 <_vfiprintf_r+0x176>
 8003eda:	4604      	mov	r4, r0
 8003edc:	2301      	movs	r3, #1
 8003ede:	fb0c 2101 	mla	r1, ip, r1, r2
 8003ee2:	e7f0      	b.n	8003ec6 <_vfiprintf_r+0x1da>
 8003ee4:	ab03      	add	r3, sp, #12
 8003ee6:	9300      	str	r3, [sp, #0]
 8003ee8:	462a      	mov	r2, r5
 8003eea:	4630      	mov	r0, r6
 8003eec:	4b16      	ldr	r3, [pc, #88]	; (8003f48 <_vfiprintf_r+0x25c>)
 8003eee:	a904      	add	r1, sp, #16
 8003ef0:	f3af 8000 	nop.w
 8003ef4:	4607      	mov	r7, r0
 8003ef6:	1c78      	adds	r0, r7, #1
 8003ef8:	d1d6      	bne.n	8003ea8 <_vfiprintf_r+0x1bc>
 8003efa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003efc:	07d9      	lsls	r1, r3, #31
 8003efe:	d405      	bmi.n	8003f0c <_vfiprintf_r+0x220>
 8003f00:	89ab      	ldrh	r3, [r5, #12]
 8003f02:	059a      	lsls	r2, r3, #22
 8003f04:	d402      	bmi.n	8003f0c <_vfiprintf_r+0x220>
 8003f06:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003f08:	f7ff f8e4 	bl	80030d4 <__retarget_lock_release_recursive>
 8003f0c:	89ab      	ldrh	r3, [r5, #12]
 8003f0e:	065b      	lsls	r3, r3, #25
 8003f10:	f53f af12 	bmi.w	8003d38 <_vfiprintf_r+0x4c>
 8003f14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f16:	e711      	b.n	8003d3c <_vfiprintf_r+0x50>
 8003f18:	ab03      	add	r3, sp, #12
 8003f1a:	9300      	str	r3, [sp, #0]
 8003f1c:	462a      	mov	r2, r5
 8003f1e:	4630      	mov	r0, r6
 8003f20:	4b09      	ldr	r3, [pc, #36]	; (8003f48 <_vfiprintf_r+0x25c>)
 8003f22:	a904      	add	r1, sp, #16
 8003f24:	f000 f882 	bl	800402c <_printf_i>
 8003f28:	e7e4      	b.n	8003ef4 <_vfiprintf_r+0x208>
 8003f2a:	bf00      	nop
 8003f2c:	0800562c 	.word	0x0800562c
 8003f30:	0800564c 	.word	0x0800564c
 8003f34:	0800560c 	.word	0x0800560c
 8003f38:	08005670 	.word	0x08005670
 8003f3c:	08005676 	.word	0x08005676
 8003f40:	0800567a 	.word	0x0800567a
 8003f44:	00000000 	.word	0x00000000
 8003f48:	08003cc7 	.word	0x08003cc7

08003f4c <_printf_common>:
 8003f4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f50:	4616      	mov	r6, r2
 8003f52:	4699      	mov	r9, r3
 8003f54:	688a      	ldr	r2, [r1, #8]
 8003f56:	690b      	ldr	r3, [r1, #16]
 8003f58:	4607      	mov	r7, r0
 8003f5a:	4293      	cmp	r3, r2
 8003f5c:	bfb8      	it	lt
 8003f5e:	4613      	movlt	r3, r2
 8003f60:	6033      	str	r3, [r6, #0]
 8003f62:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003f66:	460c      	mov	r4, r1
 8003f68:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003f6c:	b10a      	cbz	r2, 8003f72 <_printf_common+0x26>
 8003f6e:	3301      	adds	r3, #1
 8003f70:	6033      	str	r3, [r6, #0]
 8003f72:	6823      	ldr	r3, [r4, #0]
 8003f74:	0699      	lsls	r1, r3, #26
 8003f76:	bf42      	ittt	mi
 8003f78:	6833      	ldrmi	r3, [r6, #0]
 8003f7a:	3302      	addmi	r3, #2
 8003f7c:	6033      	strmi	r3, [r6, #0]
 8003f7e:	6825      	ldr	r5, [r4, #0]
 8003f80:	f015 0506 	ands.w	r5, r5, #6
 8003f84:	d106      	bne.n	8003f94 <_printf_common+0x48>
 8003f86:	f104 0a19 	add.w	sl, r4, #25
 8003f8a:	68e3      	ldr	r3, [r4, #12]
 8003f8c:	6832      	ldr	r2, [r6, #0]
 8003f8e:	1a9b      	subs	r3, r3, r2
 8003f90:	42ab      	cmp	r3, r5
 8003f92:	dc28      	bgt.n	8003fe6 <_printf_common+0x9a>
 8003f94:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003f98:	1e13      	subs	r3, r2, #0
 8003f9a:	6822      	ldr	r2, [r4, #0]
 8003f9c:	bf18      	it	ne
 8003f9e:	2301      	movne	r3, #1
 8003fa0:	0692      	lsls	r2, r2, #26
 8003fa2:	d42d      	bmi.n	8004000 <_printf_common+0xb4>
 8003fa4:	4649      	mov	r1, r9
 8003fa6:	4638      	mov	r0, r7
 8003fa8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003fac:	47c0      	blx	r8
 8003fae:	3001      	adds	r0, #1
 8003fb0:	d020      	beq.n	8003ff4 <_printf_common+0xa8>
 8003fb2:	6823      	ldr	r3, [r4, #0]
 8003fb4:	68e5      	ldr	r5, [r4, #12]
 8003fb6:	f003 0306 	and.w	r3, r3, #6
 8003fba:	2b04      	cmp	r3, #4
 8003fbc:	bf18      	it	ne
 8003fbe:	2500      	movne	r5, #0
 8003fc0:	6832      	ldr	r2, [r6, #0]
 8003fc2:	f04f 0600 	mov.w	r6, #0
 8003fc6:	68a3      	ldr	r3, [r4, #8]
 8003fc8:	bf08      	it	eq
 8003fca:	1aad      	subeq	r5, r5, r2
 8003fcc:	6922      	ldr	r2, [r4, #16]
 8003fce:	bf08      	it	eq
 8003fd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003fd4:	4293      	cmp	r3, r2
 8003fd6:	bfc4      	itt	gt
 8003fd8:	1a9b      	subgt	r3, r3, r2
 8003fda:	18ed      	addgt	r5, r5, r3
 8003fdc:	341a      	adds	r4, #26
 8003fde:	42b5      	cmp	r5, r6
 8003fe0:	d11a      	bne.n	8004018 <_printf_common+0xcc>
 8003fe2:	2000      	movs	r0, #0
 8003fe4:	e008      	b.n	8003ff8 <_printf_common+0xac>
 8003fe6:	2301      	movs	r3, #1
 8003fe8:	4652      	mov	r2, sl
 8003fea:	4649      	mov	r1, r9
 8003fec:	4638      	mov	r0, r7
 8003fee:	47c0      	blx	r8
 8003ff0:	3001      	adds	r0, #1
 8003ff2:	d103      	bne.n	8003ffc <_printf_common+0xb0>
 8003ff4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ffc:	3501      	adds	r5, #1
 8003ffe:	e7c4      	b.n	8003f8a <_printf_common+0x3e>
 8004000:	2030      	movs	r0, #48	; 0x30
 8004002:	18e1      	adds	r1, r4, r3
 8004004:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004008:	1c5a      	adds	r2, r3, #1
 800400a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800400e:	4422      	add	r2, r4
 8004010:	3302      	adds	r3, #2
 8004012:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004016:	e7c5      	b.n	8003fa4 <_printf_common+0x58>
 8004018:	2301      	movs	r3, #1
 800401a:	4622      	mov	r2, r4
 800401c:	4649      	mov	r1, r9
 800401e:	4638      	mov	r0, r7
 8004020:	47c0      	blx	r8
 8004022:	3001      	adds	r0, #1
 8004024:	d0e6      	beq.n	8003ff4 <_printf_common+0xa8>
 8004026:	3601      	adds	r6, #1
 8004028:	e7d9      	b.n	8003fde <_printf_common+0x92>
	...

0800402c <_printf_i>:
 800402c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004030:	7e0f      	ldrb	r7, [r1, #24]
 8004032:	4691      	mov	r9, r2
 8004034:	2f78      	cmp	r7, #120	; 0x78
 8004036:	4680      	mov	r8, r0
 8004038:	460c      	mov	r4, r1
 800403a:	469a      	mov	sl, r3
 800403c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800403e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004042:	d807      	bhi.n	8004054 <_printf_i+0x28>
 8004044:	2f62      	cmp	r7, #98	; 0x62
 8004046:	d80a      	bhi.n	800405e <_printf_i+0x32>
 8004048:	2f00      	cmp	r7, #0
 800404a:	f000 80d9 	beq.w	8004200 <_printf_i+0x1d4>
 800404e:	2f58      	cmp	r7, #88	; 0x58
 8004050:	f000 80a4 	beq.w	800419c <_printf_i+0x170>
 8004054:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004058:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800405c:	e03a      	b.n	80040d4 <_printf_i+0xa8>
 800405e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004062:	2b15      	cmp	r3, #21
 8004064:	d8f6      	bhi.n	8004054 <_printf_i+0x28>
 8004066:	a101      	add	r1, pc, #4	; (adr r1, 800406c <_printf_i+0x40>)
 8004068:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800406c:	080040c5 	.word	0x080040c5
 8004070:	080040d9 	.word	0x080040d9
 8004074:	08004055 	.word	0x08004055
 8004078:	08004055 	.word	0x08004055
 800407c:	08004055 	.word	0x08004055
 8004080:	08004055 	.word	0x08004055
 8004084:	080040d9 	.word	0x080040d9
 8004088:	08004055 	.word	0x08004055
 800408c:	08004055 	.word	0x08004055
 8004090:	08004055 	.word	0x08004055
 8004094:	08004055 	.word	0x08004055
 8004098:	080041e7 	.word	0x080041e7
 800409c:	08004109 	.word	0x08004109
 80040a0:	080041c9 	.word	0x080041c9
 80040a4:	08004055 	.word	0x08004055
 80040a8:	08004055 	.word	0x08004055
 80040ac:	08004209 	.word	0x08004209
 80040b0:	08004055 	.word	0x08004055
 80040b4:	08004109 	.word	0x08004109
 80040b8:	08004055 	.word	0x08004055
 80040bc:	08004055 	.word	0x08004055
 80040c0:	080041d1 	.word	0x080041d1
 80040c4:	682b      	ldr	r3, [r5, #0]
 80040c6:	1d1a      	adds	r2, r3, #4
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	602a      	str	r2, [r5, #0]
 80040cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80040d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80040d4:	2301      	movs	r3, #1
 80040d6:	e0a4      	b.n	8004222 <_printf_i+0x1f6>
 80040d8:	6820      	ldr	r0, [r4, #0]
 80040da:	6829      	ldr	r1, [r5, #0]
 80040dc:	0606      	lsls	r6, r0, #24
 80040de:	f101 0304 	add.w	r3, r1, #4
 80040e2:	d50a      	bpl.n	80040fa <_printf_i+0xce>
 80040e4:	680e      	ldr	r6, [r1, #0]
 80040e6:	602b      	str	r3, [r5, #0]
 80040e8:	2e00      	cmp	r6, #0
 80040ea:	da03      	bge.n	80040f4 <_printf_i+0xc8>
 80040ec:	232d      	movs	r3, #45	; 0x2d
 80040ee:	4276      	negs	r6, r6
 80040f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80040f4:	230a      	movs	r3, #10
 80040f6:	485e      	ldr	r0, [pc, #376]	; (8004270 <_printf_i+0x244>)
 80040f8:	e019      	b.n	800412e <_printf_i+0x102>
 80040fa:	680e      	ldr	r6, [r1, #0]
 80040fc:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004100:	602b      	str	r3, [r5, #0]
 8004102:	bf18      	it	ne
 8004104:	b236      	sxthne	r6, r6
 8004106:	e7ef      	b.n	80040e8 <_printf_i+0xbc>
 8004108:	682b      	ldr	r3, [r5, #0]
 800410a:	6820      	ldr	r0, [r4, #0]
 800410c:	1d19      	adds	r1, r3, #4
 800410e:	6029      	str	r1, [r5, #0]
 8004110:	0601      	lsls	r1, r0, #24
 8004112:	d501      	bpl.n	8004118 <_printf_i+0xec>
 8004114:	681e      	ldr	r6, [r3, #0]
 8004116:	e002      	b.n	800411e <_printf_i+0xf2>
 8004118:	0646      	lsls	r6, r0, #25
 800411a:	d5fb      	bpl.n	8004114 <_printf_i+0xe8>
 800411c:	881e      	ldrh	r6, [r3, #0]
 800411e:	2f6f      	cmp	r7, #111	; 0x6f
 8004120:	bf0c      	ite	eq
 8004122:	2308      	moveq	r3, #8
 8004124:	230a      	movne	r3, #10
 8004126:	4852      	ldr	r0, [pc, #328]	; (8004270 <_printf_i+0x244>)
 8004128:	2100      	movs	r1, #0
 800412a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800412e:	6865      	ldr	r5, [r4, #4]
 8004130:	2d00      	cmp	r5, #0
 8004132:	bfa8      	it	ge
 8004134:	6821      	ldrge	r1, [r4, #0]
 8004136:	60a5      	str	r5, [r4, #8]
 8004138:	bfa4      	itt	ge
 800413a:	f021 0104 	bicge.w	r1, r1, #4
 800413e:	6021      	strge	r1, [r4, #0]
 8004140:	b90e      	cbnz	r6, 8004146 <_printf_i+0x11a>
 8004142:	2d00      	cmp	r5, #0
 8004144:	d04d      	beq.n	80041e2 <_printf_i+0x1b6>
 8004146:	4615      	mov	r5, r2
 8004148:	fbb6 f1f3 	udiv	r1, r6, r3
 800414c:	fb03 6711 	mls	r7, r3, r1, r6
 8004150:	5dc7      	ldrb	r7, [r0, r7]
 8004152:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004156:	4637      	mov	r7, r6
 8004158:	42bb      	cmp	r3, r7
 800415a:	460e      	mov	r6, r1
 800415c:	d9f4      	bls.n	8004148 <_printf_i+0x11c>
 800415e:	2b08      	cmp	r3, #8
 8004160:	d10b      	bne.n	800417a <_printf_i+0x14e>
 8004162:	6823      	ldr	r3, [r4, #0]
 8004164:	07de      	lsls	r6, r3, #31
 8004166:	d508      	bpl.n	800417a <_printf_i+0x14e>
 8004168:	6923      	ldr	r3, [r4, #16]
 800416a:	6861      	ldr	r1, [r4, #4]
 800416c:	4299      	cmp	r1, r3
 800416e:	bfde      	ittt	le
 8004170:	2330      	movle	r3, #48	; 0x30
 8004172:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004176:	f105 35ff 	addle.w	r5, r5, #4294967295
 800417a:	1b52      	subs	r2, r2, r5
 800417c:	6122      	str	r2, [r4, #16]
 800417e:	464b      	mov	r3, r9
 8004180:	4621      	mov	r1, r4
 8004182:	4640      	mov	r0, r8
 8004184:	f8cd a000 	str.w	sl, [sp]
 8004188:	aa03      	add	r2, sp, #12
 800418a:	f7ff fedf 	bl	8003f4c <_printf_common>
 800418e:	3001      	adds	r0, #1
 8004190:	d14c      	bne.n	800422c <_printf_i+0x200>
 8004192:	f04f 30ff 	mov.w	r0, #4294967295
 8004196:	b004      	add	sp, #16
 8004198:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800419c:	4834      	ldr	r0, [pc, #208]	; (8004270 <_printf_i+0x244>)
 800419e:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80041a2:	6829      	ldr	r1, [r5, #0]
 80041a4:	6823      	ldr	r3, [r4, #0]
 80041a6:	f851 6b04 	ldr.w	r6, [r1], #4
 80041aa:	6029      	str	r1, [r5, #0]
 80041ac:	061d      	lsls	r5, r3, #24
 80041ae:	d514      	bpl.n	80041da <_printf_i+0x1ae>
 80041b0:	07df      	lsls	r7, r3, #31
 80041b2:	bf44      	itt	mi
 80041b4:	f043 0320 	orrmi.w	r3, r3, #32
 80041b8:	6023      	strmi	r3, [r4, #0]
 80041ba:	b91e      	cbnz	r6, 80041c4 <_printf_i+0x198>
 80041bc:	6823      	ldr	r3, [r4, #0]
 80041be:	f023 0320 	bic.w	r3, r3, #32
 80041c2:	6023      	str	r3, [r4, #0]
 80041c4:	2310      	movs	r3, #16
 80041c6:	e7af      	b.n	8004128 <_printf_i+0xfc>
 80041c8:	6823      	ldr	r3, [r4, #0]
 80041ca:	f043 0320 	orr.w	r3, r3, #32
 80041ce:	6023      	str	r3, [r4, #0]
 80041d0:	2378      	movs	r3, #120	; 0x78
 80041d2:	4828      	ldr	r0, [pc, #160]	; (8004274 <_printf_i+0x248>)
 80041d4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80041d8:	e7e3      	b.n	80041a2 <_printf_i+0x176>
 80041da:	0659      	lsls	r1, r3, #25
 80041dc:	bf48      	it	mi
 80041de:	b2b6      	uxthmi	r6, r6
 80041e0:	e7e6      	b.n	80041b0 <_printf_i+0x184>
 80041e2:	4615      	mov	r5, r2
 80041e4:	e7bb      	b.n	800415e <_printf_i+0x132>
 80041e6:	682b      	ldr	r3, [r5, #0]
 80041e8:	6826      	ldr	r6, [r4, #0]
 80041ea:	1d18      	adds	r0, r3, #4
 80041ec:	6961      	ldr	r1, [r4, #20]
 80041ee:	6028      	str	r0, [r5, #0]
 80041f0:	0635      	lsls	r5, r6, #24
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	d501      	bpl.n	80041fa <_printf_i+0x1ce>
 80041f6:	6019      	str	r1, [r3, #0]
 80041f8:	e002      	b.n	8004200 <_printf_i+0x1d4>
 80041fa:	0670      	lsls	r0, r6, #25
 80041fc:	d5fb      	bpl.n	80041f6 <_printf_i+0x1ca>
 80041fe:	8019      	strh	r1, [r3, #0]
 8004200:	2300      	movs	r3, #0
 8004202:	4615      	mov	r5, r2
 8004204:	6123      	str	r3, [r4, #16]
 8004206:	e7ba      	b.n	800417e <_printf_i+0x152>
 8004208:	682b      	ldr	r3, [r5, #0]
 800420a:	2100      	movs	r1, #0
 800420c:	1d1a      	adds	r2, r3, #4
 800420e:	602a      	str	r2, [r5, #0]
 8004210:	681d      	ldr	r5, [r3, #0]
 8004212:	6862      	ldr	r2, [r4, #4]
 8004214:	4628      	mov	r0, r5
 8004216:	f000 fe3f 	bl	8004e98 <memchr>
 800421a:	b108      	cbz	r0, 8004220 <_printf_i+0x1f4>
 800421c:	1b40      	subs	r0, r0, r5
 800421e:	6060      	str	r0, [r4, #4]
 8004220:	6863      	ldr	r3, [r4, #4]
 8004222:	6123      	str	r3, [r4, #16]
 8004224:	2300      	movs	r3, #0
 8004226:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800422a:	e7a8      	b.n	800417e <_printf_i+0x152>
 800422c:	462a      	mov	r2, r5
 800422e:	4649      	mov	r1, r9
 8004230:	4640      	mov	r0, r8
 8004232:	6923      	ldr	r3, [r4, #16]
 8004234:	47d0      	blx	sl
 8004236:	3001      	adds	r0, #1
 8004238:	d0ab      	beq.n	8004192 <_printf_i+0x166>
 800423a:	6823      	ldr	r3, [r4, #0]
 800423c:	079b      	lsls	r3, r3, #30
 800423e:	d413      	bmi.n	8004268 <_printf_i+0x23c>
 8004240:	68e0      	ldr	r0, [r4, #12]
 8004242:	9b03      	ldr	r3, [sp, #12]
 8004244:	4298      	cmp	r0, r3
 8004246:	bfb8      	it	lt
 8004248:	4618      	movlt	r0, r3
 800424a:	e7a4      	b.n	8004196 <_printf_i+0x16a>
 800424c:	2301      	movs	r3, #1
 800424e:	4632      	mov	r2, r6
 8004250:	4649      	mov	r1, r9
 8004252:	4640      	mov	r0, r8
 8004254:	47d0      	blx	sl
 8004256:	3001      	adds	r0, #1
 8004258:	d09b      	beq.n	8004192 <_printf_i+0x166>
 800425a:	3501      	adds	r5, #1
 800425c:	68e3      	ldr	r3, [r4, #12]
 800425e:	9903      	ldr	r1, [sp, #12]
 8004260:	1a5b      	subs	r3, r3, r1
 8004262:	42ab      	cmp	r3, r5
 8004264:	dcf2      	bgt.n	800424c <_printf_i+0x220>
 8004266:	e7eb      	b.n	8004240 <_printf_i+0x214>
 8004268:	2500      	movs	r5, #0
 800426a:	f104 0619 	add.w	r6, r4, #25
 800426e:	e7f5      	b.n	800425c <_printf_i+0x230>
 8004270:	08005681 	.word	0x08005681
 8004274:	08005692 	.word	0x08005692

08004278 <__svfiscanf_r>:
 8004278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800427c:	461d      	mov	r5, r3
 800427e:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8004280:	4606      	mov	r6, r0
 8004282:	07df      	lsls	r7, r3, #31
 8004284:	460c      	mov	r4, r1
 8004286:	4692      	mov	sl, r2
 8004288:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800428c:	d405      	bmi.n	800429a <__svfiscanf_r+0x22>
 800428e:	898b      	ldrh	r3, [r1, #12]
 8004290:	0598      	lsls	r0, r3, #22
 8004292:	d402      	bmi.n	800429a <__svfiscanf_r+0x22>
 8004294:	6d88      	ldr	r0, [r1, #88]	; 0x58
 8004296:	f7fe ff1c 	bl	80030d2 <__retarget_lock_acquire_recursive>
 800429a:	2300      	movs	r3, #0
 800429c:	e9cd 3344 	strd	r3, r3, [sp, #272]	; 0x110
 80042a0:	4ba6      	ldr	r3, [pc, #664]	; (800453c <__svfiscanf_r+0x2c4>)
 80042a2:	f10d 0804 	add.w	r8, sp, #4
 80042a6:	93a0      	str	r3, [sp, #640]	; 0x280
 80042a8:	4ba5      	ldr	r3, [pc, #660]	; (8004540 <__svfiscanf_r+0x2c8>)
 80042aa:	4fa6      	ldr	r7, [pc, #664]	; (8004544 <__svfiscanf_r+0x2cc>)
 80042ac:	f8df 9298 	ldr.w	r9, [pc, #664]	; 8004548 <__svfiscanf_r+0x2d0>
 80042b0:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 80042b4:	93a1      	str	r3, [sp, #644]	; 0x284
 80042b6:	9500      	str	r5, [sp, #0]
 80042b8:	f89a 3000 	ldrb.w	r3, [sl]
 80042bc:	2b00      	cmp	r3, #0
 80042be:	f000 8173 	beq.w	80045a8 <__svfiscanf_r+0x330>
 80042c2:	5dd9      	ldrb	r1, [r3, r7]
 80042c4:	f10a 0501 	add.w	r5, sl, #1
 80042c8:	f011 0108 	ands.w	r1, r1, #8
 80042cc:	d019      	beq.n	8004302 <__svfiscanf_r+0x8a>
 80042ce:	6863      	ldr	r3, [r4, #4]
 80042d0:	2b00      	cmp	r3, #0
 80042d2:	dd0f      	ble.n	80042f4 <__svfiscanf_r+0x7c>
 80042d4:	6823      	ldr	r3, [r4, #0]
 80042d6:	781a      	ldrb	r2, [r3, #0]
 80042d8:	5cba      	ldrb	r2, [r7, r2]
 80042da:	0711      	lsls	r1, r2, #28
 80042dc:	d401      	bmi.n	80042e2 <__svfiscanf_r+0x6a>
 80042de:	46aa      	mov	sl, r5
 80042e0:	e7ea      	b.n	80042b8 <__svfiscanf_r+0x40>
 80042e2:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80042e4:	3301      	adds	r3, #1
 80042e6:	3201      	adds	r2, #1
 80042e8:	9245      	str	r2, [sp, #276]	; 0x114
 80042ea:	6862      	ldr	r2, [r4, #4]
 80042ec:	6023      	str	r3, [r4, #0]
 80042ee:	3a01      	subs	r2, #1
 80042f0:	6062      	str	r2, [r4, #4]
 80042f2:	e7ec      	b.n	80042ce <__svfiscanf_r+0x56>
 80042f4:	4621      	mov	r1, r4
 80042f6:	4630      	mov	r0, r6
 80042f8:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80042fa:	4798      	blx	r3
 80042fc:	2800      	cmp	r0, #0
 80042fe:	d0e9      	beq.n	80042d4 <__svfiscanf_r+0x5c>
 8004300:	e7ed      	b.n	80042de <__svfiscanf_r+0x66>
 8004302:	2b25      	cmp	r3, #37	; 0x25
 8004304:	d012      	beq.n	800432c <__svfiscanf_r+0xb4>
 8004306:	469a      	mov	sl, r3
 8004308:	6863      	ldr	r3, [r4, #4]
 800430a:	2b00      	cmp	r3, #0
 800430c:	f340 8095 	ble.w	800443a <__svfiscanf_r+0x1c2>
 8004310:	6822      	ldr	r2, [r4, #0]
 8004312:	7813      	ldrb	r3, [r2, #0]
 8004314:	4553      	cmp	r3, sl
 8004316:	f040 8147 	bne.w	80045a8 <__svfiscanf_r+0x330>
 800431a:	6863      	ldr	r3, [r4, #4]
 800431c:	3201      	adds	r2, #1
 800431e:	3b01      	subs	r3, #1
 8004320:	6063      	str	r3, [r4, #4]
 8004322:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8004324:	6022      	str	r2, [r4, #0]
 8004326:	3301      	adds	r3, #1
 8004328:	9345      	str	r3, [sp, #276]	; 0x114
 800432a:	e7d8      	b.n	80042de <__svfiscanf_r+0x66>
 800432c:	9141      	str	r1, [sp, #260]	; 0x104
 800432e:	9143      	str	r1, [sp, #268]	; 0x10c
 8004330:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8004334:	220a      	movs	r2, #10
 8004336:	2b2a      	cmp	r3, #42	; 0x2a
 8004338:	bf02      	ittt	eq
 800433a:	2310      	moveq	r3, #16
 800433c:	f10a 0502 	addeq.w	r5, sl, #2
 8004340:	9341      	streq	r3, [sp, #260]	; 0x104
 8004342:	46aa      	mov	sl, r5
 8004344:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8004348:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800434c:	2b09      	cmp	r3, #9
 800434e:	d91e      	bls.n	800438e <__svfiscanf_r+0x116>
 8004350:	2203      	movs	r2, #3
 8004352:	487d      	ldr	r0, [pc, #500]	; (8004548 <__svfiscanf_r+0x2d0>)
 8004354:	f000 fda0 	bl	8004e98 <memchr>
 8004358:	b140      	cbz	r0, 800436c <__svfiscanf_r+0xf4>
 800435a:	2301      	movs	r3, #1
 800435c:	4655      	mov	r5, sl
 800435e:	eba0 0009 	sub.w	r0, r0, r9
 8004362:	fa03 f000 	lsl.w	r0, r3, r0
 8004366:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8004368:	4318      	orrs	r0, r3
 800436a:	9041      	str	r0, [sp, #260]	; 0x104
 800436c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8004370:	2b78      	cmp	r3, #120	; 0x78
 8004372:	d807      	bhi.n	8004384 <__svfiscanf_r+0x10c>
 8004374:	2b57      	cmp	r3, #87	; 0x57
 8004376:	d811      	bhi.n	800439c <__svfiscanf_r+0x124>
 8004378:	2b25      	cmp	r3, #37	; 0x25
 800437a:	d0c4      	beq.n	8004306 <__svfiscanf_r+0x8e>
 800437c:	d858      	bhi.n	8004430 <__svfiscanf_r+0x1b8>
 800437e:	2b00      	cmp	r3, #0
 8004380:	f000 80c8 	beq.w	8004514 <__svfiscanf_r+0x29c>
 8004384:	2303      	movs	r3, #3
 8004386:	9347      	str	r3, [sp, #284]	; 0x11c
 8004388:	230a      	movs	r3, #10
 800438a:	9342      	str	r3, [sp, #264]	; 0x108
 800438c:	e07c      	b.n	8004488 <__svfiscanf_r+0x210>
 800438e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8004390:	4655      	mov	r5, sl
 8004392:	fb02 1103 	mla	r1, r2, r3, r1
 8004396:	3930      	subs	r1, #48	; 0x30
 8004398:	9143      	str	r1, [sp, #268]	; 0x10c
 800439a:	e7d2      	b.n	8004342 <__svfiscanf_r+0xca>
 800439c:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 80043a0:	2a20      	cmp	r2, #32
 80043a2:	d8ef      	bhi.n	8004384 <__svfiscanf_r+0x10c>
 80043a4:	a101      	add	r1, pc, #4	; (adr r1, 80043ac <__svfiscanf_r+0x134>)
 80043a6:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80043aa:	bf00      	nop
 80043ac:	08004473 	.word	0x08004473
 80043b0:	08004385 	.word	0x08004385
 80043b4:	08004385 	.word	0x08004385
 80043b8:	080044d1 	.word	0x080044d1
 80043bc:	08004385 	.word	0x08004385
 80043c0:	08004385 	.word	0x08004385
 80043c4:	08004385 	.word	0x08004385
 80043c8:	08004385 	.word	0x08004385
 80043cc:	08004385 	.word	0x08004385
 80043d0:	08004385 	.word	0x08004385
 80043d4:	08004385 	.word	0x08004385
 80043d8:	080044e7 	.word	0x080044e7
 80043dc:	080044bd 	.word	0x080044bd
 80043e0:	08004437 	.word	0x08004437
 80043e4:	08004437 	.word	0x08004437
 80043e8:	08004437 	.word	0x08004437
 80043ec:	08004385 	.word	0x08004385
 80043f0:	080044c1 	.word	0x080044c1
 80043f4:	08004385 	.word	0x08004385
 80043f8:	08004385 	.word	0x08004385
 80043fc:	08004385 	.word	0x08004385
 8004400:	08004385 	.word	0x08004385
 8004404:	080044f7 	.word	0x080044f7
 8004408:	080044c9 	.word	0x080044c9
 800440c:	0800446b 	.word	0x0800446b
 8004410:	08004385 	.word	0x08004385
 8004414:	08004385 	.word	0x08004385
 8004418:	080044f3 	.word	0x080044f3
 800441c:	08004385 	.word	0x08004385
 8004420:	080044bd 	.word	0x080044bd
 8004424:	08004385 	.word	0x08004385
 8004428:	08004385 	.word	0x08004385
 800442c:	08004473 	.word	0x08004473
 8004430:	3b45      	subs	r3, #69	; 0x45
 8004432:	2b02      	cmp	r3, #2
 8004434:	d8a6      	bhi.n	8004384 <__svfiscanf_r+0x10c>
 8004436:	2305      	movs	r3, #5
 8004438:	e025      	b.n	8004486 <__svfiscanf_r+0x20e>
 800443a:	4621      	mov	r1, r4
 800443c:	4630      	mov	r0, r6
 800443e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8004440:	4798      	blx	r3
 8004442:	2800      	cmp	r0, #0
 8004444:	f43f af64 	beq.w	8004310 <__svfiscanf_r+0x98>
 8004448:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800444a:	07da      	lsls	r2, r3, #31
 800444c:	f140 80a4 	bpl.w	8004598 <__svfiscanf_r+0x320>
 8004450:	9844      	ldr	r0, [sp, #272]	; 0x110
 8004452:	2800      	cmp	r0, #0
 8004454:	d067      	beq.n	8004526 <__svfiscanf_r+0x2ae>
 8004456:	89a3      	ldrh	r3, [r4, #12]
 8004458:	f013 0f40 	tst.w	r3, #64	; 0x40
 800445c:	bf18      	it	ne
 800445e:	f04f 30ff 	movne.w	r0, #4294967295
 8004462:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 8004466:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800446a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800446c:	f042 0220 	orr.w	r2, r2, #32
 8004470:	9241      	str	r2, [sp, #260]	; 0x104
 8004472:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8004474:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004478:	9241      	str	r2, [sp, #260]	; 0x104
 800447a:	2210      	movs	r2, #16
 800447c:	2b6f      	cmp	r3, #111	; 0x6f
 800447e:	bf34      	ite	cc
 8004480:	2303      	movcc	r3, #3
 8004482:	2304      	movcs	r3, #4
 8004484:	9242      	str	r2, [sp, #264]	; 0x108
 8004486:	9347      	str	r3, [sp, #284]	; 0x11c
 8004488:	6863      	ldr	r3, [r4, #4]
 800448a:	2b00      	cmp	r3, #0
 800448c:	dd4e      	ble.n	800452c <__svfiscanf_r+0x2b4>
 800448e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8004490:	065b      	lsls	r3, r3, #25
 8004492:	d404      	bmi.n	800449e <__svfiscanf_r+0x226>
 8004494:	6823      	ldr	r3, [r4, #0]
 8004496:	781a      	ldrb	r2, [r3, #0]
 8004498:	5cba      	ldrb	r2, [r7, r2]
 800449a:	0710      	lsls	r0, r2, #28
 800449c:	d456      	bmi.n	800454c <__svfiscanf_r+0x2d4>
 800449e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 80044a0:	2b02      	cmp	r3, #2
 80044a2:	dc65      	bgt.n	8004570 <__svfiscanf_r+0x2f8>
 80044a4:	466b      	mov	r3, sp
 80044a6:	4622      	mov	r2, r4
 80044a8:	4630      	mov	r0, r6
 80044aa:	a941      	add	r1, sp, #260	; 0x104
 80044ac:	f000 f8b2 	bl	8004614 <_scanf_chars>
 80044b0:	2801      	cmp	r0, #1
 80044b2:	d079      	beq.n	80045a8 <__svfiscanf_r+0x330>
 80044b4:	2802      	cmp	r0, #2
 80044b6:	f47f af12 	bne.w	80042de <__svfiscanf_r+0x66>
 80044ba:	e7c5      	b.n	8004448 <__svfiscanf_r+0x1d0>
 80044bc:	220a      	movs	r2, #10
 80044be:	e7dd      	b.n	800447c <__svfiscanf_r+0x204>
 80044c0:	2300      	movs	r3, #0
 80044c2:	9342      	str	r3, [sp, #264]	; 0x108
 80044c4:	2303      	movs	r3, #3
 80044c6:	e7de      	b.n	8004486 <__svfiscanf_r+0x20e>
 80044c8:	2308      	movs	r3, #8
 80044ca:	9342      	str	r3, [sp, #264]	; 0x108
 80044cc:	2304      	movs	r3, #4
 80044ce:	e7da      	b.n	8004486 <__svfiscanf_r+0x20e>
 80044d0:	4629      	mov	r1, r5
 80044d2:	4640      	mov	r0, r8
 80044d4:	f000 fac4 	bl	8004a60 <__sccl>
 80044d8:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80044da:	4605      	mov	r5, r0
 80044dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044e0:	9341      	str	r3, [sp, #260]	; 0x104
 80044e2:	2301      	movs	r3, #1
 80044e4:	e7cf      	b.n	8004486 <__svfiscanf_r+0x20e>
 80044e6:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80044e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044ec:	9341      	str	r3, [sp, #260]	; 0x104
 80044ee:	2300      	movs	r3, #0
 80044f0:	e7c9      	b.n	8004486 <__svfiscanf_r+0x20e>
 80044f2:	2302      	movs	r3, #2
 80044f4:	e7c7      	b.n	8004486 <__svfiscanf_r+0x20e>
 80044f6:	9841      	ldr	r0, [sp, #260]	; 0x104
 80044f8:	06c3      	lsls	r3, r0, #27
 80044fa:	f53f aef0 	bmi.w	80042de <__svfiscanf_r+0x66>
 80044fe:	9b00      	ldr	r3, [sp, #0]
 8004500:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8004502:	1d19      	adds	r1, r3, #4
 8004504:	9100      	str	r1, [sp, #0]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	f010 0f01 	tst.w	r0, #1
 800450c:	bf14      	ite	ne
 800450e:	801a      	strhne	r2, [r3, #0]
 8004510:	601a      	streq	r2, [r3, #0]
 8004512:	e6e4      	b.n	80042de <__svfiscanf_r+0x66>
 8004514:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004516:	07d8      	lsls	r0, r3, #31
 8004518:	d405      	bmi.n	8004526 <__svfiscanf_r+0x2ae>
 800451a:	89a3      	ldrh	r3, [r4, #12]
 800451c:	0599      	lsls	r1, r3, #22
 800451e:	d402      	bmi.n	8004526 <__svfiscanf_r+0x2ae>
 8004520:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004522:	f7fe fdd7 	bl	80030d4 <__retarget_lock_release_recursive>
 8004526:	f04f 30ff 	mov.w	r0, #4294967295
 800452a:	e79a      	b.n	8004462 <__svfiscanf_r+0x1ea>
 800452c:	4621      	mov	r1, r4
 800452e:	4630      	mov	r0, r6
 8004530:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8004532:	4798      	blx	r3
 8004534:	2800      	cmp	r0, #0
 8004536:	d0aa      	beq.n	800448e <__svfiscanf_r+0x216>
 8004538:	e786      	b.n	8004448 <__svfiscanf_r+0x1d0>
 800453a:	bf00      	nop
 800453c:	08004d25 	.word	0x08004d25
 8004540:	080048f1 	.word	0x080048f1
 8004544:	080056bf 	.word	0x080056bf
 8004548:	08005676 	.word	0x08005676
 800454c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800454e:	3201      	adds	r2, #1
 8004550:	9245      	str	r2, [sp, #276]	; 0x114
 8004552:	6862      	ldr	r2, [r4, #4]
 8004554:	3a01      	subs	r2, #1
 8004556:	2a00      	cmp	r2, #0
 8004558:	6062      	str	r2, [r4, #4]
 800455a:	dd02      	ble.n	8004562 <__svfiscanf_r+0x2ea>
 800455c:	3301      	adds	r3, #1
 800455e:	6023      	str	r3, [r4, #0]
 8004560:	e798      	b.n	8004494 <__svfiscanf_r+0x21c>
 8004562:	4621      	mov	r1, r4
 8004564:	4630      	mov	r0, r6
 8004566:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8004568:	4798      	blx	r3
 800456a:	2800      	cmp	r0, #0
 800456c:	d092      	beq.n	8004494 <__svfiscanf_r+0x21c>
 800456e:	e76b      	b.n	8004448 <__svfiscanf_r+0x1d0>
 8004570:	2b04      	cmp	r3, #4
 8004572:	dc06      	bgt.n	8004582 <__svfiscanf_r+0x30a>
 8004574:	466b      	mov	r3, sp
 8004576:	4622      	mov	r2, r4
 8004578:	4630      	mov	r0, r6
 800457a:	a941      	add	r1, sp, #260	; 0x104
 800457c:	f000 f8a4 	bl	80046c8 <_scanf_i>
 8004580:	e796      	b.n	80044b0 <__svfiscanf_r+0x238>
 8004582:	4b0f      	ldr	r3, [pc, #60]	; (80045c0 <__svfiscanf_r+0x348>)
 8004584:	2b00      	cmp	r3, #0
 8004586:	f43f aeaa 	beq.w	80042de <__svfiscanf_r+0x66>
 800458a:	466b      	mov	r3, sp
 800458c:	4622      	mov	r2, r4
 800458e:	4630      	mov	r0, r6
 8004590:	a941      	add	r1, sp, #260	; 0x104
 8004592:	f3af 8000 	nop.w
 8004596:	e78b      	b.n	80044b0 <__svfiscanf_r+0x238>
 8004598:	89a3      	ldrh	r3, [r4, #12]
 800459a:	0599      	lsls	r1, r3, #22
 800459c:	f53f af58 	bmi.w	8004450 <__svfiscanf_r+0x1d8>
 80045a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80045a2:	f7fe fd97 	bl	80030d4 <__retarget_lock_release_recursive>
 80045a6:	e753      	b.n	8004450 <__svfiscanf_r+0x1d8>
 80045a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80045aa:	07da      	lsls	r2, r3, #31
 80045ac:	d405      	bmi.n	80045ba <__svfiscanf_r+0x342>
 80045ae:	89a3      	ldrh	r3, [r4, #12]
 80045b0:	059b      	lsls	r3, r3, #22
 80045b2:	d402      	bmi.n	80045ba <__svfiscanf_r+0x342>
 80045b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80045b6:	f7fe fd8d 	bl	80030d4 <__retarget_lock_release_recursive>
 80045ba:	9844      	ldr	r0, [sp, #272]	; 0x110
 80045bc:	e751      	b.n	8004462 <__svfiscanf_r+0x1ea>
 80045be:	bf00      	nop
 80045c0:	00000000 	.word	0x00000000

080045c4 <_vfiscanf_r>:
 80045c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045c8:	460c      	mov	r4, r1
 80045ca:	4616      	mov	r6, r2
 80045cc:	461f      	mov	r7, r3
 80045ce:	4605      	mov	r5, r0
 80045d0:	b118      	cbz	r0, 80045da <_vfiscanf_r+0x16>
 80045d2:	6983      	ldr	r3, [r0, #24]
 80045d4:	b90b      	cbnz	r3, 80045da <_vfiscanf_r+0x16>
 80045d6:	f7fe fc8b 	bl	8002ef0 <__sinit>
 80045da:	4b0b      	ldr	r3, [pc, #44]	; (8004608 <_vfiscanf_r+0x44>)
 80045dc:	429c      	cmp	r4, r3
 80045de:	d108      	bne.n	80045f2 <_vfiscanf_r+0x2e>
 80045e0:	686c      	ldr	r4, [r5, #4]
 80045e2:	463b      	mov	r3, r7
 80045e4:	4632      	mov	r2, r6
 80045e6:	4621      	mov	r1, r4
 80045e8:	4628      	mov	r0, r5
 80045ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80045ee:	f7ff be43 	b.w	8004278 <__svfiscanf_r>
 80045f2:	4b06      	ldr	r3, [pc, #24]	; (800460c <_vfiscanf_r+0x48>)
 80045f4:	429c      	cmp	r4, r3
 80045f6:	d101      	bne.n	80045fc <_vfiscanf_r+0x38>
 80045f8:	68ac      	ldr	r4, [r5, #8]
 80045fa:	e7f2      	b.n	80045e2 <_vfiscanf_r+0x1e>
 80045fc:	4b04      	ldr	r3, [pc, #16]	; (8004610 <_vfiscanf_r+0x4c>)
 80045fe:	429c      	cmp	r4, r3
 8004600:	bf08      	it	eq
 8004602:	68ec      	ldreq	r4, [r5, #12]
 8004604:	e7ed      	b.n	80045e2 <_vfiscanf_r+0x1e>
 8004606:	bf00      	nop
 8004608:	0800562c 	.word	0x0800562c
 800460c:	0800564c 	.word	0x0800564c
 8004610:	0800560c 	.word	0x0800560c

08004614 <_scanf_chars>:
 8004614:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004618:	4615      	mov	r5, r2
 800461a:	688a      	ldr	r2, [r1, #8]
 800461c:	4680      	mov	r8, r0
 800461e:	460c      	mov	r4, r1
 8004620:	b932      	cbnz	r2, 8004630 <_scanf_chars+0x1c>
 8004622:	698a      	ldr	r2, [r1, #24]
 8004624:	2a00      	cmp	r2, #0
 8004626:	bf0c      	ite	eq
 8004628:	2201      	moveq	r2, #1
 800462a:	f04f 32ff 	movne.w	r2, #4294967295
 800462e:	608a      	str	r2, [r1, #8]
 8004630:	2700      	movs	r7, #0
 8004632:	6822      	ldr	r2, [r4, #0]
 8004634:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80046c4 <_scanf_chars+0xb0>
 8004638:	06d1      	lsls	r1, r2, #27
 800463a:	bf5f      	itttt	pl
 800463c:	681a      	ldrpl	r2, [r3, #0]
 800463e:	1d11      	addpl	r1, r2, #4
 8004640:	6019      	strpl	r1, [r3, #0]
 8004642:	6816      	ldrpl	r6, [r2, #0]
 8004644:	69a0      	ldr	r0, [r4, #24]
 8004646:	b188      	cbz	r0, 800466c <_scanf_chars+0x58>
 8004648:	2801      	cmp	r0, #1
 800464a:	d107      	bne.n	800465c <_scanf_chars+0x48>
 800464c:	682b      	ldr	r3, [r5, #0]
 800464e:	781a      	ldrb	r2, [r3, #0]
 8004650:	6963      	ldr	r3, [r4, #20]
 8004652:	5c9b      	ldrb	r3, [r3, r2]
 8004654:	b953      	cbnz	r3, 800466c <_scanf_chars+0x58>
 8004656:	2f00      	cmp	r7, #0
 8004658:	d031      	beq.n	80046be <_scanf_chars+0xaa>
 800465a:	e022      	b.n	80046a2 <_scanf_chars+0x8e>
 800465c:	2802      	cmp	r0, #2
 800465e:	d120      	bne.n	80046a2 <_scanf_chars+0x8e>
 8004660:	682b      	ldr	r3, [r5, #0]
 8004662:	781b      	ldrb	r3, [r3, #0]
 8004664:	f813 3009 	ldrb.w	r3, [r3, r9]
 8004668:	071b      	lsls	r3, r3, #28
 800466a:	d41a      	bmi.n	80046a2 <_scanf_chars+0x8e>
 800466c:	6823      	ldr	r3, [r4, #0]
 800466e:	3701      	adds	r7, #1
 8004670:	06da      	lsls	r2, r3, #27
 8004672:	bf5e      	ittt	pl
 8004674:	682b      	ldrpl	r3, [r5, #0]
 8004676:	781b      	ldrbpl	r3, [r3, #0]
 8004678:	f806 3b01 	strbpl.w	r3, [r6], #1
 800467c:	682a      	ldr	r2, [r5, #0]
 800467e:	686b      	ldr	r3, [r5, #4]
 8004680:	3201      	adds	r2, #1
 8004682:	602a      	str	r2, [r5, #0]
 8004684:	68a2      	ldr	r2, [r4, #8]
 8004686:	3b01      	subs	r3, #1
 8004688:	3a01      	subs	r2, #1
 800468a:	606b      	str	r3, [r5, #4]
 800468c:	60a2      	str	r2, [r4, #8]
 800468e:	b142      	cbz	r2, 80046a2 <_scanf_chars+0x8e>
 8004690:	2b00      	cmp	r3, #0
 8004692:	dcd7      	bgt.n	8004644 <_scanf_chars+0x30>
 8004694:	4629      	mov	r1, r5
 8004696:	4640      	mov	r0, r8
 8004698:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800469c:	4798      	blx	r3
 800469e:	2800      	cmp	r0, #0
 80046a0:	d0d0      	beq.n	8004644 <_scanf_chars+0x30>
 80046a2:	6823      	ldr	r3, [r4, #0]
 80046a4:	f013 0310 	ands.w	r3, r3, #16
 80046a8:	d105      	bne.n	80046b6 <_scanf_chars+0xa2>
 80046aa:	68e2      	ldr	r2, [r4, #12]
 80046ac:	3201      	adds	r2, #1
 80046ae:	60e2      	str	r2, [r4, #12]
 80046b0:	69a2      	ldr	r2, [r4, #24]
 80046b2:	b102      	cbz	r2, 80046b6 <_scanf_chars+0xa2>
 80046b4:	7033      	strb	r3, [r6, #0]
 80046b6:	2000      	movs	r0, #0
 80046b8:	6923      	ldr	r3, [r4, #16]
 80046ba:	443b      	add	r3, r7
 80046bc:	6123      	str	r3, [r4, #16]
 80046be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046c2:	bf00      	nop
 80046c4:	080056bf 	.word	0x080056bf

080046c8 <_scanf_i>:
 80046c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046cc:	460c      	mov	r4, r1
 80046ce:	4698      	mov	r8, r3
 80046d0:	4b75      	ldr	r3, [pc, #468]	; (80048a8 <_scanf_i+0x1e0>)
 80046d2:	b087      	sub	sp, #28
 80046d4:	4682      	mov	sl, r0
 80046d6:	4616      	mov	r6, r2
 80046d8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80046dc:	ab03      	add	r3, sp, #12
 80046de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80046e2:	4b72      	ldr	r3, [pc, #456]	; (80048ac <_scanf_i+0x1e4>)
 80046e4:	69a1      	ldr	r1, [r4, #24]
 80046e6:	4a72      	ldr	r2, [pc, #456]	; (80048b0 <_scanf_i+0x1e8>)
 80046e8:	4627      	mov	r7, r4
 80046ea:	2903      	cmp	r1, #3
 80046ec:	bf18      	it	ne
 80046ee:	461a      	movne	r2, r3
 80046f0:	68a3      	ldr	r3, [r4, #8]
 80046f2:	9201      	str	r2, [sp, #4]
 80046f4:	1e5a      	subs	r2, r3, #1
 80046f6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80046fa:	bf81      	itttt	hi
 80046fc:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8004700:	eb03 0905 	addhi.w	r9, r3, r5
 8004704:	f240 135d 	movwhi	r3, #349	; 0x15d
 8004708:	60a3      	strhi	r3, [r4, #8]
 800470a:	f857 3b1c 	ldr.w	r3, [r7], #28
 800470e:	bf98      	it	ls
 8004710:	f04f 0900 	movls.w	r9, #0
 8004714:	463d      	mov	r5, r7
 8004716:	f04f 0b00 	mov.w	fp, #0
 800471a:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800471e:	6023      	str	r3, [r4, #0]
 8004720:	6831      	ldr	r1, [r6, #0]
 8004722:	ab03      	add	r3, sp, #12
 8004724:	2202      	movs	r2, #2
 8004726:	7809      	ldrb	r1, [r1, #0]
 8004728:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800472c:	f000 fbb4 	bl	8004e98 <memchr>
 8004730:	b328      	cbz	r0, 800477e <_scanf_i+0xb6>
 8004732:	f1bb 0f01 	cmp.w	fp, #1
 8004736:	d159      	bne.n	80047ec <_scanf_i+0x124>
 8004738:	6862      	ldr	r2, [r4, #4]
 800473a:	b92a      	cbnz	r2, 8004748 <_scanf_i+0x80>
 800473c:	2308      	movs	r3, #8
 800473e:	6822      	ldr	r2, [r4, #0]
 8004740:	6063      	str	r3, [r4, #4]
 8004742:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004746:	6022      	str	r2, [r4, #0]
 8004748:	6822      	ldr	r2, [r4, #0]
 800474a:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800474e:	6022      	str	r2, [r4, #0]
 8004750:	68a2      	ldr	r2, [r4, #8]
 8004752:	1e51      	subs	r1, r2, #1
 8004754:	60a1      	str	r1, [r4, #8]
 8004756:	b192      	cbz	r2, 800477e <_scanf_i+0xb6>
 8004758:	6832      	ldr	r2, [r6, #0]
 800475a:	1c51      	adds	r1, r2, #1
 800475c:	6031      	str	r1, [r6, #0]
 800475e:	7812      	ldrb	r2, [r2, #0]
 8004760:	f805 2b01 	strb.w	r2, [r5], #1
 8004764:	6872      	ldr	r2, [r6, #4]
 8004766:	3a01      	subs	r2, #1
 8004768:	2a00      	cmp	r2, #0
 800476a:	6072      	str	r2, [r6, #4]
 800476c:	dc07      	bgt.n	800477e <_scanf_i+0xb6>
 800476e:	4631      	mov	r1, r6
 8004770:	4650      	mov	r0, sl
 8004772:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 8004776:	4790      	blx	r2
 8004778:	2800      	cmp	r0, #0
 800477a:	f040 8085 	bne.w	8004888 <_scanf_i+0x1c0>
 800477e:	f10b 0b01 	add.w	fp, fp, #1
 8004782:	f1bb 0f03 	cmp.w	fp, #3
 8004786:	d1cb      	bne.n	8004720 <_scanf_i+0x58>
 8004788:	6863      	ldr	r3, [r4, #4]
 800478a:	b90b      	cbnz	r3, 8004790 <_scanf_i+0xc8>
 800478c:	230a      	movs	r3, #10
 800478e:	6063      	str	r3, [r4, #4]
 8004790:	6863      	ldr	r3, [r4, #4]
 8004792:	4948      	ldr	r1, [pc, #288]	; (80048b4 <_scanf_i+0x1ec>)
 8004794:	6960      	ldr	r0, [r4, #20]
 8004796:	1ac9      	subs	r1, r1, r3
 8004798:	f000 f962 	bl	8004a60 <__sccl>
 800479c:	f04f 0b00 	mov.w	fp, #0
 80047a0:	68a3      	ldr	r3, [r4, #8]
 80047a2:	6822      	ldr	r2, [r4, #0]
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d03d      	beq.n	8004824 <_scanf_i+0x15c>
 80047a8:	6831      	ldr	r1, [r6, #0]
 80047aa:	6960      	ldr	r0, [r4, #20]
 80047ac:	f891 c000 	ldrb.w	ip, [r1]
 80047b0:	f810 000c 	ldrb.w	r0, [r0, ip]
 80047b4:	2800      	cmp	r0, #0
 80047b6:	d035      	beq.n	8004824 <_scanf_i+0x15c>
 80047b8:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 80047bc:	d124      	bne.n	8004808 <_scanf_i+0x140>
 80047be:	0510      	lsls	r0, r2, #20
 80047c0:	d522      	bpl.n	8004808 <_scanf_i+0x140>
 80047c2:	f10b 0b01 	add.w	fp, fp, #1
 80047c6:	f1b9 0f00 	cmp.w	r9, #0
 80047ca:	d003      	beq.n	80047d4 <_scanf_i+0x10c>
 80047cc:	3301      	adds	r3, #1
 80047ce:	f109 39ff 	add.w	r9, r9, #4294967295
 80047d2:	60a3      	str	r3, [r4, #8]
 80047d4:	6873      	ldr	r3, [r6, #4]
 80047d6:	3b01      	subs	r3, #1
 80047d8:	2b00      	cmp	r3, #0
 80047da:	6073      	str	r3, [r6, #4]
 80047dc:	dd1b      	ble.n	8004816 <_scanf_i+0x14e>
 80047de:	6833      	ldr	r3, [r6, #0]
 80047e0:	3301      	adds	r3, #1
 80047e2:	6033      	str	r3, [r6, #0]
 80047e4:	68a3      	ldr	r3, [r4, #8]
 80047e6:	3b01      	subs	r3, #1
 80047e8:	60a3      	str	r3, [r4, #8]
 80047ea:	e7d9      	b.n	80047a0 <_scanf_i+0xd8>
 80047ec:	f1bb 0f02 	cmp.w	fp, #2
 80047f0:	d1ae      	bne.n	8004750 <_scanf_i+0x88>
 80047f2:	6822      	ldr	r2, [r4, #0]
 80047f4:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 80047f8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80047fc:	d1bf      	bne.n	800477e <_scanf_i+0xb6>
 80047fe:	2310      	movs	r3, #16
 8004800:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004804:	6063      	str	r3, [r4, #4]
 8004806:	e7a2      	b.n	800474e <_scanf_i+0x86>
 8004808:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800480c:	6022      	str	r2, [r4, #0]
 800480e:	780b      	ldrb	r3, [r1, #0]
 8004810:	f805 3b01 	strb.w	r3, [r5], #1
 8004814:	e7de      	b.n	80047d4 <_scanf_i+0x10c>
 8004816:	4631      	mov	r1, r6
 8004818:	4650      	mov	r0, sl
 800481a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800481e:	4798      	blx	r3
 8004820:	2800      	cmp	r0, #0
 8004822:	d0df      	beq.n	80047e4 <_scanf_i+0x11c>
 8004824:	6823      	ldr	r3, [r4, #0]
 8004826:	05db      	lsls	r3, r3, #23
 8004828:	d50d      	bpl.n	8004846 <_scanf_i+0x17e>
 800482a:	42bd      	cmp	r5, r7
 800482c:	d909      	bls.n	8004842 <_scanf_i+0x17a>
 800482e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8004832:	4632      	mov	r2, r6
 8004834:	4650      	mov	r0, sl
 8004836:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800483a:	f105 39ff 	add.w	r9, r5, #4294967295
 800483e:	4798      	blx	r3
 8004840:	464d      	mov	r5, r9
 8004842:	42bd      	cmp	r5, r7
 8004844:	d02d      	beq.n	80048a2 <_scanf_i+0x1da>
 8004846:	6822      	ldr	r2, [r4, #0]
 8004848:	f012 0210 	ands.w	r2, r2, #16
 800484c:	d113      	bne.n	8004876 <_scanf_i+0x1ae>
 800484e:	702a      	strb	r2, [r5, #0]
 8004850:	4639      	mov	r1, r7
 8004852:	6863      	ldr	r3, [r4, #4]
 8004854:	4650      	mov	r0, sl
 8004856:	9e01      	ldr	r6, [sp, #4]
 8004858:	47b0      	blx	r6
 800485a:	6821      	ldr	r1, [r4, #0]
 800485c:	f8d8 3000 	ldr.w	r3, [r8]
 8004860:	f011 0f20 	tst.w	r1, #32
 8004864:	d013      	beq.n	800488e <_scanf_i+0x1c6>
 8004866:	1d1a      	adds	r2, r3, #4
 8004868:	f8c8 2000 	str.w	r2, [r8]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	6018      	str	r0, [r3, #0]
 8004870:	68e3      	ldr	r3, [r4, #12]
 8004872:	3301      	adds	r3, #1
 8004874:	60e3      	str	r3, [r4, #12]
 8004876:	2000      	movs	r0, #0
 8004878:	1bed      	subs	r5, r5, r7
 800487a:	44ab      	add	fp, r5
 800487c:	6925      	ldr	r5, [r4, #16]
 800487e:	445d      	add	r5, fp
 8004880:	6125      	str	r5, [r4, #16]
 8004882:	b007      	add	sp, #28
 8004884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004888:	f04f 0b00 	mov.w	fp, #0
 800488c:	e7ca      	b.n	8004824 <_scanf_i+0x15c>
 800488e:	1d1a      	adds	r2, r3, #4
 8004890:	f8c8 2000 	str.w	r2, [r8]
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	f011 0f01 	tst.w	r1, #1
 800489a:	bf14      	ite	ne
 800489c:	8018      	strhne	r0, [r3, #0]
 800489e:	6018      	streq	r0, [r3, #0]
 80048a0:	e7e6      	b.n	8004870 <_scanf_i+0x1a8>
 80048a2:	2001      	movs	r0, #1
 80048a4:	e7ed      	b.n	8004882 <_scanf_i+0x1ba>
 80048a6:	bf00      	nop
 80048a8:	080055e8 	.word	0x080055e8
 80048ac:	08004cb1 	.word	0x08004cb1
 80048b0:	08004bc9 	.word	0x08004bc9
 80048b4:	080056bc 	.word	0x080056bc

080048b8 <_read_r>:
 80048b8:	b538      	push	{r3, r4, r5, lr}
 80048ba:	4604      	mov	r4, r0
 80048bc:	4608      	mov	r0, r1
 80048be:	4611      	mov	r1, r2
 80048c0:	2200      	movs	r2, #0
 80048c2:	4d05      	ldr	r5, [pc, #20]	; (80048d8 <_read_r+0x20>)
 80048c4:	602a      	str	r2, [r5, #0]
 80048c6:	461a      	mov	r2, r3
 80048c8:	f7fc fb8a 	bl	8000fe0 <_read>
 80048cc:	1c43      	adds	r3, r0, #1
 80048ce:	d102      	bne.n	80048d6 <_read_r+0x1e>
 80048d0:	682b      	ldr	r3, [r5, #0]
 80048d2:	b103      	cbz	r3, 80048d6 <_read_r+0x1e>
 80048d4:	6023      	str	r3, [r4, #0]
 80048d6:	bd38      	pop	{r3, r4, r5, pc}
 80048d8:	20000128 	.word	0x20000128

080048dc <lflush>:
 80048dc:	8983      	ldrh	r3, [r0, #12]
 80048de:	f003 0309 	and.w	r3, r3, #9
 80048e2:	2b09      	cmp	r3, #9
 80048e4:	d101      	bne.n	80048ea <lflush+0xe>
 80048e6:	f7fe ba99 	b.w	8002e1c <fflush>
 80048ea:	2000      	movs	r0, #0
 80048ec:	4770      	bx	lr
	...

080048f0 <__srefill_r>:
 80048f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048f2:	460c      	mov	r4, r1
 80048f4:	4605      	mov	r5, r0
 80048f6:	b118      	cbz	r0, 8004900 <__srefill_r+0x10>
 80048f8:	6983      	ldr	r3, [r0, #24]
 80048fa:	b90b      	cbnz	r3, 8004900 <__srefill_r+0x10>
 80048fc:	f7fe faf8 	bl	8002ef0 <__sinit>
 8004900:	4b3c      	ldr	r3, [pc, #240]	; (80049f4 <__srefill_r+0x104>)
 8004902:	429c      	cmp	r4, r3
 8004904:	d10a      	bne.n	800491c <__srefill_r+0x2c>
 8004906:	686c      	ldr	r4, [r5, #4]
 8004908:	2300      	movs	r3, #0
 800490a:	6063      	str	r3, [r4, #4]
 800490c:	89a3      	ldrh	r3, [r4, #12]
 800490e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004912:	069e      	lsls	r6, r3, #26
 8004914:	d50c      	bpl.n	8004930 <__srefill_r+0x40>
 8004916:	f04f 30ff 	mov.w	r0, #4294967295
 800491a:	e067      	b.n	80049ec <__srefill_r+0xfc>
 800491c:	4b36      	ldr	r3, [pc, #216]	; (80049f8 <__srefill_r+0x108>)
 800491e:	429c      	cmp	r4, r3
 8004920:	d101      	bne.n	8004926 <__srefill_r+0x36>
 8004922:	68ac      	ldr	r4, [r5, #8]
 8004924:	e7f0      	b.n	8004908 <__srefill_r+0x18>
 8004926:	4b35      	ldr	r3, [pc, #212]	; (80049fc <__srefill_r+0x10c>)
 8004928:	429c      	cmp	r4, r3
 800492a:	bf08      	it	eq
 800492c:	68ec      	ldreq	r4, [r5, #12]
 800492e:	e7eb      	b.n	8004908 <__srefill_r+0x18>
 8004930:	0758      	lsls	r0, r3, #29
 8004932:	d449      	bmi.n	80049c8 <__srefill_r+0xd8>
 8004934:	06d9      	lsls	r1, r3, #27
 8004936:	d405      	bmi.n	8004944 <__srefill_r+0x54>
 8004938:	2309      	movs	r3, #9
 800493a:	602b      	str	r3, [r5, #0]
 800493c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004940:	81a3      	strh	r3, [r4, #12]
 8004942:	e7e8      	b.n	8004916 <__srefill_r+0x26>
 8004944:	071a      	lsls	r2, r3, #28
 8004946:	d50b      	bpl.n	8004960 <__srefill_r+0x70>
 8004948:	4621      	mov	r1, r4
 800494a:	4628      	mov	r0, r5
 800494c:	f7fe fa2a 	bl	8002da4 <_fflush_r>
 8004950:	2800      	cmp	r0, #0
 8004952:	d1e0      	bne.n	8004916 <__srefill_r+0x26>
 8004954:	89a3      	ldrh	r3, [r4, #12]
 8004956:	60a0      	str	r0, [r4, #8]
 8004958:	f023 0308 	bic.w	r3, r3, #8
 800495c:	81a3      	strh	r3, [r4, #12]
 800495e:	61a0      	str	r0, [r4, #24]
 8004960:	89a3      	ldrh	r3, [r4, #12]
 8004962:	f043 0304 	orr.w	r3, r3, #4
 8004966:	81a3      	strh	r3, [r4, #12]
 8004968:	6923      	ldr	r3, [r4, #16]
 800496a:	b91b      	cbnz	r3, 8004974 <__srefill_r+0x84>
 800496c:	4621      	mov	r1, r4
 800496e:	4628      	mov	r0, r5
 8004970:	f7fe ffe4 	bl	800393c <__smakebuf_r>
 8004974:	89a6      	ldrh	r6, [r4, #12]
 8004976:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 800497a:	07b3      	lsls	r3, r6, #30
 800497c:	d00f      	beq.n	800499e <__srefill_r+0xae>
 800497e:	2301      	movs	r3, #1
 8004980:	81a3      	strh	r3, [r4, #12]
 8004982:	4b1f      	ldr	r3, [pc, #124]	; (8004a00 <__srefill_r+0x110>)
 8004984:	491f      	ldr	r1, [pc, #124]	; (8004a04 <__srefill_r+0x114>)
 8004986:	6818      	ldr	r0, [r3, #0]
 8004988:	f006 0609 	and.w	r6, r6, #9
 800498c:	f7fe fb2e 	bl	8002fec <_fwalk>
 8004990:	2e09      	cmp	r6, #9
 8004992:	81a7      	strh	r7, [r4, #12]
 8004994:	d103      	bne.n	800499e <__srefill_r+0xae>
 8004996:	4621      	mov	r1, r4
 8004998:	4628      	mov	r0, r5
 800499a:	f7fe f981 	bl	8002ca0 <__sflush_r>
 800499e:	6922      	ldr	r2, [r4, #16]
 80049a0:	4628      	mov	r0, r5
 80049a2:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80049a4:	6963      	ldr	r3, [r4, #20]
 80049a6:	6a21      	ldr	r1, [r4, #32]
 80049a8:	6022      	str	r2, [r4, #0]
 80049aa:	47b0      	blx	r6
 80049ac:	2800      	cmp	r0, #0
 80049ae:	6060      	str	r0, [r4, #4]
 80049b0:	dc1d      	bgt.n	80049ee <__srefill_r+0xfe>
 80049b2:	bf18      	it	ne
 80049b4:	2200      	movne	r2, #0
 80049b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80049ba:	bf16      	itet	ne
 80049bc:	6062      	strne	r2, [r4, #4]
 80049be:	f043 0320 	orreq.w	r3, r3, #32
 80049c2:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80049c6:	e7bb      	b.n	8004940 <__srefill_r+0x50>
 80049c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80049ca:	2900      	cmp	r1, #0
 80049cc:	d0cc      	beq.n	8004968 <__srefill_r+0x78>
 80049ce:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80049d2:	4299      	cmp	r1, r3
 80049d4:	d002      	beq.n	80049dc <__srefill_r+0xec>
 80049d6:	4628      	mov	r0, r5
 80049d8:	f7fe fb86 	bl	80030e8 <_free_r>
 80049dc:	2000      	movs	r0, #0
 80049de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80049e0:	6360      	str	r0, [r4, #52]	; 0x34
 80049e2:	6063      	str	r3, [r4, #4]
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d0bf      	beq.n	8004968 <__srefill_r+0x78>
 80049e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80049ea:	6023      	str	r3, [r4, #0]
 80049ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80049ee:	2000      	movs	r0, #0
 80049f0:	e7fc      	b.n	80049ec <__srefill_r+0xfc>
 80049f2:	bf00      	nop
 80049f4:	0800562c 	.word	0x0800562c
 80049f8:	0800564c 	.word	0x0800564c
 80049fc:	0800560c 	.word	0x0800560c
 8004a00:	0800566c 	.word	0x0800566c
 8004a04:	080048dd 	.word	0x080048dd

08004a08 <__srget_r>:
 8004a08:	b538      	push	{r3, r4, r5, lr}
 8004a0a:	460c      	mov	r4, r1
 8004a0c:	4605      	mov	r5, r0
 8004a0e:	b118      	cbz	r0, 8004a18 <__srget_r+0x10>
 8004a10:	6983      	ldr	r3, [r0, #24]
 8004a12:	b90b      	cbnz	r3, 8004a18 <__srget_r+0x10>
 8004a14:	f7fe fa6c 	bl	8002ef0 <__sinit>
 8004a18:	4b0e      	ldr	r3, [pc, #56]	; (8004a54 <__srget_r+0x4c>)
 8004a1a:	429c      	cmp	r4, r3
 8004a1c:	d10d      	bne.n	8004a3a <__srget_r+0x32>
 8004a1e:	686c      	ldr	r4, [r5, #4]
 8004a20:	4621      	mov	r1, r4
 8004a22:	4628      	mov	r0, r5
 8004a24:	f7ff ff64 	bl	80048f0 <__srefill_r>
 8004a28:	b988      	cbnz	r0, 8004a4e <__srget_r+0x46>
 8004a2a:	6863      	ldr	r3, [r4, #4]
 8004a2c:	3b01      	subs	r3, #1
 8004a2e:	6063      	str	r3, [r4, #4]
 8004a30:	6823      	ldr	r3, [r4, #0]
 8004a32:	1c5a      	adds	r2, r3, #1
 8004a34:	6022      	str	r2, [r4, #0]
 8004a36:	7818      	ldrb	r0, [r3, #0]
 8004a38:	bd38      	pop	{r3, r4, r5, pc}
 8004a3a:	4b07      	ldr	r3, [pc, #28]	; (8004a58 <__srget_r+0x50>)
 8004a3c:	429c      	cmp	r4, r3
 8004a3e:	d101      	bne.n	8004a44 <__srget_r+0x3c>
 8004a40:	68ac      	ldr	r4, [r5, #8]
 8004a42:	e7ed      	b.n	8004a20 <__srget_r+0x18>
 8004a44:	4b05      	ldr	r3, [pc, #20]	; (8004a5c <__srget_r+0x54>)
 8004a46:	429c      	cmp	r4, r3
 8004a48:	bf08      	it	eq
 8004a4a:	68ec      	ldreq	r4, [r5, #12]
 8004a4c:	e7e8      	b.n	8004a20 <__srget_r+0x18>
 8004a4e:	f04f 30ff 	mov.w	r0, #4294967295
 8004a52:	e7f1      	b.n	8004a38 <__srget_r+0x30>
 8004a54:	0800562c 	.word	0x0800562c
 8004a58:	0800564c 	.word	0x0800564c
 8004a5c:	0800560c 	.word	0x0800560c

08004a60 <__sccl>:
 8004a60:	b570      	push	{r4, r5, r6, lr}
 8004a62:	780b      	ldrb	r3, [r1, #0]
 8004a64:	4604      	mov	r4, r0
 8004a66:	2b5e      	cmp	r3, #94	; 0x5e
 8004a68:	bf13      	iteet	ne
 8004a6a:	2200      	movne	r2, #0
 8004a6c:	2201      	moveq	r2, #1
 8004a6e:	784b      	ldrbeq	r3, [r1, #1]
 8004a70:	1c48      	addne	r0, r1, #1
 8004a72:	bf08      	it	eq
 8004a74:	1c88      	addeq	r0, r1, #2
 8004a76:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8004a7a:	1e61      	subs	r1, r4, #1
 8004a7c:	f801 2f01 	strb.w	r2, [r1, #1]!
 8004a80:	42a9      	cmp	r1, r5
 8004a82:	d1fb      	bne.n	8004a7c <__sccl+0x1c>
 8004a84:	b90b      	cbnz	r3, 8004a8a <__sccl+0x2a>
 8004a86:	3801      	subs	r0, #1
 8004a88:	bd70      	pop	{r4, r5, r6, pc}
 8004a8a:	f082 0201 	eor.w	r2, r2, #1
 8004a8e:	4605      	mov	r5, r0
 8004a90:	54e2      	strb	r2, [r4, r3]
 8004a92:	4628      	mov	r0, r5
 8004a94:	f810 1b01 	ldrb.w	r1, [r0], #1
 8004a98:	292d      	cmp	r1, #45	; 0x2d
 8004a9a:	d006      	beq.n	8004aaa <__sccl+0x4a>
 8004a9c:	295d      	cmp	r1, #93	; 0x5d
 8004a9e:	d0f3      	beq.n	8004a88 <__sccl+0x28>
 8004aa0:	b909      	cbnz	r1, 8004aa6 <__sccl+0x46>
 8004aa2:	4628      	mov	r0, r5
 8004aa4:	e7f0      	b.n	8004a88 <__sccl+0x28>
 8004aa6:	460b      	mov	r3, r1
 8004aa8:	e7f1      	b.n	8004a8e <__sccl+0x2e>
 8004aaa:	786e      	ldrb	r6, [r5, #1]
 8004aac:	2e5d      	cmp	r6, #93	; 0x5d
 8004aae:	d0fa      	beq.n	8004aa6 <__sccl+0x46>
 8004ab0:	42b3      	cmp	r3, r6
 8004ab2:	dcf8      	bgt.n	8004aa6 <__sccl+0x46>
 8004ab4:	4619      	mov	r1, r3
 8004ab6:	3502      	adds	r5, #2
 8004ab8:	3101      	adds	r1, #1
 8004aba:	428e      	cmp	r6, r1
 8004abc:	5462      	strb	r2, [r4, r1]
 8004abe:	dcfb      	bgt.n	8004ab8 <__sccl+0x58>
 8004ac0:	1af1      	subs	r1, r6, r3
 8004ac2:	3901      	subs	r1, #1
 8004ac4:	42b3      	cmp	r3, r6
 8004ac6:	bfa8      	it	ge
 8004ac8:	2100      	movge	r1, #0
 8004aca:	1c58      	adds	r0, r3, #1
 8004acc:	1843      	adds	r3, r0, r1
 8004ace:	e7e0      	b.n	8004a92 <__sccl+0x32>

08004ad0 <_strtol_l.constprop.0>:
 8004ad0:	2b01      	cmp	r3, #1
 8004ad2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ad6:	4680      	mov	r8, r0
 8004ad8:	d001      	beq.n	8004ade <_strtol_l.constprop.0+0xe>
 8004ada:	2b24      	cmp	r3, #36	; 0x24
 8004adc:	d906      	bls.n	8004aec <_strtol_l.constprop.0+0x1c>
 8004ade:	f7fe f8d9 	bl	8002c94 <__errno>
 8004ae2:	2316      	movs	r3, #22
 8004ae4:	6003      	str	r3, [r0, #0]
 8004ae6:	2000      	movs	r0, #0
 8004ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004aec:	460d      	mov	r5, r1
 8004aee:	4f35      	ldr	r7, [pc, #212]	; (8004bc4 <_strtol_l.constprop.0+0xf4>)
 8004af0:	4628      	mov	r0, r5
 8004af2:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004af6:	5de6      	ldrb	r6, [r4, r7]
 8004af8:	f016 0608 	ands.w	r6, r6, #8
 8004afc:	d1f8      	bne.n	8004af0 <_strtol_l.constprop.0+0x20>
 8004afe:	2c2d      	cmp	r4, #45	; 0x2d
 8004b00:	d12f      	bne.n	8004b62 <_strtol_l.constprop.0+0x92>
 8004b02:	2601      	movs	r6, #1
 8004b04:	782c      	ldrb	r4, [r5, #0]
 8004b06:	1c85      	adds	r5, r0, #2
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	d057      	beq.n	8004bbc <_strtol_l.constprop.0+0xec>
 8004b0c:	2b10      	cmp	r3, #16
 8004b0e:	d109      	bne.n	8004b24 <_strtol_l.constprop.0+0x54>
 8004b10:	2c30      	cmp	r4, #48	; 0x30
 8004b12:	d107      	bne.n	8004b24 <_strtol_l.constprop.0+0x54>
 8004b14:	7828      	ldrb	r0, [r5, #0]
 8004b16:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8004b1a:	2858      	cmp	r0, #88	; 0x58
 8004b1c:	d149      	bne.n	8004bb2 <_strtol_l.constprop.0+0xe2>
 8004b1e:	2310      	movs	r3, #16
 8004b20:	786c      	ldrb	r4, [r5, #1]
 8004b22:	3502      	adds	r5, #2
 8004b24:	2700      	movs	r7, #0
 8004b26:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 8004b2a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8004b2e:	fbbe f9f3 	udiv	r9, lr, r3
 8004b32:	4638      	mov	r0, r7
 8004b34:	fb03 ea19 	mls	sl, r3, r9, lr
 8004b38:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8004b3c:	f1bc 0f09 	cmp.w	ip, #9
 8004b40:	d814      	bhi.n	8004b6c <_strtol_l.constprop.0+0x9c>
 8004b42:	4664      	mov	r4, ip
 8004b44:	42a3      	cmp	r3, r4
 8004b46:	dd22      	ble.n	8004b8e <_strtol_l.constprop.0+0xbe>
 8004b48:	2f00      	cmp	r7, #0
 8004b4a:	db1d      	blt.n	8004b88 <_strtol_l.constprop.0+0xb8>
 8004b4c:	4581      	cmp	r9, r0
 8004b4e:	d31b      	bcc.n	8004b88 <_strtol_l.constprop.0+0xb8>
 8004b50:	d101      	bne.n	8004b56 <_strtol_l.constprop.0+0x86>
 8004b52:	45a2      	cmp	sl, r4
 8004b54:	db18      	blt.n	8004b88 <_strtol_l.constprop.0+0xb8>
 8004b56:	2701      	movs	r7, #1
 8004b58:	fb00 4003 	mla	r0, r0, r3, r4
 8004b5c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004b60:	e7ea      	b.n	8004b38 <_strtol_l.constprop.0+0x68>
 8004b62:	2c2b      	cmp	r4, #43	; 0x2b
 8004b64:	bf04      	itt	eq
 8004b66:	782c      	ldrbeq	r4, [r5, #0]
 8004b68:	1c85      	addeq	r5, r0, #2
 8004b6a:	e7cd      	b.n	8004b08 <_strtol_l.constprop.0+0x38>
 8004b6c:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8004b70:	f1bc 0f19 	cmp.w	ip, #25
 8004b74:	d801      	bhi.n	8004b7a <_strtol_l.constprop.0+0xaa>
 8004b76:	3c37      	subs	r4, #55	; 0x37
 8004b78:	e7e4      	b.n	8004b44 <_strtol_l.constprop.0+0x74>
 8004b7a:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8004b7e:	f1bc 0f19 	cmp.w	ip, #25
 8004b82:	d804      	bhi.n	8004b8e <_strtol_l.constprop.0+0xbe>
 8004b84:	3c57      	subs	r4, #87	; 0x57
 8004b86:	e7dd      	b.n	8004b44 <_strtol_l.constprop.0+0x74>
 8004b88:	f04f 37ff 	mov.w	r7, #4294967295
 8004b8c:	e7e6      	b.n	8004b5c <_strtol_l.constprop.0+0x8c>
 8004b8e:	2f00      	cmp	r7, #0
 8004b90:	da07      	bge.n	8004ba2 <_strtol_l.constprop.0+0xd2>
 8004b92:	2322      	movs	r3, #34	; 0x22
 8004b94:	4670      	mov	r0, lr
 8004b96:	f8c8 3000 	str.w	r3, [r8]
 8004b9a:	2a00      	cmp	r2, #0
 8004b9c:	d0a4      	beq.n	8004ae8 <_strtol_l.constprop.0+0x18>
 8004b9e:	1e69      	subs	r1, r5, #1
 8004ba0:	e005      	b.n	8004bae <_strtol_l.constprop.0+0xde>
 8004ba2:	b106      	cbz	r6, 8004ba6 <_strtol_l.constprop.0+0xd6>
 8004ba4:	4240      	negs	r0, r0
 8004ba6:	2a00      	cmp	r2, #0
 8004ba8:	d09e      	beq.n	8004ae8 <_strtol_l.constprop.0+0x18>
 8004baa:	2f00      	cmp	r7, #0
 8004bac:	d1f7      	bne.n	8004b9e <_strtol_l.constprop.0+0xce>
 8004bae:	6011      	str	r1, [r2, #0]
 8004bb0:	e79a      	b.n	8004ae8 <_strtol_l.constprop.0+0x18>
 8004bb2:	2430      	movs	r4, #48	; 0x30
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d1b5      	bne.n	8004b24 <_strtol_l.constprop.0+0x54>
 8004bb8:	2308      	movs	r3, #8
 8004bba:	e7b3      	b.n	8004b24 <_strtol_l.constprop.0+0x54>
 8004bbc:	2c30      	cmp	r4, #48	; 0x30
 8004bbe:	d0a9      	beq.n	8004b14 <_strtol_l.constprop.0+0x44>
 8004bc0:	230a      	movs	r3, #10
 8004bc2:	e7af      	b.n	8004b24 <_strtol_l.constprop.0+0x54>
 8004bc4:	080056bf 	.word	0x080056bf

08004bc8 <_strtol_r>:
 8004bc8:	f7ff bf82 	b.w	8004ad0 <_strtol_l.constprop.0>

08004bcc <_strtoul_l.constprop.0>:
 8004bcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004bd0:	4686      	mov	lr, r0
 8004bd2:	460d      	mov	r5, r1
 8004bd4:	4f35      	ldr	r7, [pc, #212]	; (8004cac <_strtoul_l.constprop.0+0xe0>)
 8004bd6:	4628      	mov	r0, r5
 8004bd8:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004bdc:	5de6      	ldrb	r6, [r4, r7]
 8004bde:	f016 0608 	ands.w	r6, r6, #8
 8004be2:	d1f8      	bne.n	8004bd6 <_strtoul_l.constprop.0+0xa>
 8004be4:	2c2d      	cmp	r4, #45	; 0x2d
 8004be6:	d12f      	bne.n	8004c48 <_strtoul_l.constprop.0+0x7c>
 8004be8:	2601      	movs	r6, #1
 8004bea:	782c      	ldrb	r4, [r5, #0]
 8004bec:	1c85      	adds	r5, r0, #2
 8004bee:	2b00      	cmp	r3, #0
 8004bf0:	d057      	beq.n	8004ca2 <_strtoul_l.constprop.0+0xd6>
 8004bf2:	2b10      	cmp	r3, #16
 8004bf4:	d109      	bne.n	8004c0a <_strtoul_l.constprop.0+0x3e>
 8004bf6:	2c30      	cmp	r4, #48	; 0x30
 8004bf8:	d107      	bne.n	8004c0a <_strtoul_l.constprop.0+0x3e>
 8004bfa:	7828      	ldrb	r0, [r5, #0]
 8004bfc:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8004c00:	2858      	cmp	r0, #88	; 0x58
 8004c02:	d149      	bne.n	8004c98 <_strtoul_l.constprop.0+0xcc>
 8004c04:	2310      	movs	r3, #16
 8004c06:	786c      	ldrb	r4, [r5, #1]
 8004c08:	3502      	adds	r5, #2
 8004c0a:	f04f 38ff 	mov.w	r8, #4294967295
 8004c0e:	fbb8 f8f3 	udiv	r8, r8, r3
 8004c12:	2700      	movs	r7, #0
 8004c14:	fb03 f908 	mul.w	r9, r3, r8
 8004c18:	4638      	mov	r0, r7
 8004c1a:	ea6f 0909 	mvn.w	r9, r9
 8004c1e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8004c22:	f1bc 0f09 	cmp.w	ip, #9
 8004c26:	d814      	bhi.n	8004c52 <_strtoul_l.constprop.0+0x86>
 8004c28:	4664      	mov	r4, ip
 8004c2a:	42a3      	cmp	r3, r4
 8004c2c:	dd22      	ble.n	8004c74 <_strtoul_l.constprop.0+0xa8>
 8004c2e:	2f00      	cmp	r7, #0
 8004c30:	db1d      	blt.n	8004c6e <_strtoul_l.constprop.0+0xa2>
 8004c32:	4580      	cmp	r8, r0
 8004c34:	d31b      	bcc.n	8004c6e <_strtoul_l.constprop.0+0xa2>
 8004c36:	d101      	bne.n	8004c3c <_strtoul_l.constprop.0+0x70>
 8004c38:	45a1      	cmp	r9, r4
 8004c3a:	db18      	blt.n	8004c6e <_strtoul_l.constprop.0+0xa2>
 8004c3c:	2701      	movs	r7, #1
 8004c3e:	fb00 4003 	mla	r0, r0, r3, r4
 8004c42:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004c46:	e7ea      	b.n	8004c1e <_strtoul_l.constprop.0+0x52>
 8004c48:	2c2b      	cmp	r4, #43	; 0x2b
 8004c4a:	bf04      	itt	eq
 8004c4c:	782c      	ldrbeq	r4, [r5, #0]
 8004c4e:	1c85      	addeq	r5, r0, #2
 8004c50:	e7cd      	b.n	8004bee <_strtoul_l.constprop.0+0x22>
 8004c52:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8004c56:	f1bc 0f19 	cmp.w	ip, #25
 8004c5a:	d801      	bhi.n	8004c60 <_strtoul_l.constprop.0+0x94>
 8004c5c:	3c37      	subs	r4, #55	; 0x37
 8004c5e:	e7e4      	b.n	8004c2a <_strtoul_l.constprop.0+0x5e>
 8004c60:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8004c64:	f1bc 0f19 	cmp.w	ip, #25
 8004c68:	d804      	bhi.n	8004c74 <_strtoul_l.constprop.0+0xa8>
 8004c6a:	3c57      	subs	r4, #87	; 0x57
 8004c6c:	e7dd      	b.n	8004c2a <_strtoul_l.constprop.0+0x5e>
 8004c6e:	f04f 37ff 	mov.w	r7, #4294967295
 8004c72:	e7e6      	b.n	8004c42 <_strtoul_l.constprop.0+0x76>
 8004c74:	2f00      	cmp	r7, #0
 8004c76:	da07      	bge.n	8004c88 <_strtoul_l.constprop.0+0xbc>
 8004c78:	2322      	movs	r3, #34	; 0x22
 8004c7a:	f04f 30ff 	mov.w	r0, #4294967295
 8004c7e:	f8ce 3000 	str.w	r3, [lr]
 8004c82:	b932      	cbnz	r2, 8004c92 <_strtoul_l.constprop.0+0xc6>
 8004c84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004c88:	b106      	cbz	r6, 8004c8c <_strtoul_l.constprop.0+0xc0>
 8004c8a:	4240      	negs	r0, r0
 8004c8c:	2a00      	cmp	r2, #0
 8004c8e:	d0f9      	beq.n	8004c84 <_strtoul_l.constprop.0+0xb8>
 8004c90:	b107      	cbz	r7, 8004c94 <_strtoul_l.constprop.0+0xc8>
 8004c92:	1e69      	subs	r1, r5, #1
 8004c94:	6011      	str	r1, [r2, #0]
 8004c96:	e7f5      	b.n	8004c84 <_strtoul_l.constprop.0+0xb8>
 8004c98:	2430      	movs	r4, #48	; 0x30
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d1b5      	bne.n	8004c0a <_strtoul_l.constprop.0+0x3e>
 8004c9e:	2308      	movs	r3, #8
 8004ca0:	e7b3      	b.n	8004c0a <_strtoul_l.constprop.0+0x3e>
 8004ca2:	2c30      	cmp	r4, #48	; 0x30
 8004ca4:	d0a9      	beq.n	8004bfa <_strtoul_l.constprop.0+0x2e>
 8004ca6:	230a      	movs	r3, #10
 8004ca8:	e7af      	b.n	8004c0a <_strtoul_l.constprop.0+0x3e>
 8004caa:	bf00      	nop
 8004cac:	080056bf 	.word	0x080056bf

08004cb0 <_strtoul_r>:
 8004cb0:	f7ff bf8c 	b.w	8004bcc <_strtoul_l.constprop.0>

08004cb4 <__submore>:
 8004cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cb8:	460c      	mov	r4, r1
 8004cba:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8004cbc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004cc0:	4299      	cmp	r1, r3
 8004cc2:	d11b      	bne.n	8004cfc <__submore+0x48>
 8004cc4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004cc8:	f7fe fa76 	bl	80031b8 <_malloc_r>
 8004ccc:	b918      	cbnz	r0, 8004cd6 <__submore+0x22>
 8004cce:	f04f 30ff 	mov.w	r0, #4294967295
 8004cd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004cd6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004cda:	63a3      	str	r3, [r4, #56]	; 0x38
 8004cdc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8004ce0:	6360      	str	r0, [r4, #52]	; 0x34
 8004ce2:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8004ce6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8004cea:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8004cee:	7043      	strb	r3, [r0, #1]
 8004cf0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8004cf4:	7003      	strb	r3, [r0, #0]
 8004cf6:	6020      	str	r0, [r4, #0]
 8004cf8:	2000      	movs	r0, #0
 8004cfa:	e7ea      	b.n	8004cd2 <__submore+0x1e>
 8004cfc:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8004cfe:	0077      	lsls	r7, r6, #1
 8004d00:	463a      	mov	r2, r7
 8004d02:	f000 f8ff 	bl	8004f04 <_realloc_r>
 8004d06:	4605      	mov	r5, r0
 8004d08:	2800      	cmp	r0, #0
 8004d0a:	d0e0      	beq.n	8004cce <__submore+0x1a>
 8004d0c:	eb00 0806 	add.w	r8, r0, r6
 8004d10:	4601      	mov	r1, r0
 8004d12:	4632      	mov	r2, r6
 8004d14:	4640      	mov	r0, r8
 8004d16:	f000 f8cd 	bl	8004eb4 <memcpy>
 8004d1a:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8004d1e:	f8c4 8000 	str.w	r8, [r4]
 8004d22:	e7e9      	b.n	8004cf8 <__submore+0x44>

08004d24 <_ungetc_r>:
 8004d24:	b570      	push	{r4, r5, r6, lr}
 8004d26:	4614      	mov	r4, r2
 8004d28:	1c4a      	adds	r2, r1, #1
 8004d2a:	4606      	mov	r6, r0
 8004d2c:	460d      	mov	r5, r1
 8004d2e:	d103      	bne.n	8004d38 <_ungetc_r+0x14>
 8004d30:	f04f 35ff 	mov.w	r5, #4294967295
 8004d34:	4628      	mov	r0, r5
 8004d36:	bd70      	pop	{r4, r5, r6, pc}
 8004d38:	b118      	cbz	r0, 8004d42 <_ungetc_r+0x1e>
 8004d3a:	6983      	ldr	r3, [r0, #24]
 8004d3c:	b90b      	cbnz	r3, 8004d42 <_ungetc_r+0x1e>
 8004d3e:	f7fe f8d7 	bl	8002ef0 <__sinit>
 8004d42:	4b41      	ldr	r3, [pc, #260]	; (8004e48 <_ungetc_r+0x124>)
 8004d44:	429c      	cmp	r4, r3
 8004d46:	d11d      	bne.n	8004d84 <_ungetc_r+0x60>
 8004d48:	6874      	ldr	r4, [r6, #4]
 8004d4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004d4c:	07db      	lsls	r3, r3, #31
 8004d4e:	d405      	bmi.n	8004d5c <_ungetc_r+0x38>
 8004d50:	89a3      	ldrh	r3, [r4, #12]
 8004d52:	0598      	lsls	r0, r3, #22
 8004d54:	d402      	bmi.n	8004d5c <_ungetc_r+0x38>
 8004d56:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004d58:	f7fe f9bb 	bl	80030d2 <__retarget_lock_acquire_recursive>
 8004d5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004d60:	f023 0320 	bic.w	r3, r3, #32
 8004d64:	0759      	lsls	r1, r3, #29
 8004d66:	81a3      	strh	r3, [r4, #12]
 8004d68:	b29a      	uxth	r2, r3
 8004d6a:	d42d      	bmi.n	8004dc8 <_ungetc_r+0xa4>
 8004d6c:	06d3      	lsls	r3, r2, #27
 8004d6e:	d413      	bmi.n	8004d98 <_ungetc_r+0x74>
 8004d70:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004d72:	07dd      	lsls	r5, r3, #31
 8004d74:	d4dc      	bmi.n	8004d30 <_ungetc_r+0xc>
 8004d76:	f412 7f00 	tst.w	r2, #512	; 0x200
 8004d7a:	d1d9      	bne.n	8004d30 <_ungetc_r+0xc>
 8004d7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004d7e:	f7fe f9a9 	bl	80030d4 <__retarget_lock_release_recursive>
 8004d82:	e7d5      	b.n	8004d30 <_ungetc_r+0xc>
 8004d84:	4b31      	ldr	r3, [pc, #196]	; (8004e4c <_ungetc_r+0x128>)
 8004d86:	429c      	cmp	r4, r3
 8004d88:	d101      	bne.n	8004d8e <_ungetc_r+0x6a>
 8004d8a:	68b4      	ldr	r4, [r6, #8]
 8004d8c:	e7dd      	b.n	8004d4a <_ungetc_r+0x26>
 8004d8e:	4b30      	ldr	r3, [pc, #192]	; (8004e50 <_ungetc_r+0x12c>)
 8004d90:	429c      	cmp	r4, r3
 8004d92:	bf08      	it	eq
 8004d94:	68f4      	ldreq	r4, [r6, #12]
 8004d96:	e7d8      	b.n	8004d4a <_ungetc_r+0x26>
 8004d98:	0710      	lsls	r0, r2, #28
 8004d9a:	d511      	bpl.n	8004dc0 <_ungetc_r+0x9c>
 8004d9c:	4621      	mov	r1, r4
 8004d9e:	4630      	mov	r0, r6
 8004da0:	f7fe f800 	bl	8002da4 <_fflush_r>
 8004da4:	b130      	cbz	r0, 8004db4 <_ungetc_r+0x90>
 8004da6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004da8:	07d9      	lsls	r1, r3, #31
 8004daa:	d4c1      	bmi.n	8004d30 <_ungetc_r+0xc>
 8004dac:	89a3      	ldrh	r3, [r4, #12]
 8004dae:	f413 7f00 	tst.w	r3, #512	; 0x200
 8004db2:	e7e2      	b.n	8004d7a <_ungetc_r+0x56>
 8004db4:	89a3      	ldrh	r3, [r4, #12]
 8004db6:	60a0      	str	r0, [r4, #8]
 8004db8:	f023 0308 	bic.w	r3, r3, #8
 8004dbc:	81a3      	strh	r3, [r4, #12]
 8004dbe:	61a0      	str	r0, [r4, #24]
 8004dc0:	89a3      	ldrh	r3, [r4, #12]
 8004dc2:	f043 0304 	orr.w	r3, r3, #4
 8004dc6:	81a3      	strh	r3, [r4, #12]
 8004dc8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004dca:	6862      	ldr	r2, [r4, #4]
 8004dcc:	b2ed      	uxtb	r5, r5
 8004dce:	b1d3      	cbz	r3, 8004e06 <_ungetc_r+0xe2>
 8004dd0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004dd2:	4293      	cmp	r3, r2
 8004dd4:	dc05      	bgt.n	8004de2 <_ungetc_r+0xbe>
 8004dd6:	4621      	mov	r1, r4
 8004dd8:	4630      	mov	r0, r6
 8004dda:	f7ff ff6b 	bl	8004cb4 <__submore>
 8004dde:	2800      	cmp	r0, #0
 8004de0:	d1e1      	bne.n	8004da6 <_ungetc_r+0x82>
 8004de2:	6823      	ldr	r3, [r4, #0]
 8004de4:	1e5a      	subs	r2, r3, #1
 8004de6:	6022      	str	r2, [r4, #0]
 8004de8:	f803 5c01 	strb.w	r5, [r3, #-1]
 8004dec:	6863      	ldr	r3, [r4, #4]
 8004dee:	3301      	adds	r3, #1
 8004df0:	6063      	str	r3, [r4, #4]
 8004df2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004df4:	07da      	lsls	r2, r3, #31
 8004df6:	d49d      	bmi.n	8004d34 <_ungetc_r+0x10>
 8004df8:	89a3      	ldrh	r3, [r4, #12]
 8004dfa:	059b      	lsls	r3, r3, #22
 8004dfc:	d49a      	bmi.n	8004d34 <_ungetc_r+0x10>
 8004dfe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004e00:	f7fe f968 	bl	80030d4 <__retarget_lock_release_recursive>
 8004e04:	e796      	b.n	8004d34 <_ungetc_r+0x10>
 8004e06:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8004e08:	6920      	ldr	r0, [r4, #16]
 8004e0a:	6823      	ldr	r3, [r4, #0]
 8004e0c:	f001 0101 	and.w	r1, r1, #1
 8004e10:	b160      	cbz	r0, 8004e2c <_ungetc_r+0x108>
 8004e12:	4298      	cmp	r0, r3
 8004e14:	d20a      	bcs.n	8004e2c <_ungetc_r+0x108>
 8004e16:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8004e1a:	42a8      	cmp	r0, r5
 8004e1c:	d106      	bne.n	8004e2c <_ungetc_r+0x108>
 8004e1e:	3b01      	subs	r3, #1
 8004e20:	3201      	adds	r2, #1
 8004e22:	6023      	str	r3, [r4, #0]
 8004e24:	6062      	str	r2, [r4, #4]
 8004e26:	2900      	cmp	r1, #0
 8004e28:	d184      	bne.n	8004d34 <_ungetc_r+0x10>
 8004e2a:	e7e5      	b.n	8004df8 <_ungetc_r+0xd4>
 8004e2c:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8004e30:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004e34:	6363      	str	r3, [r4, #52]	; 0x34
 8004e36:	2303      	movs	r3, #3
 8004e38:	63a3      	str	r3, [r4, #56]	; 0x38
 8004e3a:	4623      	mov	r3, r4
 8004e3c:	f803 5f46 	strb.w	r5, [r3, #70]!
 8004e40:	6023      	str	r3, [r4, #0]
 8004e42:	2301      	movs	r3, #1
 8004e44:	6063      	str	r3, [r4, #4]
 8004e46:	e7ee      	b.n	8004e26 <_ungetc_r+0x102>
 8004e48:	0800562c 	.word	0x0800562c
 8004e4c:	0800564c 	.word	0x0800564c
 8004e50:	0800560c 	.word	0x0800560c

08004e54 <_fstat_r>:
 8004e54:	b538      	push	{r3, r4, r5, lr}
 8004e56:	2300      	movs	r3, #0
 8004e58:	4d06      	ldr	r5, [pc, #24]	; (8004e74 <_fstat_r+0x20>)
 8004e5a:	4604      	mov	r4, r0
 8004e5c:	4608      	mov	r0, r1
 8004e5e:	4611      	mov	r1, r2
 8004e60:	602b      	str	r3, [r5, #0]
 8004e62:	f7fc f901 	bl	8001068 <_fstat>
 8004e66:	1c43      	adds	r3, r0, #1
 8004e68:	d102      	bne.n	8004e70 <_fstat_r+0x1c>
 8004e6a:	682b      	ldr	r3, [r5, #0]
 8004e6c:	b103      	cbz	r3, 8004e70 <_fstat_r+0x1c>
 8004e6e:	6023      	str	r3, [r4, #0]
 8004e70:	bd38      	pop	{r3, r4, r5, pc}
 8004e72:	bf00      	nop
 8004e74:	20000128 	.word	0x20000128

08004e78 <_isatty_r>:
 8004e78:	b538      	push	{r3, r4, r5, lr}
 8004e7a:	2300      	movs	r3, #0
 8004e7c:	4d05      	ldr	r5, [pc, #20]	; (8004e94 <_isatty_r+0x1c>)
 8004e7e:	4604      	mov	r4, r0
 8004e80:	4608      	mov	r0, r1
 8004e82:	602b      	str	r3, [r5, #0]
 8004e84:	f7fc f8ff 	bl	8001086 <_isatty>
 8004e88:	1c43      	adds	r3, r0, #1
 8004e8a:	d102      	bne.n	8004e92 <_isatty_r+0x1a>
 8004e8c:	682b      	ldr	r3, [r5, #0]
 8004e8e:	b103      	cbz	r3, 8004e92 <_isatty_r+0x1a>
 8004e90:	6023      	str	r3, [r4, #0]
 8004e92:	bd38      	pop	{r3, r4, r5, pc}
 8004e94:	20000128 	.word	0x20000128

08004e98 <memchr>:
 8004e98:	4603      	mov	r3, r0
 8004e9a:	b510      	push	{r4, lr}
 8004e9c:	b2c9      	uxtb	r1, r1
 8004e9e:	4402      	add	r2, r0
 8004ea0:	4293      	cmp	r3, r2
 8004ea2:	4618      	mov	r0, r3
 8004ea4:	d101      	bne.n	8004eaa <memchr+0x12>
 8004ea6:	2000      	movs	r0, #0
 8004ea8:	e003      	b.n	8004eb2 <memchr+0x1a>
 8004eaa:	7804      	ldrb	r4, [r0, #0]
 8004eac:	3301      	adds	r3, #1
 8004eae:	428c      	cmp	r4, r1
 8004eb0:	d1f6      	bne.n	8004ea0 <memchr+0x8>
 8004eb2:	bd10      	pop	{r4, pc}

08004eb4 <memcpy>:
 8004eb4:	440a      	add	r2, r1
 8004eb6:	4291      	cmp	r1, r2
 8004eb8:	f100 33ff 	add.w	r3, r0, #4294967295
 8004ebc:	d100      	bne.n	8004ec0 <memcpy+0xc>
 8004ebe:	4770      	bx	lr
 8004ec0:	b510      	push	{r4, lr}
 8004ec2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004ec6:	4291      	cmp	r1, r2
 8004ec8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004ecc:	d1f9      	bne.n	8004ec2 <memcpy+0xe>
 8004ece:	bd10      	pop	{r4, pc}

08004ed0 <memmove>:
 8004ed0:	4288      	cmp	r0, r1
 8004ed2:	b510      	push	{r4, lr}
 8004ed4:	eb01 0402 	add.w	r4, r1, r2
 8004ed8:	d902      	bls.n	8004ee0 <memmove+0x10>
 8004eda:	4284      	cmp	r4, r0
 8004edc:	4623      	mov	r3, r4
 8004ede:	d807      	bhi.n	8004ef0 <memmove+0x20>
 8004ee0:	1e43      	subs	r3, r0, #1
 8004ee2:	42a1      	cmp	r1, r4
 8004ee4:	d008      	beq.n	8004ef8 <memmove+0x28>
 8004ee6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004eea:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004eee:	e7f8      	b.n	8004ee2 <memmove+0x12>
 8004ef0:	4601      	mov	r1, r0
 8004ef2:	4402      	add	r2, r0
 8004ef4:	428a      	cmp	r2, r1
 8004ef6:	d100      	bne.n	8004efa <memmove+0x2a>
 8004ef8:	bd10      	pop	{r4, pc}
 8004efa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004efe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004f02:	e7f7      	b.n	8004ef4 <memmove+0x24>

08004f04 <_realloc_r>:
 8004f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f08:	4680      	mov	r8, r0
 8004f0a:	4614      	mov	r4, r2
 8004f0c:	460e      	mov	r6, r1
 8004f0e:	b921      	cbnz	r1, 8004f1a <_realloc_r+0x16>
 8004f10:	4611      	mov	r1, r2
 8004f12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004f16:	f7fe b94f 	b.w	80031b8 <_malloc_r>
 8004f1a:	b92a      	cbnz	r2, 8004f28 <_realloc_r+0x24>
 8004f1c:	f7fe f8e4 	bl	80030e8 <_free_r>
 8004f20:	4625      	mov	r5, r4
 8004f22:	4628      	mov	r0, r5
 8004f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f28:	f000 f81b 	bl	8004f62 <_malloc_usable_size_r>
 8004f2c:	4284      	cmp	r4, r0
 8004f2e:	4607      	mov	r7, r0
 8004f30:	d802      	bhi.n	8004f38 <_realloc_r+0x34>
 8004f32:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004f36:	d812      	bhi.n	8004f5e <_realloc_r+0x5a>
 8004f38:	4621      	mov	r1, r4
 8004f3a:	4640      	mov	r0, r8
 8004f3c:	f7fe f93c 	bl	80031b8 <_malloc_r>
 8004f40:	4605      	mov	r5, r0
 8004f42:	2800      	cmp	r0, #0
 8004f44:	d0ed      	beq.n	8004f22 <_realloc_r+0x1e>
 8004f46:	42bc      	cmp	r4, r7
 8004f48:	4622      	mov	r2, r4
 8004f4a:	4631      	mov	r1, r6
 8004f4c:	bf28      	it	cs
 8004f4e:	463a      	movcs	r2, r7
 8004f50:	f7ff ffb0 	bl	8004eb4 <memcpy>
 8004f54:	4631      	mov	r1, r6
 8004f56:	4640      	mov	r0, r8
 8004f58:	f7fe f8c6 	bl	80030e8 <_free_r>
 8004f5c:	e7e1      	b.n	8004f22 <_realloc_r+0x1e>
 8004f5e:	4635      	mov	r5, r6
 8004f60:	e7df      	b.n	8004f22 <_realloc_r+0x1e>

08004f62 <_malloc_usable_size_r>:
 8004f62:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004f66:	1f18      	subs	r0, r3, #4
 8004f68:	2b00      	cmp	r3, #0
 8004f6a:	bfbc      	itt	lt
 8004f6c:	580b      	ldrlt	r3, [r1, r0]
 8004f6e:	18c0      	addlt	r0, r0, r3
 8004f70:	4770      	bx	lr
	...

08004f74 <_init>:
 8004f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f76:	bf00      	nop
 8004f78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004f7a:	bc08      	pop	{r3}
 8004f7c:	469e      	mov	lr, r3
 8004f7e:	4770      	bx	lr

08004f80 <_fini>:
 8004f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f82:	bf00      	nop
 8004f84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004f86:	bc08      	pop	{r3}
 8004f88:	469e      	mov	lr, r3
 8004f8a:	4770      	bx	lr
